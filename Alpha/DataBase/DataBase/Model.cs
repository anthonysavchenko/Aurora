//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Customers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PrivateCounters), "PrivateCounterValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateCounterValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateCounters))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.DecFormsUploads), "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses), "FillForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.FillForms))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_FillFormPoses_FillForms", "FillForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.FillForms), "FillFormPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.FillFormPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_FillForms", "FillForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.FillForms), "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RouteFormPoses_RouteForms", "RouteForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RouteForms), "RouteFormPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RouteFormPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses), "RouteForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RouteForms))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_RouteForms", "RouteForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.RouteForms), "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsUploads_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "DecFormsUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsUploads))]

#endregion

namespace Taumis.Alpha.DataBase
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Buildings> Buildings
        {
            get
            {
                if ((_Buildings == null))
                {
                    _Buildings = base.CreateObjectSet<Buildings>("Buildings");
                }
                return _Buildings;
            }
        }
        private ObjectSet<Buildings> _Buildings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customers> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customers>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customers> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateCounters> PrivateCounters
        {
            get
            {
                if ((_PrivateCounters == null))
                {
                    _PrivateCounters = base.CreateObjectSet<PrivateCounters>("PrivateCounters");
                }
                return _PrivateCounters;
            }
        }
        private ObjectSet<PrivateCounters> _PrivateCounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateCounterValues> PrivateCounterValues
        {
            get
            {
                if ((_PrivateCounterValues == null))
                {
                    _PrivateCounterValues = base.CreateObjectSet<PrivateCounterValues>("PrivateCounterValues");
                }
                return _PrivateCounterValues;
            }
        }
        private ObjectSet<PrivateCounterValues> _PrivateCounterValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommonCounterCoefficients> CommonCounterCoefficients
        {
            get
            {
                if ((_CommonCounterCoefficients == null))
                {
                    _CommonCounterCoefficients = base.CreateObjectSet<CommonCounterCoefficients>("CommonCounterCoefficients");
                }
                return _CommonCounterCoefficients;
            }
        }
        private ObjectSet<CommonCounterCoefficients> _CommonCounterCoefficients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Settings> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Settings>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Settings> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DecFormsUploads> DecFormsUploads
        {
            get
            {
                if ((_DecFormsUploads == null))
                {
                    _DecFormsUploads = base.CreateObjectSet<DecFormsUploads>("DecFormsUploads");
                }
                return _DecFormsUploads;
            }
        }
        private ObjectSet<DecFormsUploads> _DecFormsUploads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DecFormsUploadPoses> DecFormsUploadPoses
        {
            get
            {
                if ((_DecFormsUploadPoses == null))
                {
                    _DecFormsUploadPoses = base.CreateObjectSet<DecFormsUploadPoses>("DecFormsUploadPoses");
                }
                return _DecFormsUploadPoses;
            }
        }
        private ObjectSet<DecFormsUploadPoses> _DecFormsUploadPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FillFormPoses> FillFormPoses
        {
            get
            {
                if ((_FillFormPoses == null))
                {
                    _FillFormPoses = base.CreateObjectSet<FillFormPoses>("FillFormPoses");
                }
                return _FillFormPoses;
            }
        }
        private ObjectSet<FillFormPoses> _FillFormPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FillForms> FillForms
        {
            get
            {
                if ((_FillForms == null))
                {
                    _FillForms = base.CreateObjectSet<FillForms>("FillForms");
                }
                return _FillForms;
            }
        }
        private ObjectSet<FillForms> _FillForms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RouteFormPoses> RouteFormPoses
        {
            get
            {
                if ((_RouteFormPoses == null))
                {
                    _RouteFormPoses = base.CreateObjectSet<RouteFormPoses>("RouteFormPoses");
                }
                return _RouteFormPoses;
            }
        }
        private ObjectSet<RouteFormPoses> _RouteFormPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RouteForms> RouteForms
        {
            get
            {
                if ((_RouteForms == null))
                {
                    _RouteForms = base.CreateObjectSet<RouteForms>("RouteForms");
                }
                return _RouteForms;
            }
        }
        private ObjectSet<RouteForms> _RouteForms;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Buildings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildings(Buildings buildings)
        {
            base.AddObject("Buildings", buildings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customers customers)
        {
            base.AddObject("Customers", customers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateCounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateCounters(PrivateCounters privateCounters)
        {
            base.AddObject("PrivateCounters", privateCounters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateCounterValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateCounterValues(PrivateCounterValues privateCounterValues)
        {
            base.AddObject("PrivateCounterValues", privateCounterValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommonCounterCoefficients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommonCounterCoefficients(CommonCounterCoefficients commonCounterCoefficients)
        {
            base.AddObject("CommonCounterCoefficients", commonCounterCoefficients);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Settings settings)
        {
            base.AddObject("Settings", settings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DecFormsUploads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDecFormsUploads(DecFormsUploads decFormsUploads)
        {
            base.AddObject("DecFormsUploads", decFormsUploads);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DecFormsUploadPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDecFormsUploadPoses(DecFormsUploadPoses decFormsUploadPoses)
        {
            base.AddObject("DecFormsUploadPoses", decFormsUploadPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FillFormPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFillFormPoses(FillFormPoses fillFormPoses)
        {
            base.AddObject("FillFormPoses", fillFormPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FillForms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFillForms(FillForms fillForms)
        {
            base.AddObject("FillForms", fillForms);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RouteFormPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRouteFormPoses(RouteFormPoses routeFormPoses)
        {
            base.AddObject("RouteFormPoses", routeFormPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RouteForms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRouteForms(RouteForms routeForms)
        {
            base.AddObject("RouteForms", routeForms);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="step">No Metadata Documentation available.</param>
        public int BackupDatabase(global::System.String name, global::System.String path, Nullable<global::System.Byte> step)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter stepParameter;
            if (step.HasValue)
            {
                stepParameter = new ObjectParameter("step", step);
            }
            else
            {
                stepParameter = new ObjectParameter("step", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction("BackupDatabase", nameParameter, pathParameter, stepParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Buildings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Buildings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Buildings object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static Buildings CreateBuildings(global::System.Int32 id, global::System.String street, global::System.String number)
        {
            Buildings buildings = new Buildings();
            buildings.ID = id;
            buildings.Street = street;
            buildings.Number = number;
            return buildings;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Customers")]
        public EntityCollection<Customers> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customers>("AlphaDataBaseModel.FK_Customers_Buildings", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customers>("AlphaDataBaseModel.FK_Customers_Buildings", "Customers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CommonCounterCoefficients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommonCounterCoefficients : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommonCounterCoefficients object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="coefficient">Initial value of the Coefficient property.</param>
        public static CommonCounterCoefficients CreateCommonCounterCoefficients(global::System.Int32 id, global::System.DateTime period, global::System.Decimal coefficient)
        {
            CommonCounterCoefficients commonCounterCoefficients = new CommonCounterCoefficients();
            commonCounterCoefficients.ID = id;
            commonCounterCoefficients.Period = period;
            commonCounterCoefficients.Coefficient = coefficient;
            return commonCounterCoefficients;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Coefficient
        {
            get
            {
                return _Coefficient;
            }
            set
            {
                OnCoefficientChanging(value);
                ReportPropertyChanging("Coefficient");
                _Coefficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coefficient");
                OnCoefficientChanged();
            }
        }
        private global::System.Decimal _Coefficient;
        partial void OnCoefficientChanging(global::System.Decimal value);
        partial void OnCoefficientChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Customers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="apartment">Initial value of the Apartment property.</param>
        public static Customers CreateCustomers(global::System.Int32 id, global::System.String apartment)
        {
            Customers customers = new Customers();
            customers.ID = id;
            customers.Apartment = apartment;
            return customers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "PrivateCounters")]
        public EntityCollection<PrivateCounters> PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "PrivateCounters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="DecFormsUploadPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DecFormsUploadPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DecFormsUploadPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="formType">Initial value of the FormType property.</param>
        public static DecFormsUploadPoses CreateDecFormsUploadPoses(global::System.Int32 id, global::System.String fileName, global::System.Byte formType)
        {
            DecFormsUploadPoses decFormsUploadPoses = new DecFormsUploadPoses();
            decFormsUploadPoses.ID = id;
            decFormsUploadPoses.FileName = fileName;
            decFormsUploadPoses.FormType = formType;
            return decFormsUploadPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte FormType
        {
            get
            {
                return _FormType;
            }
            set
            {
                OnFormTypeChanging(value);
                ReportPropertyChanging("FormType");
                _FormType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormType");
                OnFormTypeChanged();
            }
        }
        private global::System.Byte _FormType;
        partial void OnFormTypeChanging(global::System.Byte value);
        partial void OnFormTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Error
        {
            get
            {
                return _Error;
            }
            set
            {
                OnErrorChanging(value);
                ReportPropertyChanging("Error");
                _Error = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Error");
                OnErrorChanged();
            }
        }
        private global::System.String _Error;
        partial void OnErrorChanging(global::System.String value);
        partial void OnErrorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads")]
        public DecFormsUploads DecFormsUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DecFormsUploads> DecFormsUploadsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillForms_DecFormsUploadPoses", "FillForms")]
        public EntityCollection<FillForms> FillForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FillForms>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "FillForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FillForms>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "FillForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_FillForms", "FillForms")]
        public FillForms FillForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "FillForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "FillForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FillForms> FillFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "FillForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FillForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "FillForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteForms_DecFormsUploadPoses", "RouteForms")]
        public EntityCollection<RouteForms> RouteForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteForms>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "RouteForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteForms>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "RouteForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_RouteForms", "RouteForms")]
        public RouteForms RouteForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "RouteForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "RouteForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RouteForms> RouteFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "RouteForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RouteForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "RouteForms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="DecFormsUploads")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DecFormsUploads : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DecFormsUploads object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        public static DecFormsUploads CreateDecFormsUploads(global::System.Int32 id, global::System.DateTime created, global::System.DateTime month)
        {
            DecFormsUploads decFormsUploads = new DecFormsUploads();
            decFormsUploads.ID = id;
            decFormsUploads.Created = created;
            decFormsUploads.Month = month;
            return decFormsUploads;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploadPoses")]
        public EntityCollection<DecFormsUploadPoses> DecFormsUploadPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploadPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploads_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="FillFormPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FillFormPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FillFormPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="apartment">Initial value of the Apartment property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        public static FillFormPoses CreateFillFormPoses(global::System.Int32 id, global::System.String apartment, global::System.Byte counterType)
        {
            FillFormPoses fillFormPoses = new FillFormPoses();
            fillFormPoses.ID = id;
            fillFormPoses.Apartment = apartment;
            fillFormPoses.CounterType = counterType;
            return fillFormPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Byte _CounterType;
        partial void OnCounterTypeChanging(global::System.Byte value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterModel
        {
            get
            {
                return _CounterModel;
            }
            set
            {
                OnCounterModelChanging(value);
                ReportPropertyChanging("CounterModel");
                _CounterModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterModel");
                OnCounterModelChanged();
            }
        }
        private global::System.String _CounterModel;
        partial void OnCounterModelChanging(global::System.String value);
        partial void OnCounterModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.String _CounterNumber;
        partial void OnCounterNumberChanging(global::System.String value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PrevDate
        {
            get
            {
                return _PrevDate;
            }
            set
            {
                OnPrevDateChanging(value);
                ReportPropertyChanging("PrevDate");
                _PrevDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevDate");
                OnPrevDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PrevDate;
        partial void OnPrevDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPrevDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevValue;
        partial void OnPrevValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevDayValue
        {
            get
            {
                return _PrevDayValue;
            }
            set
            {
                OnPrevDayValueChanging(value);
                ReportPropertyChanging("PrevDayValue");
                _PrevDayValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevDayValue");
                OnPrevDayValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevDayValue;
        partial void OnPrevDayValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevDayValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevNightValue
        {
            get
            {
                return _PrevNightValue;
            }
            set
            {
                OnPrevNightValueChanging(value);
                ReportPropertyChanging("PrevNightValue");
                _PrevNightValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevNightValue");
                OnPrevNightValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevNightValue;
        partial void OnPrevNightValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevNightValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterCapacity
        {
            get
            {
                return _CounterCapacity;
            }
            set
            {
                OnCounterCapacityChanging(value);
                ReportPropertyChanging("CounterCapacity");
                _CounterCapacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterCapacity");
                OnCounterCapacityChanged();
            }
        }
        private global::System.String _CounterCapacity;
        partial void OnCounterCapacityChanging(global::System.String value);
        partial void OnCounterCapacityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillFormPoses_FillForms", "FillForms")]
        public FillForms FillForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FillForms> FillFormsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FillForms>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillForms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="FillForms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FillForms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FillForms object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="building">Initial value of the Building property.</param>
        public static FillForms CreateFillForms(global::System.Int32 id, global::System.String street, global::System.String building)
        {
            FillForms fillForms = new FillForms();
            fillForms.ID = id;
            fillForms.Street = street;
            fillForms.Building = building;
            return fillForms;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses")]
        public DecFormsUploadPoses DecFormsUploadPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DecFormsUploadPoses> DecFormsUploadPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillFormPoses_FillForms", "FillFormPoses")]
        public EntityCollection<FillFormPoses> FillFormPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FillFormPoses>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillFormPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FillFormPoses>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillFormPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_FillForms", "DecFormsUploadPoses")]
        public EntityCollection<DecFormsUploadPoses> DecFormsUploadPos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "DecFormsUploadPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateCounters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateCounters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateCounters object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static PrivateCounters CreatePrivateCounters(global::System.Int32 id, global::System.String model, global::System.String number)
        {
            PrivateCounters privateCounters = new PrivateCounters();
            privateCounters.ID = id;
            privateCounters.Model = model;
            privateCounters.Number = number;
            return privateCounters;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues")]
        public EntityCollection<PrivateCounterValues> PrivateCounterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateCounterValues>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateCounterValues>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateCounterValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateCounterValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateCounterValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static PrivateCounterValues CreatePrivateCounterValues(global::System.Int32 id, global::System.DateTime month, global::System.Decimal value)
        {
            PrivateCounterValues privateCounterValues = new PrivateCounterValues();
            privateCounterValues.ID = id;
            privateCounterValues.Month = month;
            privateCounterValues.Value = value;
            return privateCounterValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounters")]
        public PrivateCounters PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateCounters> PrivateCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RouteFormPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RouteFormPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RouteFormPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="apartment">Initial value of the Apartment property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        public static RouteFormPoses CreateRouteFormPoses(global::System.Int32 id, global::System.String apartment, global::System.Byte counterType)
        {
            RouteFormPoses routeFormPoses = new RouteFormPoses();
            routeFormPoses.ID = id;
            routeFormPoses.Apartment = apartment;
            routeFormPoses.CounterType = counterType;
            return routeFormPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Byte _CounterType;
        partial void OnCounterTypeChanging(global::System.Byte value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.String _CounterNumber;
        partial void OnCounterNumberChanging(global::System.String value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PrevDate
        {
            get
            {
                return _PrevDate;
            }
            set
            {
                OnPrevDateChanging(value);
                ReportPropertyChanging("PrevDate");
                _PrevDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevDate");
                OnPrevDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PrevDate;
        partial void OnPrevDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPrevDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevValue;
        partial void OnPrevValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevDayValue
        {
            get
            {
                return _PrevDayValue;
            }
            set
            {
                OnPrevDayValueChanging(value);
                ReportPropertyChanging("PrevDayValue");
                _PrevDayValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevDayValue");
                OnPrevDayValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevDayValue;
        partial void OnPrevDayValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevDayValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevNightValue
        {
            get
            {
                return _PrevNightValue;
            }
            set
            {
                OnPrevNightValueChanging(value);
                ReportPropertyChanging("PrevNightValue");
                _PrevNightValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevNightValue");
                OnPrevNightValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevNightValue;
        partial void OnPrevNightValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevNightValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterCapacity
        {
            get
            {
                return _CounterCapacity;
            }
            set
            {
                OnCounterCapacityChanging(value);
                ReportPropertyChanging("CounterCapacity");
                _CounterCapacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterCapacity");
                OnCounterCapacityChanged();
            }
        }
        private global::System.String _CounterCapacity;
        partial void OnCounterCapacityChanging(global::System.String value);
        partial void OnCounterCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Debt
        {
            get
            {
                return _Debt;
            }
            set
            {
                OnDebtChanging(value);
                ReportPropertyChanging("Debt");
                _Debt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Debt");
                OnDebtChanged();
            }
        }
        private global::System.String _Debt;
        partial void OnDebtChanging(global::System.String value);
        partial void OnDebtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payed
        {
            get
            {
                return _Payed;
            }
            set
            {
                OnPayedChanging(value);
                ReportPropertyChanging("Payed");
                _Payed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payed");
                OnPayedChanged();
            }
        }
        private global::System.String _Payed;
        partial void OnPayedChanging(global::System.String value);
        partial void OnPayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteFormPoses_RouteForms", "RouteForms")]
        public RouteForms RouteForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RouteForms> RouteFormsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RouteForms>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteForms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RouteForms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RouteForms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RouteForms object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="building">Initial value of the Building property.</param>
        public static RouteForms CreateRouteForms(global::System.Int32 id, global::System.String street, global::System.String building)
        {
            RouteForms routeForms = new RouteForms();
            routeForms.ID = id;
            routeForms.Street = street;
            routeForms.Building = building;
            return routeForms;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteFormPoses_RouteForms", "RouteFormPoses")]
        public EntityCollection<RouteFormPoses> RouteFormPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteFormPoses>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteFormPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteFormPoses>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteFormPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses")]
        public DecFormsUploadPoses DecFormsUploadPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DecFormsUploadPoses> DecFormsUploadPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_RouteForms", "DecFormsUploadPoses")]
        public EntityCollection<DecFormsUploadPoses> DecFormsUploadPos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "DecFormsUploadPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Settings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Settings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Settings object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Settings CreateSettings(global::System.Int32 id, global::System.String name, global::System.String value)
        {
            Settings settings = new Settings();
            settings.ID = id;
            settings.Name = name;
            settings.Value = value;
            return settings;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="aka">Initial value of the Aka property.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String login, global::System.String password, global::System.String aka)
        {
            Users users = new Users();
            users.ID = id;
            users.Login = login;
            users.Password = password;
            users.Aka = aka;
            return users;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Aka
        {
            get
            {
                return _Aka;
            }
            set
            {
                OnAkaChanging(value);
                ReportPropertyChanging("Aka");
                _Aka = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Aka");
                OnAkaChanged();
            }
        }
        private global::System.String _Aka;
        partial void OnAkaChanging(global::System.String value);
        partial void OnAkaChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploads_Users", "DecFormsUploads")]
        public EntityCollection<DecFormsUploads> DecFormsUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "DecFormsUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "DecFormsUploads", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
