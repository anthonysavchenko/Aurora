//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Customers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateCounters))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.DecFormsUploads), "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses), "FillForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.FillForms))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_FillFormPoses_FillForms", "FillForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.FillForms), "FillFormPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.FillFormPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_FillForms", "FillForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.FillForms), "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RouteFormPoses_RouteForms", "RouteForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RouteForms), "RouteFormPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RouteFormPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses), "RouteForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RouteForms))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_RouteForms", "RouteForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.RouteForms), "DecFormsUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsUploadPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsUploads_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "DecFormsUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsUploads))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DecFormsDownloads_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "DecFormsDownloads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DecFormsDownloads))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Attachments_Emails", "Emails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Emails), "Attachments", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Attachments))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Emails_DecFormsDownloads", "DecFormsDownloads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.DecFormsDownloads), "Emails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Emails))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RouteFormValues_PrivateCounters", "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PrivateCounters), "RouteFormValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RouteFormValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RouteFormValues_RouteFormPoses", "RouteFormPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RouteFormPoses), "RouteFormValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RouteFormValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_FillFormValues_FillFormPoses", "FillFormPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.FillFormPoses), "FillFormValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.FillFormValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_FillFormValues_PrivateCounters", "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PrivateCounters), "FillFormValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.FillFormValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PrivateCounters), "PrivateCounterValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateCounterValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateValuesFormPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PrivateValuesFormPoses), "PrivateCounterValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateCounterValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PrivateValuesForms), "PrivateValuesFormPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateValuesFormPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PrivateValuesUploads), "PrivateValuesForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateValuesForms))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateValuesUploads_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "PrivateValuesUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateValuesUploads))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingCounters_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "BuildingCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingCounters))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BuildingValuesUploads), "BuildingValuesUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingValuesUploadPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingValuesUploads_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "BuildingValuesUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingValuesUploads))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingCounterValues_BuildingCounters", "BuildingCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BuildingCounters), "BuildingCounterValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingCounterValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingValuesUploadPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BuildingValuesUploadPoses), "BuildingCounterValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingCounterValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationUploads_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "CalculationUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationUploads))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationFiles_CalculationUploads", "CalculationUploads", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CalculationUploads), "CalculationFiles", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationFiles))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationForms_CalculationFiles", "CalculationFiles", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CalculationFiles), "CalculationForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationForms))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationForms", "CalculationForms", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CalculationForms), "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationRows))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationBuildingCounters", "CalculationBuildingCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.CalculationBuildingCounters), "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationRows))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationBuildingInfos", "CalculationBuildingInfos", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.CalculationBuildingInfos), "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationRows))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationCustomers", "CalculationCustomers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.CalculationCustomers), "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationRows))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationLegalEntities", "CalculationLegalEntities", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.CalculationLegalEntities), "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationRows))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingCalculationValues_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "BuildingCalculationValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingCalculationValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingCalculationValues_CalculationRows", "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CalculationRows), "BuildingCalculationValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingCalculationValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationRows", "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.CalculationRows), "CalculationRows1", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CalculationRows))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BuildingCounters), "BuildingCounterCalculationValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingCounterCalculationValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BuildingCounterCalculationValues_CalculationRows", "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CalculationRows), "BuildingCounterCalculationValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BuildingCounterCalculationValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_LegalEntities_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "LegalEntities", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.LegalEntities))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_LegalEntityCalculationValue_CalculationRows", "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CalculationRows), "LegalEntityCalculationValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.LegalEntityCalculationValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_LegalEntityCalculationValues_LegalEntities", "LegalEntities", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.LegalEntities), "LegalEntityCalculationValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.LegalEntityCalculationValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CustomerCalculationValues_CalculationRows", "CalculationRows", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CalculationRows), "CustomerCalculationValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CustomerCalculationValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CustomerCalculationValues_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "CustomerCalculationValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CustomerCalculationValues))]

#endregion

namespace Taumis.Alpha.DataBase
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Buildings> Buildings
        {
            get
            {
                if ((_Buildings == null))
                {
                    _Buildings = base.CreateObjectSet<Buildings>("Buildings");
                }
                return _Buildings;
            }
        }
        private ObjectSet<Buildings> _Buildings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customers> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customers>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customers> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateCounters> PrivateCounters
        {
            get
            {
                if ((_PrivateCounters == null))
                {
                    _PrivateCounters = base.CreateObjectSet<PrivateCounters>("PrivateCounters");
                }
                return _PrivateCounters;
            }
        }
        private ObjectSet<PrivateCounters> _PrivateCounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Settings> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Settings>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Settings> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DecFormsUploads> DecFormsUploads
        {
            get
            {
                if ((_DecFormsUploads == null))
                {
                    _DecFormsUploads = base.CreateObjectSet<DecFormsUploads>("DecFormsUploads");
                }
                return _DecFormsUploads;
            }
        }
        private ObjectSet<DecFormsUploads> _DecFormsUploads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DecFormsUploadPoses> DecFormsUploadPoses
        {
            get
            {
                if ((_DecFormsUploadPoses == null))
                {
                    _DecFormsUploadPoses = base.CreateObjectSet<DecFormsUploadPoses>("DecFormsUploadPoses");
                }
                return _DecFormsUploadPoses;
            }
        }
        private ObjectSet<DecFormsUploadPoses> _DecFormsUploadPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FillFormPoses> FillFormPoses
        {
            get
            {
                if ((_FillFormPoses == null))
                {
                    _FillFormPoses = base.CreateObjectSet<FillFormPoses>("FillFormPoses");
                }
                return _FillFormPoses;
            }
        }
        private ObjectSet<FillFormPoses> _FillFormPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FillForms> FillForms
        {
            get
            {
                if ((_FillForms == null))
                {
                    _FillForms = base.CreateObjectSet<FillForms>("FillForms");
                }
                return _FillForms;
            }
        }
        private ObjectSet<FillForms> _FillForms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RouteFormPoses> RouteFormPoses
        {
            get
            {
                if ((_RouteFormPoses == null))
                {
                    _RouteFormPoses = base.CreateObjectSet<RouteFormPoses>("RouteFormPoses");
                }
                return _RouteFormPoses;
            }
        }
        private ObjectSet<RouteFormPoses> _RouteFormPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RouteForms> RouteForms
        {
            get
            {
                if ((_RouteForms == null))
                {
                    _RouteForms = base.CreateObjectSet<RouteForms>("RouteForms");
                }
                return _RouteForms;
            }
        }
        private ObjectSet<RouteForms> _RouteForms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DecFormsDownloads> DecFormsDownloads
        {
            get
            {
                if ((_DecFormsDownloads == null))
                {
                    _DecFormsDownloads = base.CreateObjectSet<DecFormsDownloads>("DecFormsDownloads");
                }
                return _DecFormsDownloads;
            }
        }
        private ObjectSet<DecFormsDownloads> _DecFormsDownloads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachments> Attachments
        {
            get
            {
                if ((_Attachments == null))
                {
                    _Attachments = base.CreateObjectSet<Attachments>("Attachments");
                }
                return _Attachments;
            }
        }
        private ObjectSet<Attachments> _Attachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Emails> Emails
        {
            get
            {
                if ((_Emails == null))
                {
                    _Emails = base.CreateObjectSet<Emails>("Emails");
                }
                return _Emails;
            }
        }
        private ObjectSet<Emails> _Emails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RouteFormValues> RouteFormValues
        {
            get
            {
                if ((_RouteFormValues == null))
                {
                    _RouteFormValues = base.CreateObjectSet<RouteFormValues>("RouteFormValues");
                }
                return _RouteFormValues;
            }
        }
        private ObjectSet<RouteFormValues> _RouteFormValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FillFormValues> FillFormValues
        {
            get
            {
                if ((_FillFormValues == null))
                {
                    _FillFormValues = base.CreateObjectSet<FillFormValues>("FillFormValues");
                }
                return _FillFormValues;
            }
        }
        private ObjectSet<FillFormValues> _FillFormValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateCounterValues> PrivateCounterValues
        {
            get
            {
                if ((_PrivateCounterValues == null))
                {
                    _PrivateCounterValues = base.CreateObjectSet<PrivateCounterValues>("PrivateCounterValues");
                }
                return _PrivateCounterValues;
            }
        }
        private ObjectSet<PrivateCounterValues> _PrivateCounterValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateValuesFormPoses> PrivateValuesFormPoses
        {
            get
            {
                if ((_PrivateValuesFormPoses == null))
                {
                    _PrivateValuesFormPoses = base.CreateObjectSet<PrivateValuesFormPoses>("PrivateValuesFormPoses");
                }
                return _PrivateValuesFormPoses;
            }
        }
        private ObjectSet<PrivateValuesFormPoses> _PrivateValuesFormPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateValuesForms> PrivateValuesForms
        {
            get
            {
                if ((_PrivateValuesForms == null))
                {
                    _PrivateValuesForms = base.CreateObjectSet<PrivateValuesForms>("PrivateValuesForms");
                }
                return _PrivateValuesForms;
            }
        }
        private ObjectSet<PrivateValuesForms> _PrivateValuesForms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateValuesUploads> PrivateValuesUploads
        {
            get
            {
                if ((_PrivateValuesUploads == null))
                {
                    _PrivateValuesUploads = base.CreateObjectSet<PrivateValuesUploads>("PrivateValuesUploads");
                }
                return _PrivateValuesUploads;
            }
        }
        private ObjectSet<PrivateValuesUploads> _PrivateValuesUploads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuildingCounters> BuildingCounters
        {
            get
            {
                if ((_BuildingCounters == null))
                {
                    _BuildingCounters = base.CreateObjectSet<BuildingCounters>("BuildingCounters");
                }
                return _BuildingCounters;
            }
        }
        private ObjectSet<BuildingCounters> _BuildingCounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuildingValuesUploadPoses> BuildingValuesUploadPoses
        {
            get
            {
                if ((_BuildingValuesUploadPoses == null))
                {
                    _BuildingValuesUploadPoses = base.CreateObjectSet<BuildingValuesUploadPoses>("BuildingValuesUploadPoses");
                }
                return _BuildingValuesUploadPoses;
            }
        }
        private ObjectSet<BuildingValuesUploadPoses> _BuildingValuesUploadPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuildingValuesUploads> BuildingValuesUploads
        {
            get
            {
                if ((_BuildingValuesUploads == null))
                {
                    _BuildingValuesUploads = base.CreateObjectSet<BuildingValuesUploads>("BuildingValuesUploads");
                }
                return _BuildingValuesUploads;
            }
        }
        private ObjectSet<BuildingValuesUploads> _BuildingValuesUploads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuildingCounterValues> BuildingCounterValues
        {
            get
            {
                if ((_BuildingCounterValues == null))
                {
                    _BuildingCounterValues = base.CreateObjectSet<BuildingCounterValues>("BuildingCounterValues");
                }
                return _BuildingCounterValues;
            }
        }
        private ObjectSet<BuildingCounterValues> _BuildingCounterValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationUploads> CalculationUploads
        {
            get
            {
                if ((_CalculationUploads == null))
                {
                    _CalculationUploads = base.CreateObjectSet<CalculationUploads>("CalculationUploads");
                }
                return _CalculationUploads;
            }
        }
        private ObjectSet<CalculationUploads> _CalculationUploads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationFiles> CalculationFiles
        {
            get
            {
                if ((_CalculationFiles == null))
                {
                    _CalculationFiles = base.CreateObjectSet<CalculationFiles>("CalculationFiles");
                }
                return _CalculationFiles;
            }
        }
        private ObjectSet<CalculationFiles> _CalculationFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationForms> CalculationForms
        {
            get
            {
                if ((_CalculationForms == null))
                {
                    _CalculationForms = base.CreateObjectSet<CalculationForms>("CalculationForms");
                }
                return _CalculationForms;
            }
        }
        private ObjectSet<CalculationForms> _CalculationForms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationRows> CalculationRows
        {
            get
            {
                if ((_CalculationRows == null))
                {
                    _CalculationRows = base.CreateObjectSet<CalculationRows>("CalculationRows");
                }
                return _CalculationRows;
            }
        }
        private ObjectSet<CalculationRows> _CalculationRows;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationBuildingCounters> CalculationBuildingCounters
        {
            get
            {
                if ((_CalculationBuildingCounters == null))
                {
                    _CalculationBuildingCounters = base.CreateObjectSet<CalculationBuildingCounters>("CalculationBuildingCounters");
                }
                return _CalculationBuildingCounters;
            }
        }
        private ObjectSet<CalculationBuildingCounters> _CalculationBuildingCounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationBuildingInfos> CalculationBuildingInfos
        {
            get
            {
                if ((_CalculationBuildingInfos == null))
                {
                    _CalculationBuildingInfos = base.CreateObjectSet<CalculationBuildingInfos>("CalculationBuildingInfos");
                }
                return _CalculationBuildingInfos;
            }
        }
        private ObjectSet<CalculationBuildingInfos> _CalculationBuildingInfos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationCustomers> CalculationCustomers
        {
            get
            {
                if ((_CalculationCustomers == null))
                {
                    _CalculationCustomers = base.CreateObjectSet<CalculationCustomers>("CalculationCustomers");
                }
                return _CalculationCustomers;
            }
        }
        private ObjectSet<CalculationCustomers> _CalculationCustomers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculationLegalEntities> CalculationLegalEntities
        {
            get
            {
                if ((_CalculationLegalEntities == null))
                {
                    _CalculationLegalEntities = base.CreateObjectSet<CalculationLegalEntities>("CalculationLegalEntities");
                }
                return _CalculationLegalEntities;
            }
        }
        private ObjectSet<CalculationLegalEntities> _CalculationLegalEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuildingCalculationValues> BuildingCalculationValues
        {
            get
            {
                if ((_BuildingCalculationValues == null))
                {
                    _BuildingCalculationValues = base.CreateObjectSet<BuildingCalculationValues>("BuildingCalculationValues");
                }
                return _BuildingCalculationValues;
            }
        }
        private ObjectSet<BuildingCalculationValues> _BuildingCalculationValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuildingCounterCalculationValues> BuildingCounterCalculationValues
        {
            get
            {
                if ((_BuildingCounterCalculationValues == null))
                {
                    _BuildingCounterCalculationValues = base.CreateObjectSet<BuildingCounterCalculationValues>("BuildingCounterCalculationValues");
                }
                return _BuildingCounterCalculationValues;
            }
        }
        private ObjectSet<BuildingCounterCalculationValues> _BuildingCounterCalculationValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalEntities> LegalEntities
        {
            get
            {
                if ((_LegalEntities == null))
                {
                    _LegalEntities = base.CreateObjectSet<LegalEntities>("LegalEntities");
                }
                return _LegalEntities;
            }
        }
        private ObjectSet<LegalEntities> _LegalEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalEntityCalculationValues> LegalEntityCalculationValues
        {
            get
            {
                if ((_LegalEntityCalculationValues == null))
                {
                    _LegalEntityCalculationValues = base.CreateObjectSet<LegalEntityCalculationValues>("LegalEntityCalculationValues");
                }
                return _LegalEntityCalculationValues;
            }
        }
        private ObjectSet<LegalEntityCalculationValues> _LegalEntityCalculationValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerCalculationValues> CustomerCalculationValues
        {
            get
            {
                if ((_CustomerCalculationValues == null))
                {
                    _CustomerCalculationValues = base.CreateObjectSet<CustomerCalculationValues>("CustomerCalculationValues");
                }
                return _CustomerCalculationValues;
            }
        }
        private ObjectSet<CustomerCalculationValues> _CustomerCalculationValues;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Buildings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildings(Buildings buildings)
        {
            base.AddObject("Buildings", buildings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customers customers)
        {
            base.AddObject("Customers", customers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateCounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateCounters(PrivateCounters privateCounters)
        {
            base.AddObject("PrivateCounters", privateCounters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Settings settings)
        {
            base.AddObject("Settings", settings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DecFormsUploads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDecFormsUploads(DecFormsUploads decFormsUploads)
        {
            base.AddObject("DecFormsUploads", decFormsUploads);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DecFormsUploadPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDecFormsUploadPoses(DecFormsUploadPoses decFormsUploadPoses)
        {
            base.AddObject("DecFormsUploadPoses", decFormsUploadPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FillFormPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFillFormPoses(FillFormPoses fillFormPoses)
        {
            base.AddObject("FillFormPoses", fillFormPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FillForms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFillForms(FillForms fillForms)
        {
            base.AddObject("FillForms", fillForms);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RouteFormPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRouteFormPoses(RouteFormPoses routeFormPoses)
        {
            base.AddObject("RouteFormPoses", routeFormPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RouteForms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRouteForms(RouteForms routeForms)
        {
            base.AddObject("RouteForms", routeForms);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DecFormsDownloads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDecFormsDownloads(DecFormsDownloads decFormsDownloads)
        {
            base.AddObject("DecFormsDownloads", decFormsDownloads);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachments(Attachments attachments)
        {
            base.AddObject("Attachments", attachments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Emails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmails(Emails emails)
        {
            base.AddObject("Emails", emails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RouteFormValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRouteFormValues(RouteFormValues routeFormValues)
        {
            base.AddObject("RouteFormValues", routeFormValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FillFormValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFillFormValues(FillFormValues fillFormValues)
        {
            base.AddObject("FillFormValues", fillFormValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateCounterValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateCounterValues(PrivateCounterValues privateCounterValues)
        {
            base.AddObject("PrivateCounterValues", privateCounterValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateValuesFormPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateValuesFormPoses(PrivateValuesFormPoses privateValuesFormPoses)
        {
            base.AddObject("PrivateValuesFormPoses", privateValuesFormPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateValuesForms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateValuesForms(PrivateValuesForms privateValuesForms)
        {
            base.AddObject("PrivateValuesForms", privateValuesForms);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateValuesUploads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateValuesUploads(PrivateValuesUploads privateValuesUploads)
        {
            base.AddObject("PrivateValuesUploads", privateValuesUploads);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuildingCounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildingCounters(BuildingCounters buildingCounters)
        {
            base.AddObject("BuildingCounters", buildingCounters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuildingValuesUploadPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildingValuesUploadPoses(BuildingValuesUploadPoses buildingValuesUploadPoses)
        {
            base.AddObject("BuildingValuesUploadPoses", buildingValuesUploadPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuildingValuesUploads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildingValuesUploads(BuildingValuesUploads buildingValuesUploads)
        {
            base.AddObject("BuildingValuesUploads", buildingValuesUploads);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuildingCounterValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildingCounterValues(BuildingCounterValues buildingCounterValues)
        {
            base.AddObject("BuildingCounterValues", buildingCounterValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationUploads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationUploads(CalculationUploads calculationUploads)
        {
            base.AddObject("CalculationUploads", calculationUploads);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationFiles(CalculationFiles calculationFiles)
        {
            base.AddObject("CalculationFiles", calculationFiles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationForms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationForms(CalculationForms calculationForms)
        {
            base.AddObject("CalculationForms", calculationForms);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationRows EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationRows(CalculationRows calculationRows)
        {
            base.AddObject("CalculationRows", calculationRows);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationBuildingCounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationBuildingCounters(CalculationBuildingCounters calculationBuildingCounters)
        {
            base.AddObject("CalculationBuildingCounters", calculationBuildingCounters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationBuildingInfos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationBuildingInfos(CalculationBuildingInfos calculationBuildingInfos)
        {
            base.AddObject("CalculationBuildingInfos", calculationBuildingInfos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationCustomers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationCustomers(CalculationCustomers calculationCustomers)
        {
            base.AddObject("CalculationCustomers", calculationCustomers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculationLegalEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculationLegalEntities(CalculationLegalEntities calculationLegalEntities)
        {
            base.AddObject("CalculationLegalEntities", calculationLegalEntities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuildingCalculationValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildingCalculationValues(BuildingCalculationValues buildingCalculationValues)
        {
            base.AddObject("BuildingCalculationValues", buildingCalculationValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuildingCounterCalculationValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildingCounterCalculationValues(BuildingCounterCalculationValues buildingCounterCalculationValues)
        {
            base.AddObject("BuildingCounterCalculationValues", buildingCounterCalculationValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalEntities(LegalEntities legalEntities)
        {
            base.AddObject("LegalEntities", legalEntities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalEntityCalculationValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalEntityCalculationValues(LegalEntityCalculationValues legalEntityCalculationValues)
        {
            base.AddObject("LegalEntityCalculationValues", legalEntityCalculationValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerCalculationValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerCalculationValues(CustomerCalculationValues customerCalculationValues)
        {
            base.AddObject("CustomerCalculationValues", customerCalculationValues);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="step">No Metadata Documentation available.</param>
        public int BackupDatabase(global::System.String name, global::System.String path, Nullable<global::System.Byte> step)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter stepParameter;
            if (step.HasValue)
            {
                stepParameter = new ObjectParameter("step", step);
            }
            else
            {
                stepParameter = new ObjectParameter("step", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction("BackupDatabase", nameParameter, pathParameter, stepParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Attachments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachments object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Attachments CreateAttachments(global::System.Int32 id)
        {
            Attachments attachments = new Attachments();
            attachments.ID = id;
            return attachments;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Attachments_Emails", "Emails")]
        public Emails Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Emails>("AlphaDataBaseModel.FK_Attachments_Emails", "Emails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Emails>("AlphaDataBaseModel.FK_Attachments_Emails", "Emails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Emails> EmailsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Emails>("AlphaDataBaseModel.FK_Attachments_Emails", "Emails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Emails>("AlphaDataBaseModel.FK_Attachments_Emails", "Emails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BuildingCalculationValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuildingCalculationValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuildingCalculationValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="contract">Initial value of the Contract property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="calculationMethod">Initial value of the CalculationMethod property.</param>
        /// <param name="collectiveVolume">Initial value of the CollectiveVolume property.</param>
        public static BuildingCalculationValues CreateBuildingCalculationValues(global::System.Int32 id, global::System.Byte contract, global::System.DateTime month, global::System.Byte calculationMethod, global::System.Decimal collectiveVolume)
        {
            BuildingCalculationValues buildingCalculationValues = new BuildingCalculationValues();
            buildingCalculationValues.ID = id;
            buildingCalculationValues.Contract = contract;
            buildingCalculationValues.Month = month;
            buildingCalculationValues.CalculationMethod = calculationMethod;
            buildingCalculationValues.CollectiveVolume = collectiveVolume;
            return buildingCalculationValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Contract
        {
            get
            {
                return _Contract;
            }
            set
            {
                OnContractChanging(value);
                ReportPropertyChanging("Contract");
                _Contract = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Contract");
                OnContractChanged();
            }
        }
        private global::System.Byte _Contract;
        partial void OnContractChanging(global::System.Byte value);
        partial void OnContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CalculationMethod
        {
            get
            {
                return _CalculationMethod;
            }
            set
            {
                OnCalculationMethodChanging(value);
                ReportPropertyChanging("CalculationMethod");
                _CalculationMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculationMethod");
                OnCalculationMethodChanged();
            }
        }
        private global::System.Byte _CalculationMethod;
        partial void OnCalculationMethodChanging(global::System.Byte value);
        partial void OnCalculationMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Debt
        {
            get
            {
                return _Debt;
            }
            set
            {
                OnDebtChanging(value);
                ReportPropertyChanging("Debt");
                _Debt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Debt");
                OnDebtChanged();
            }
        }
        private Nullable<global::System.Decimal> _Debt;
        partial void OnDebtChanging(Nullable<global::System.Decimal> value);
        partial void OnDebtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Decimal> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Norm
        {
            get
            {
                return _Norm;
            }
            set
            {
                OnNormChanging(value);
                ReportPropertyChanging("Norm");
                _Norm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Norm");
                OnNormChanged();
            }
        }
        private Nullable<global::System.Decimal> _Norm;
        partial void OnNormChanging(Nullable<global::System.Decimal> value);
        partial void OnNormChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CollectiveVolume
        {
            get
            {
                return _CollectiveVolume;
            }
            set
            {
                OnCollectiveVolumeChanging(value);
                ReportPropertyChanging("CollectiveVolume");
                _CollectiveVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectiveVolume");
                OnCollectiveVolumeChanged();
            }
        }
        private global::System.Decimal _CollectiveVolume;
        partial void OnCollectiveVolumeChanging(global::System.Decimal value);
        partial void OnCollectiveVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CollectiveSquare
        {
            get
            {
                return _CollectiveSquare;
            }
            set
            {
                OnCollectiveSquareChanging(value);
                ReportPropertyChanging("CollectiveSquare");
                _CollectiveSquare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectiveSquare");
                OnCollectiveSquareChanged();
            }
        }
        private Nullable<global::System.Decimal> _CollectiveSquare;
        partial void OnCollectiveSquareChanging(Nullable<global::System.Decimal> value);
        partial void OnCollectiveSquareChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCalculationValues_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_BuildingCalculationValues_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_BuildingCalculationValues_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_BuildingCalculationValues_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_BuildingCalculationValues_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCalculationValues_CalculationRows", "CalculationRows")]
        public CalculationRows CalculationRows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_BuildingCalculationValues_CalculationRows", "CalculationRows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_BuildingCalculationValues_CalculationRows", "CalculationRows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationRows> CalculationRowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_BuildingCalculationValues_CalculationRows", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_BuildingCalculationValues_CalculationRows", "CalculationRows", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BuildingCounterCalculationValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuildingCounterCalculationValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuildingCounterCalculationValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="prevValue">Initial value of the PrevValue property.</param>
        /// <param name="currentValue">Initial value of the CurrentValue property.</param>
        public static BuildingCounterCalculationValues CreateBuildingCounterCalculationValues(global::System.Int32 id, global::System.DateTime month, global::System.Decimal prevValue, global::System.Decimal currentValue)
        {
            BuildingCounterCalculationValues buildingCounterCalculationValues = new BuildingCounterCalculationValues();
            buildingCounterCalculationValues.ID = id;
            buildingCounterCalculationValues.Month = month;
            buildingCounterCalculationValues.PrevValue = prevValue;
            buildingCounterCalculationValues.CurrentValue = currentValue;
            return buildingCounterCalculationValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private global::System.Decimal _PrevValue;
        partial void OnPrevValueChanging(global::System.Decimal value);
        partial void OnPrevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CurrentValue
        {
            get
            {
                return _CurrentValue;
            }
            set
            {
                OnCurrentValueChanging(value);
                ReportPropertyChanging("CurrentValue");
                _CurrentValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentValue");
                OnCurrentValueChanged();
            }
        }
        private global::System.Decimal _CurrentValue;
        partial void OnCurrentValueChanging(global::System.Decimal value);
        partial void OnCurrentValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounters")]
        public BuildingCounters BuildingCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BuildingCounters> BuildingCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounterCalculationValues_CalculationRows", "CalculationRows")]
        public CalculationRows CalculationRows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_CalculationRows", "CalculationRows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_CalculationRows", "CalculationRows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationRows> CalculationRowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_CalculationRows", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_CalculationRows", "CalculationRows", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BuildingCounters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuildingCounters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuildingCounters object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="counterNumber">Initial value of the CounterNumber property.</param>
        /// <param name="utilityService">Initial value of the UtilityService property.</param>
        /// <param name="coefficient">Initial value of the Coefficient property.</param>
        public static BuildingCounters CreateBuildingCounters(global::System.Int32 id, global::System.String counterNumber, global::System.Byte utilityService, global::System.Byte coefficient)
        {
            BuildingCounters buildingCounters = new BuildingCounters();
            buildingCounters.ID = id;
            buildingCounters.CounterNumber = counterNumber;
            buildingCounters.UtilityService = utilityService;
            buildingCounters.Coefficient = coefficient;
            return buildingCounters;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.String _CounterNumber;
        partial void OnCounterNumberChanging(global::System.String value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte UtilityService
        {
            get
            {
                return _UtilityService;
            }
            set
            {
                OnUtilityServiceChanging(value);
                ReportPropertyChanging("UtilityService");
                _UtilityService = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UtilityService");
                OnUtilityServiceChanged();
            }
        }
        private global::System.Byte _UtilityService;
        partial void OnUtilityServiceChanging(global::System.Byte value);
        partial void OnUtilityServiceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Coefficient
        {
            get
            {
                return _Coefficient;
            }
            set
            {
                OnCoefficientChanging(value);
                ReportPropertyChanging("Coefficient");
                _Coefficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coefficient");
                OnCoefficientChanged();
            }
        }
        private global::System.Byte _Coefficient;
        partial void OnCoefficientChanging(global::System.Byte value);
        partial void OnCoefficientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CheckedSince
        {
            get
            {
                return _CheckedSince;
            }
            set
            {
                OnCheckedSinceChanging(value);
                ReportPropertyChanging("CheckedSince");
                _CheckedSince = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckedSince");
                OnCheckedSinceChanged();
            }
        }
        private Nullable<global::System.DateTime> _CheckedSince;
        partial void OnCheckedSinceChanging(Nullable<global::System.DateTime> value);
        partial void OnCheckedSinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CheckedTill
        {
            get
            {
                return _CheckedTill;
            }
            set
            {
                OnCheckedTillChanging(value);
                ReportPropertyChanging("CheckedTill");
                _CheckedTill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckedTill");
                OnCheckedTillChanged();
            }
        }
        private Nullable<global::System.DateTime> _CheckedTill;
        partial void OnCheckedTillChanging(Nullable<global::System.DateTime> value);
        partial void OnCheckedTillChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounters_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_BuildingCounters_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_BuildingCounters_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_BuildingCounters_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_BuildingCounters_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounterValues_BuildingCounters", "BuildingCounterValues")]
        public EntityCollection<BuildingCounterValues> BuildingCounterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingCounterValues>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingCounters", "BuildingCounterValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingCounterValues>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingCounters", "BuildingCounterValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounterCalculationValues")]
        public EntityCollection<BuildingCounterCalculationValues> BuildingCounterCalculationValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingCounterCalculationValues>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounterCalculationValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingCounterCalculationValues>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_BuildingCounters", "BuildingCounterCalculationValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BuildingCounterValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuildingCounterValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuildingCounterValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        public static BuildingCounterValues CreateBuildingCounterValues(global::System.Int32 id, global::System.DateTime month)
        {
            BuildingCounterValues buildingCounterValues = new BuildingCounterValues();
            buildingCounterValues.ID = id;
            buildingCounterValues.Month = month;
            return buildingCounterValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _PrevValue;
        partial void OnPrevValueChanging(Nullable<global::System.Decimal> value);
        partial void OnPrevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CurrentValue
        {
            get
            {
                return _CurrentValue;
            }
            set
            {
                OnCurrentValueChanging(value);
                ReportPropertyChanging("CurrentValue");
                _CurrentValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentValue");
                OnCurrentValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _CurrentValue;
        partial void OnCurrentValueChanging(Nullable<global::System.Decimal> value);
        partial void OnCurrentValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CurrentDate
        {
            get
            {
                return _CurrentDate;
            }
            set
            {
                OnCurrentDateChanging(value);
                ReportPropertyChanging("CurrentDate");
                _CurrentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentDate");
                OnCurrentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CurrentDate;
        partial void OnCurrentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCurrentDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounterValues_BuildingCounters", "BuildingCounters")]
        public BuildingCounters BuildingCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingCounters", "BuildingCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingCounters", "BuildingCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BuildingCounters> BuildingCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingCounters", "BuildingCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingCounters", "BuildingCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingValuesUploadPoses")]
        public BuildingValuesUploadPoses BuildingValuesUploadPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingValuesUploadPoses>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingValuesUploadPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingValuesUploadPoses>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingValuesUploadPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BuildingValuesUploadPoses> BuildingValuesUploadPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingValuesUploadPoses>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingValuesUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BuildingValuesUploadPoses>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingValuesUploadPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Buildings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Buildings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Buildings object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="buildingContract">Initial value of the BuildingContract property.</param>
        /// <param name="normCoefficient">Initial value of the NormCoefficient property.</param>
        /// <param name="collectiveSquare">Initial value of the CollectiveSquare property.</param>
        public static Buildings CreateBuildings(global::System.Int32 id, global::System.String street, global::System.String number, global::System.Byte buildingContract, global::System.Decimal normCoefficient, global::System.Decimal collectiveSquare)
        {
            Buildings buildings = new Buildings();
            buildings.ID = id;
            buildings.Street = street;
            buildings.Number = number;
            buildings.BuildingContract = buildingContract;
            buildings.NormCoefficient = normCoefficient;
            buildings.CollectiveSquare = collectiveSquare;
            return buildings;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte BuildingContract
        {
            get
            {
                return _BuildingContract;
            }
            set
            {
                OnBuildingContractChanging(value);
                ReportPropertyChanging("BuildingContract");
                _BuildingContract = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingContract");
                OnBuildingContractChanged();
            }
        }
        private global::System.Byte _BuildingContract;
        partial void OnBuildingContractChanging(global::System.Byte value);
        partial void OnBuildingContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NormCoefficient
        {
            get
            {
                return _NormCoefficient;
            }
            set
            {
                OnNormCoefficientChanging(value);
                ReportPropertyChanging("NormCoefficient");
                _NormCoefficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NormCoefficient");
                OnNormCoefficientChanged();
            }
        }
        private global::System.Decimal _NormCoefficient;
        partial void OnNormCoefficientChanging(global::System.Decimal value);
        partial void OnNormCoefficientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CollectiveSquare
        {
            get
            {
                return _CollectiveSquare;
            }
            set
            {
                OnCollectiveSquareChanging(value);
                ReportPropertyChanging("CollectiveSquare");
                _CollectiveSquare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectiveSquare");
                OnCollectiveSquareChanged();
            }
        }
        private global::System.Decimal _CollectiveSquare;
        partial void OnCollectiveSquareChanging(global::System.Decimal value);
        partial void OnCollectiveSquareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Customers")]
        public EntityCollection<Customers> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customers>("AlphaDataBaseModel.FK_Customers_Buildings", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customers>("AlphaDataBaseModel.FK_Customers_Buildings", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounters_Buildings", "BuildingCounters")]
        public EntityCollection<BuildingCounters> BuildingCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounters_Buildings", "BuildingCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingCounters>("AlphaDataBaseModel.FK_BuildingCounters_Buildings", "BuildingCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCalculationValues_Buildings", "BuildingCalculationValues")]
        public EntityCollection<BuildingCalculationValues> BuildingCalculationValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingCalculationValues>("AlphaDataBaseModel.FK_BuildingCalculationValues_Buildings", "BuildingCalculationValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingCalculationValues>("AlphaDataBaseModel.FK_BuildingCalculationValues_Buildings", "BuildingCalculationValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_LegalEntities_Buildings", "LegalEntities")]
        public EntityCollection<LegalEntities> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntities>("AlphaDataBaseModel.FK_LegalEntities_Buildings", "LegalEntities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntities>("AlphaDataBaseModel.FK_LegalEntities_Buildings", "LegalEntities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BuildingValuesUploadPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuildingValuesUploadPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuildingValuesUploadPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static BuildingValuesUploadPoses CreateBuildingValuesUploadPoses(global::System.Int32 id)
        {
            BuildingValuesUploadPoses buildingValuesUploadPoses = new BuildingValuesUploadPoses();
            buildingValuesUploadPoses.ID = id;
            return buildingValuesUploadPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.String _CounterNumber;
        partial void OnCounterNumberChanging(global::System.String value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Coefficient
        {
            get
            {
                return _Coefficient;
            }
            set
            {
                OnCoefficientChanging(value);
                ReportPropertyChanging("Coefficient");
                _Coefficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coefficient");
                OnCoefficientChanged();
            }
        }
        private Nullable<global::System.Byte> _Coefficient;
        partial void OnCoefficientChanging(Nullable<global::System.Byte> value);
        partial void OnCoefficientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CurrentValue
        {
            get
            {
                return _CurrentValue;
            }
            set
            {
                OnCurrentValueChanging(value);
                ReportPropertyChanging("CurrentValue");
                _CurrentValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentValue");
                OnCurrentValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _CurrentValue;
        partial void OnCurrentValueChanging(Nullable<global::System.Decimal> value);
        partial void OnCurrentValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _PrevValue;
        partial void OnPrevValueChanging(Nullable<global::System.Decimal> value);
        partial void OnPrevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CurrentDate
        {
            get
            {
                return _CurrentDate;
            }
            set
            {
                OnCurrentDateChanging(value);
                ReportPropertyChanging("CurrentDate");
                _CurrentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentDate");
                OnCurrentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CurrentDate;
        partial void OnCurrentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCurrentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploads")]
        public BuildingValuesUploads BuildingValuesUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingValuesUploads>("AlphaDataBaseModel.FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploads").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingValuesUploads>("AlphaDataBaseModel.FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploads").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BuildingValuesUploads> BuildingValuesUploadsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildingValuesUploads>("AlphaDataBaseModel.FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BuildingValuesUploads>("AlphaDataBaseModel.FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingCounterValues")]
        public EntityCollection<BuildingCounterValues> BuildingCounterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingCounterValues>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingCounterValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingCounterValues>("AlphaDataBaseModel.FK_BuildingCounterValues_BuildingValuesUploadPoses", "BuildingCounterValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BuildingValuesUploads")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuildingValuesUploads : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuildingValuesUploads object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="filePath">Initial value of the FilePath property.</param>
        public static BuildingValuesUploads CreateBuildingValuesUploads(global::System.Int32 id, global::System.DateTime created, global::System.DateTime month, global::System.String filePath)
        {
            BuildingValuesUploads buildingValuesUploads = new BuildingValuesUploads();
            buildingValuesUploads.ID = id;
            buildingValuesUploads.Created = created;
            buildingValuesUploads.Month = month;
            buildingValuesUploads.FilePath = filePath;
            return buildingValuesUploads;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploadPoses")]
        public EntityCollection<BuildingValuesUploadPoses> BuildingValuesUploadPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingValuesUploadPoses>("AlphaDataBaseModel.FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingValuesUploadPoses>("AlphaDataBaseModel.FK_BuildingValuesUploadPoses_BuildingValuesUploads", "BuildingValuesUploadPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingValuesUploads_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_BuildingValuesUploads_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_BuildingValuesUploads_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_BuildingValuesUploads_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_BuildingValuesUploads_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CalculationBuildingCounters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationBuildingCounters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationBuildingCounters object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="counterNumber">Initial value of the CounterNumber property.</param>
        /// <param name="coefficient">Initial value of the Coefficient property.</param>
        /// <param name="currentValue">Initial value of the CurrentValue property.</param>
        /// <param name="prevValue">Initial value of the PrevValue property.</param>
        public static CalculationBuildingCounters CreateCalculationBuildingCounters(global::System.Int32 id, global::System.String counterNumber, global::System.Byte coefficient, global::System.Decimal currentValue, global::System.Decimal prevValue)
        {
            CalculationBuildingCounters calculationBuildingCounters = new CalculationBuildingCounters();
            calculationBuildingCounters.ID = id;
            calculationBuildingCounters.CounterNumber = counterNumber;
            calculationBuildingCounters.Coefficient = coefficient;
            calculationBuildingCounters.CurrentValue = currentValue;
            calculationBuildingCounters.PrevValue = prevValue;
            return calculationBuildingCounters;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.String _CounterNumber;
        partial void OnCounterNumberChanging(global::System.String value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Coefficient
        {
            get
            {
                return _Coefficient;
            }
            set
            {
                OnCoefficientChanging(value);
                ReportPropertyChanging("Coefficient");
                _Coefficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coefficient");
                OnCoefficientChanged();
            }
        }
        private global::System.Byte _Coefficient;
        partial void OnCoefficientChanging(global::System.Byte value);
        partial void OnCoefficientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CurrentValue
        {
            get
            {
                return _CurrentValue;
            }
            set
            {
                OnCurrentValueChanging(value);
                ReportPropertyChanging("CurrentValue");
                _CurrentValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentValue");
                OnCurrentValueChanged();
            }
        }
        private global::System.Decimal _CurrentValue;
        partial void OnCurrentValueChanging(global::System.Decimal value);
        partial void OnCurrentValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private global::System.Decimal _PrevValue;
        partial void OnPrevValueChanging(global::System.Decimal value);
        partial void OnPrevValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationBuildingCounters", "CalculationRows")]
        public EntityCollection<CalculationRows> CalculationRow
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingCounters", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingCounters", "CalculationRows", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CalculationBuildingInfos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationBuildingInfos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationBuildingInfos object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="rowType">Initial value of the RowType property.</param>
        public static CalculationBuildingInfos CreateCalculationBuildingInfos(global::System.Int32 id, global::System.Byte rowType)
        {
            CalculationBuildingInfos calculationBuildingInfos = new CalculationBuildingInfos();
            calculationBuildingInfos.ID = id;
            calculationBuildingInfos.RowType = rowType;
            return calculationBuildingInfos;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte RowType
        {
            get
            {
                return _RowType;
            }
            set
            {
                OnRowTypeChanging(value);
                ReportPropertyChanging("RowType");
                _RowType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowType");
                OnRowTypeChanged();
            }
        }
        private global::System.Byte _RowType;
        partial void OnRowTypeChanging(global::System.Byte value);
        partial void OnRowTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> CalculationMethod
        {
            get
            {
                return _CalculationMethod;
            }
            set
            {
                OnCalculationMethodChanging(value);
                ReportPropertyChanging("CalculationMethod");
                _CalculationMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculationMethod");
                OnCalculationMethodChanged();
            }
        }
        private Nullable<global::System.Byte> _CalculationMethod;
        partial void OnCalculationMethodChanging(Nullable<global::System.Byte> value);
        partial void OnCalculationMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Debt
        {
            get
            {
                return _Debt;
            }
            set
            {
                OnDebtChanging(value);
                ReportPropertyChanging("Debt");
                _Debt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Debt");
                OnDebtChanged();
            }
        }
        private Nullable<global::System.Decimal> _Debt;
        partial void OnDebtChanging(Nullable<global::System.Decimal> value);
        partial void OnDebtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Decimal> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Norm
        {
            get
            {
                return _Norm;
            }
            set
            {
                OnNormChanging(value);
                ReportPropertyChanging("Norm");
                _Norm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Norm");
                OnNormChanged();
            }
        }
        private Nullable<global::System.Decimal> _Norm;
        partial void OnNormChanging(Nullable<global::System.Decimal> value);
        partial void OnNormChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CollectiveVolume
        {
            get
            {
                return _CollectiveVolume;
            }
            set
            {
                OnCollectiveVolumeChanging(value);
                ReportPropertyChanging("CollectiveVolume");
                _CollectiveVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectiveVolume");
                OnCollectiveVolumeChanged();
            }
        }
        private Nullable<global::System.Decimal> _CollectiveVolume;
        partial void OnCollectiveVolumeChanging(Nullable<global::System.Decimal> value);
        partial void OnCollectiveVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NotDistributedVolume
        {
            get
            {
                return _NotDistributedVolume;
            }
            set
            {
                OnNotDistributedVolumeChanging(value);
                ReportPropertyChanging("NotDistributedVolume");
                _NotDistributedVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotDistributedVolume");
                OnNotDistributedVolumeChanged();
            }
        }
        private Nullable<global::System.Decimal> _NotDistributedVolume;
        partial void OnNotDistributedVolumeChanging(Nullable<global::System.Decimal> value);
        partial void OnNotDistributedVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CollectiveSquare
        {
            get
            {
                return _CollectiveSquare;
            }
            set
            {
                OnCollectiveSquareChanging(value);
                ReportPropertyChanging("CollectiveSquare");
                _CollectiveSquare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectiveSquare");
                OnCollectiveSquareChanged();
            }
        }
        private Nullable<global::System.Decimal> _CollectiveSquare;
        partial void OnCollectiveSquareChanging(Nullable<global::System.Decimal> value);
        partial void OnCollectiveSquareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PeriodVolume
        {
            get
            {
                return _PeriodVolume;
            }
            set
            {
                OnPeriodVolumeChanging(value);
                ReportPropertyChanging("PeriodVolume");
                _PeriodVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodVolume");
                OnPeriodVolumeChanged();
            }
        }
        private Nullable<global::System.Decimal> _PeriodVolume;
        partial void OnPeriodVolumeChanging(Nullable<global::System.Decimal> value);
        partial void OnPeriodVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Rest
        {
            get
            {
                return _Rest;
            }
            set
            {
                OnRestChanging(value);
                ReportPropertyChanging("Rest");
                _Rest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rest");
                OnRestChanged();
            }
        }
        private Nullable<global::System.Decimal> _Rest;
        partial void OnRestChanging(Nullable<global::System.Decimal> value);
        partial void OnRestChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationBuildingInfos", "CalculationRows")]
        public EntityCollection<CalculationRows> CalculationRow
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingInfos", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingInfos", "CalculationRows", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CalculationCustomers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationCustomers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationCustomers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="recalculation">Initial value of the Recalculation property.</param>
        /// <param name="residents">Initial value of the Residents property.</param>
        public static CalculationCustomers CreateCalculationCustomers(global::System.Int32 id, global::System.String account, global::System.Byte counterType, global::System.Decimal volume, global::System.Decimal recalculation, global::System.Byte residents)
        {
            CalculationCustomers calculationCustomers = new CalculationCustomers();
            calculationCustomers.ID = id;
            calculationCustomers.Account = account;
            calculationCustomers.CounterType = counterType;
            calculationCustomers.Volume = volume;
            calculationCustomers.Recalculation = recalculation;
            calculationCustomers.Residents = residents;
            return calculationCustomers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Byte _CounterType;
        partial void OnCounterTypeChanging(global::System.Byte value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Decimal _Volume;
        partial void OnVolumeChanging(global::System.Decimal value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Recalculation
        {
            get
            {
                return _Recalculation;
            }
            set
            {
                OnRecalculationChanging(value);
                ReportPropertyChanging("Recalculation");
                _Recalculation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recalculation");
                OnRecalculationChanged();
            }
        }
        private global::System.Decimal _Recalculation;
        partial void OnRecalculationChanging(global::System.Decimal value);
        partial void OnRecalculationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Square
        {
            get
            {
                return _Square;
            }
            set
            {
                OnSquareChanging(value);
                ReportPropertyChanging("Square");
                _Square = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Square");
                OnSquareChanged();
            }
        }
        private Nullable<global::System.Decimal> _Square;
        partial void OnSquareChanging(Nullable<global::System.Decimal> value);
        partial void OnSquareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Residents
        {
            get
            {
                return _Residents;
            }
            set
            {
                OnResidentsChanging(value);
                ReportPropertyChanging("Residents");
                _Residents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Residents");
                OnResidentsChanged();
            }
        }
        private global::System.Byte _Residents;
        partial void OnResidentsChanging(global::System.Byte value);
        partial void OnResidentsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationCustomers", "CalculationRows")]
        public EntityCollection<CalculationRows> CalculationRow
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationCustomers", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationCustomers", "CalculationRows", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CalculationFiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationFiles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationFiles object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="processingResult">Initial value of the ProcessingResult property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="contract">Initial value of the Contract property.</param>
        public static CalculationFiles CreateCalculationFiles(global::System.Int32 id, global::System.Byte processingResult, global::System.String fileName, global::System.Byte contract)
        {
            CalculationFiles calculationFiles = new CalculationFiles();
            calculationFiles.ID = id;
            calculationFiles.ProcessingResult = processingResult;
            calculationFiles.FileName = fileName;
            calculationFiles.Contract = contract;
            return calculationFiles;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ProcessingResult
        {
            get
            {
                return _ProcessingResult;
            }
            set
            {
                OnProcessingResultChanging(value);
                ReportPropertyChanging("ProcessingResult");
                _ProcessingResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessingResult");
                OnProcessingResultChanged();
            }
        }
        private global::System.Byte _ProcessingResult;
        partial void OnProcessingResultChanging(global::System.Byte value);
        partial void OnProcessingResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Contract
        {
            get
            {
                return _Contract;
            }
            set
            {
                OnContractChanging(value);
                ReportPropertyChanging("Contract");
                _Contract = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Contract");
                OnContractChanged();
            }
        }
        private global::System.Byte _Contract;
        partial void OnContractChanging(global::System.Byte value);
        partial void OnContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationFiles_CalculationUploads", "CalculationUploads")]
        public CalculationUploads CalculationUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationUploads>("AlphaDataBaseModel.FK_CalculationFiles_CalculationUploads", "CalculationUploads").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationUploads>("AlphaDataBaseModel.FK_CalculationFiles_CalculationUploads", "CalculationUploads").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationUploads> CalculationUploadsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationUploads>("AlphaDataBaseModel.FK_CalculationFiles_CalculationUploads", "CalculationUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationUploads>("AlphaDataBaseModel.FK_CalculationFiles_CalculationUploads", "CalculationUploads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationForms_CalculationFiles", "CalculationForms")]
        public EntityCollection<CalculationForms> CalculationForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationForms>("AlphaDataBaseModel.FK_CalculationForms_CalculationFiles", "CalculationForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationForms>("AlphaDataBaseModel.FK_CalculationForms_CalculationFiles", "CalculationForms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CalculationForms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationForms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationForms object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CalculationForms CreateCalculationForms(global::System.Int32 id)
        {
            CalculationForms calculationForms = new CalculationForms();
            calculationForms.ID = id;
            return calculationForms;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationForms_CalculationFiles", "CalculationFiles")]
        public CalculationFiles CalculationFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationFiles>("AlphaDataBaseModel.FK_CalculationForms_CalculationFiles", "CalculationFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationFiles>("AlphaDataBaseModel.FK_CalculationForms_CalculationFiles", "CalculationFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationFiles> CalculationFilesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationFiles>("AlphaDataBaseModel.FK_CalculationForms_CalculationFiles", "CalculationFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationFiles>("AlphaDataBaseModel.FK_CalculationForms_CalculationFiles", "CalculationFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationForms", "CalculationRows")]
        public EntityCollection<CalculationRows> CalculationRows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationForms", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationForms", "CalculationRows", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CalculationLegalEntities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationLegalEntities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationLegalEntities object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="contract">Initial value of the Contract property.</param>
        /// <param name="chargedVolume">Initial value of the ChargedVolume property.</param>
        public static CalculationLegalEntities CreateCalculationLegalEntities(global::System.Int32 id, global::System.String contract, global::System.Decimal chargedVolume)
        {
            CalculationLegalEntities calculationLegalEntities = new CalculationLegalEntities();
            calculationLegalEntities.ID = id;
            calculationLegalEntities.Contract = contract;
            calculationLegalEntities.ChargedVolume = chargedVolume;
            return calculationLegalEntities;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contract
        {
            get
            {
                return _Contract;
            }
            set
            {
                OnContractChanging(value);
                ReportPropertyChanging("Contract");
                _Contract = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contract");
                OnContractChanged();
            }
        }
        private global::System.String _Contract;
        partial void OnContractChanging(global::System.String value);
        partial void OnContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityName
        {
            get
            {
                return _EntityName;
            }
            set
            {
                OnEntityNameChanging(value);
                ReportPropertyChanging("EntityName");
                _EntityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityName");
                OnEntityNameChanged();
            }
        }
        private global::System.String _EntityName;
        partial void OnEntityNameChanging(global::System.String value);
        partial void OnEntityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ChargedVolume
        {
            get
            {
                return _ChargedVolume;
            }
            set
            {
                OnChargedVolumeChanging(value);
                ReportPropertyChanging("ChargedVolume");
                _ChargedVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChargedVolume");
                OnChargedVolumeChanged();
            }
        }
        private global::System.Decimal _ChargedVolume;
        partial void OnChargedVolumeChanging(global::System.Decimal value);
        partial void OnChargedVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Square
        {
            get
            {
                return _Square;
            }
            set
            {
                OnSquareChanging(value);
                ReportPropertyChanging("Square");
                _Square = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Square");
                OnSquareChanged();
            }
        }
        private Nullable<global::System.Decimal> _Square;
        partial void OnSquareChanging(Nullable<global::System.Decimal> value);
        partial void OnSquareChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationLegalEntities", "CalculationRows")]
        public EntityCollection<CalculationRows> CalculationRow
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationLegalEntities", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationLegalEntities", "CalculationRows", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CalculationRows")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationRows : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationRows object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="processingResult">Initial value of the ProcessingResult property.</param>
        /// <param name="rowType">Initial value of the RowType property.</param>
        public static CalculationRows CreateCalculationRows(global::System.Int32 id, global::System.Byte processingResult, global::System.Byte rowType)
        {
            CalculationRows calculationRows = new CalculationRows();
            calculationRows.ID = id;
            calculationRows.ProcessingResult = processingResult;
            calculationRows.RowType = rowType;
            return calculationRows;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ProcessingResult
        {
            get
            {
                return _ProcessingResult;
            }
            set
            {
                OnProcessingResultChanging(value);
                ReportPropertyChanging("ProcessingResult");
                _ProcessingResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessingResult");
                OnProcessingResultChanged();
            }
        }
        private global::System.Byte _ProcessingResult;
        partial void OnProcessingResultChanging(global::System.Byte value);
        partial void OnProcessingResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte RowType
        {
            get
            {
                return _RowType;
            }
            set
            {
                OnRowTypeChanging(value);
                ReportPropertyChanging("RowType");
                _RowType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowType");
                OnRowTypeChanged();
            }
        }
        private global::System.Byte _RowType;
        partial void OnRowTypeChanging(global::System.Byte value);
        partial void OnRowTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationForms", "CalculationForms")]
        public CalculationForms CalculationForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationForms>("AlphaDataBaseModel.FK_CalculationRows_CalculationForms", "CalculationForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationForms>("AlphaDataBaseModel.FK_CalculationRows_CalculationForms", "CalculationForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationForms> CalculationFormsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationForms>("AlphaDataBaseModel.FK_CalculationRows_CalculationForms", "CalculationForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationForms>("AlphaDataBaseModel.FK_CalculationRows_CalculationForms", "CalculationForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationBuildingCounters", "CalculationBuildingCounters")]
        public CalculationBuildingCounters BuildingCounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationBuildingCounters>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingCounters", "CalculationBuildingCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationBuildingCounters>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingCounters", "CalculationBuildingCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationBuildingCounters> BuildingCounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationBuildingCounters>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingCounters", "CalculationBuildingCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationBuildingCounters>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingCounters", "CalculationBuildingCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationBuildingInfos", "CalculationBuildingInfos")]
        public CalculationBuildingInfos BuildingInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationBuildingInfos>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingInfos", "CalculationBuildingInfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationBuildingInfos>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingInfos", "CalculationBuildingInfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationBuildingInfos> BuildingInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationBuildingInfos>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingInfos", "CalculationBuildingInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationBuildingInfos>("AlphaDataBaseModel.FK_CalculationRows_CalculationBuildingInfos", "CalculationBuildingInfos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationCustomers", "CalculationCustomers")]
        public CalculationCustomers Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationCustomers>("AlphaDataBaseModel.FK_CalculationRows_CalculationCustomers", "CalculationCustomers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationCustomers>("AlphaDataBaseModel.FK_CalculationRows_CalculationCustomers", "CalculationCustomers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationCustomers> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationCustomers>("AlphaDataBaseModel.FK_CalculationRows_CalculationCustomers", "CalculationCustomers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationCustomers>("AlphaDataBaseModel.FK_CalculationRows_CalculationCustomers", "CalculationCustomers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationLegalEntities", "CalculationLegalEntities")]
        public CalculationLegalEntities LegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationLegalEntities>("AlphaDataBaseModel.FK_CalculationRows_CalculationLegalEntities", "CalculationLegalEntities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationLegalEntities>("AlphaDataBaseModel.FK_CalculationRows_CalculationLegalEntities", "CalculationLegalEntities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationLegalEntities> LegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationLegalEntities>("AlphaDataBaseModel.FK_CalculationRows_CalculationLegalEntities", "CalculationLegalEntities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationLegalEntities>("AlphaDataBaseModel.FK_CalculationRows_CalculationLegalEntities", "CalculationLegalEntities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCalculationValues_CalculationRows", "BuildingCalculationValues")]
        public EntityCollection<BuildingCalculationValues> BuildingCalculationValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingCalculationValues>("AlphaDataBaseModel.FK_BuildingCalculationValues_CalculationRows", "BuildingCalculationValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingCalculationValues>("AlphaDataBaseModel.FK_BuildingCalculationValues_CalculationRows", "BuildingCalculationValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationRows", "CalculationRows1")]
        public EntityCollection<CalculationRows> BuildingRows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationRows", "CalculationRows1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationRows", "CalculationRows1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationRows_CalculationRows", "CalculationRows")]
        public CalculationRows BuildingAddressRow
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationRows", "CalculationRows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationRows", "CalculationRows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationRows> BuildingAddressRowReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationRows", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_CalculationRows_CalculationRows", "CalculationRows", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingCounterCalculationValues_CalculationRows", "BuildingCounterCalculationValues")]
        public EntityCollection<BuildingCounterCalculationValues> BuildingCounterCalculationValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingCounterCalculationValues>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_CalculationRows", "BuildingCounterCalculationValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingCounterCalculationValues>("AlphaDataBaseModel.FK_BuildingCounterCalculationValues_CalculationRows", "BuildingCounterCalculationValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_LegalEntityCalculationValue_CalculationRows", "LegalEntityCalculationValues")]
        public EntityCollection<LegalEntityCalculationValues> LegalEntityCalculationValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityCalculationValues>("AlphaDataBaseModel.FK_LegalEntityCalculationValue_CalculationRows", "LegalEntityCalculationValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityCalculationValues>("AlphaDataBaseModel.FK_LegalEntityCalculationValue_CalculationRows", "LegalEntityCalculationValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerCalculationValues_CalculationRows", "CustomerCalculationValues")]
        public EntityCollection<CustomerCalculationValues> CustomerCalculationValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerCalculationValues>("AlphaDataBaseModel.FK_CustomerCalculationValues_CalculationRows", "CustomerCalculationValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerCalculationValues>("AlphaDataBaseModel.FK_CustomerCalculationValues_CalculationRows", "CustomerCalculationValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CalculationUploads")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculationUploads : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculationUploads object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="processingResult">Initial value of the ProcessingResult property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="directoryPath">Initial value of the DirectoryPath property.</param>
        public static CalculationUploads CreateCalculationUploads(global::System.Int32 id, global::System.Byte processingResult, global::System.DateTime created, global::System.DateTime month, global::System.String directoryPath)
        {
            CalculationUploads calculationUploads = new CalculationUploads();
            calculationUploads.ID = id;
            calculationUploads.ProcessingResult = processingResult;
            calculationUploads.Created = created;
            calculationUploads.Month = month;
            calculationUploads.DirectoryPath = directoryPath;
            return calculationUploads;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ProcessingResult
        {
            get
            {
                return _ProcessingResult;
            }
            set
            {
                OnProcessingResultChanging(value);
                ReportPropertyChanging("ProcessingResult");
                _ProcessingResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessingResult");
                OnProcessingResultChanged();
            }
        }
        private global::System.Byte _ProcessingResult;
        partial void OnProcessingResultChanging(global::System.Byte value);
        partial void OnProcessingResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DirectoryPath
        {
            get
            {
                return _DirectoryPath;
            }
            set
            {
                OnDirectoryPathChanging(value);
                ReportPropertyChanging("DirectoryPath");
                _DirectoryPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DirectoryPath");
                OnDirectoryPathChanged();
            }
        }
        private global::System.String _DirectoryPath;
        partial void OnDirectoryPathChanging(global::System.String value);
        partial void OnDirectoryPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationUploads_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_CalculationUploads_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_CalculationUploads_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_CalculationUploads_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_CalculationUploads_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationFiles_CalculationUploads", "CalculationFiles")]
        public EntityCollection<CalculationFiles> CalculationFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationFiles>("AlphaDataBaseModel.FK_CalculationFiles_CalculationUploads", "CalculationFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationFiles>("AlphaDataBaseModel.FK_CalculationFiles_CalculationUploads", "CalculationFiles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CustomerCalculationValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerCalculationValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerCalculationValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="valueType">Initial value of the ValueType property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="recalculation">Initial value of the Recalculation property.</param>
        public static CustomerCalculationValues CreateCustomerCalculationValues(global::System.Int32 id, global::System.DateTime month, global::System.Byte valueType, global::System.Decimal volume, global::System.Decimal recalculation)
        {
            CustomerCalculationValues customerCalculationValues = new CustomerCalculationValues();
            customerCalculationValues.ID = id;
            customerCalculationValues.Month = month;
            customerCalculationValues.ValueType = valueType;
            customerCalculationValues.Volume = volume;
            customerCalculationValues.Recalculation = recalculation;
            return customerCalculationValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ValueType
        {
            get
            {
                return _ValueType;
            }
            set
            {
                OnValueTypeChanging(value);
                ReportPropertyChanging("ValueType");
                _ValueType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueType");
                OnValueTypeChanged();
            }
        }
        private global::System.Byte _ValueType;
        partial void OnValueTypeChanging(global::System.Byte value);
        partial void OnValueTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Decimal _Volume;
        partial void OnVolumeChanging(global::System.Decimal value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Recalculation
        {
            get
            {
                return _Recalculation;
            }
            set
            {
                OnRecalculationChanging(value);
                ReportPropertyChanging("Recalculation");
                _Recalculation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recalculation");
                OnRecalculationChanged();
            }
        }
        private global::System.Decimal _Recalculation;
        partial void OnRecalculationChanging(global::System.Decimal value);
        partial void OnRecalculationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerCalculationValues_CalculationRows", "CalculationRows")]
        public CalculationRows CalculationRows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_CustomerCalculationValues_CalculationRows", "CalculationRows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_CustomerCalculationValues_CalculationRows", "CalculationRows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationRows> CalculationRowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_CustomerCalculationValues_CalculationRows", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_CustomerCalculationValues_CalculationRows", "CalculationRows", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerCalculationValues_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_CustomerCalculationValues_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_CustomerCalculationValues_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_CustomerCalculationValues_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_CustomerCalculationValues_Customers", "Customers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Customers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="apartment">Initial value of the Apartment property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        public static Customers CreateCustomers(global::System.Int32 id, global::System.String apartment, global::System.String account)
        {
            Customers customers = new Customers();
            customers.ID = id;
            customers.Apartment = apartment;
            customers.Account = account;
            return customers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "PrivateCounters")]
        public EntityCollection<PrivateCounters> PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "PrivateCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerCalculationValues_Customers", "CustomerCalculationValues")]
        public EntityCollection<CustomerCalculationValues> CustomerCalculationValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerCalculationValues>("AlphaDataBaseModel.FK_CustomerCalculationValues_Customers", "CustomerCalculationValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerCalculationValues>("AlphaDataBaseModel.FK_CustomerCalculationValues_Customers", "CustomerCalculationValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="DecFormsDownloads")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DecFormsDownloads : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DecFormsDownloads object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="directory">Initial value of the Directory property.</param>
        public static DecFormsDownloads CreateDecFormsDownloads(global::System.Int32 id, global::System.DateTime created, global::System.String directory)
        {
            DecFormsDownloads decFormsDownloads = new DecFormsDownloads();
            decFormsDownloads.ID = id;
            decFormsDownloads.Created = created;
            decFormsDownloads.Directory = directory;
            return decFormsDownloads;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Directory
        {
            get
            {
                return _Directory;
            }
            set
            {
                OnDirectoryChanging(value);
                ReportPropertyChanging("Directory");
                _Directory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Directory");
                OnDirectoryChanged();
            }
        }
        private global::System.String _Directory;
        partial void OnDirectoryChanging(global::System.String value);
        partial void OnDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsDownloads_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsDownloads_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsDownloads_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsDownloads_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsDownloads_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Emails_DecFormsDownloads", "Emails")]
        public EntityCollection<Emails> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Emails>("AlphaDataBaseModel.FK_Emails_DecFormsDownloads", "Emails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Emails>("AlphaDataBaseModel.FK_Emails_DecFormsDownloads", "Emails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="DecFormsUploadPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DecFormsUploadPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DecFormsUploadPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="formType">Initial value of the FormType property.</param>
        public static DecFormsUploadPoses CreateDecFormsUploadPoses(global::System.Int32 id, global::System.String fileName, global::System.Byte formType)
        {
            DecFormsUploadPoses decFormsUploadPoses = new DecFormsUploadPoses();
            decFormsUploadPoses.ID = id;
            decFormsUploadPoses.FileName = fileName;
            decFormsUploadPoses.FormType = formType;
            return decFormsUploadPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte FormType
        {
            get
            {
                return _FormType;
            }
            set
            {
                OnFormTypeChanging(value);
                ReportPropertyChanging("FormType");
                _FormType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormType");
                OnFormTypeChanged();
            }
        }
        private global::System.Byte _FormType;
        partial void OnFormTypeChanging(global::System.Byte value);
        partial void OnFormTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads")]
        public DecFormsUploads DecFormsUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DecFormsUploads> DecFormsUploadsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillForms_DecFormsUploadPoses", "FillForms")]
        public EntityCollection<FillForms> FillForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FillForms>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "FillForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FillForms>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "FillForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_FillForms", "FillForms")]
        public FillForms FillForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "FillForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "FillForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FillForms> FillFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "FillForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FillForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "FillForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteForms_DecFormsUploadPoses", "RouteForms")]
        public EntityCollection<RouteForms> RouteForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteForms>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "RouteForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteForms>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "RouteForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_RouteForms", "RouteForms")]
        public RouteForms RouteForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "RouteForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "RouteForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RouteForms> RouteFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "RouteForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RouteForms>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "RouteForms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="DecFormsUploads")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DecFormsUploads : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DecFormsUploads object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="directory">Initial value of the Directory property.</param>
        public static DecFormsUploads CreateDecFormsUploads(global::System.Int32 id, global::System.DateTime created, global::System.DateTime month, global::System.String directory)
        {
            DecFormsUploads decFormsUploads = new DecFormsUploads();
            decFormsUploads.ID = id;
            decFormsUploads.Created = created;
            decFormsUploads.Month = month;
            decFormsUploads.Directory = directory;
            return decFormsUploads;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Directory
        {
            get
            {
                return _Directory;
            }
            set
            {
                OnDirectoryChanging(value);
                ReportPropertyChanging("Directory");
                _Directory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Directory");
                OnDirectoryChanged();
            }
        }
        private global::System.String _Directory;
        partial void OnDirectoryChanging(global::System.String value);
        partial void OnDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploadPoses")]
        public EntityCollection<DecFormsUploadPoses> DecFormsUploadPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_DecFormsUploads", "DecFormsUploadPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploads_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Emails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Emails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Emails object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Emails CreateEmails(global::System.Int32 id)
        {
            Emails emails = new Emails();
            emails.ID = id;
            return emails;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FromAddress
        {
            get
            {
                return _FromAddress;
            }
            set
            {
                OnFromAddressChanging(value);
                ReportPropertyChanging("FromAddress");
                _FromAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FromAddress");
                OnFromAddressChanged();
            }
        }
        private global::System.String _FromAddress;
        partial void OnFromAddressChanging(global::System.String value);
        partial void OnFromAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Received
        {
            get
            {
                return _Received;
            }
            set
            {
                OnReceivedChanging(value);
                ReportPropertyChanging("Received");
                _Received = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Received");
                OnReceivedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Received;
        partial void OnReceivedChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Attachments_Emails", "Attachments")]
        public EntityCollection<Attachments> Attachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachments>("AlphaDataBaseModel.FK_Attachments_Emails", "Attachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachments>("AlphaDataBaseModel.FK_Attachments_Emails", "Attachments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Emails_DecFormsDownloads", "DecFormsDownloads")]
        public DecFormsDownloads DecFormsDownloads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsDownloads>("AlphaDataBaseModel.FK_Emails_DecFormsDownloads", "DecFormsDownloads").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsDownloads>("AlphaDataBaseModel.FK_Emails_DecFormsDownloads", "DecFormsDownloads").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DecFormsDownloads> DecFormsDownloadsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsDownloads>("AlphaDataBaseModel.FK_Emails_DecFormsDownloads", "DecFormsDownloads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DecFormsDownloads>("AlphaDataBaseModel.FK_Emails_DecFormsDownloads", "DecFormsDownloads", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="FillFormPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FillFormPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FillFormPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="apartment">Initial value of the Apartment property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        public static FillFormPoses CreateFillFormPoses(global::System.Int32 id, global::System.String apartment, global::System.String account, global::System.Byte counterType)
        {
            FillFormPoses fillFormPoses = new FillFormPoses();
            fillFormPoses.ID = id;
            fillFormPoses.Apartment = apartment;
            fillFormPoses.Account = account;
            fillFormPoses.CounterType = counterType;
            return fillFormPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Byte _CounterType;
        partial void OnCounterTypeChanging(global::System.Byte value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterModel
        {
            get
            {
                return _CounterModel;
            }
            set
            {
                OnCounterModelChanging(value);
                ReportPropertyChanging("CounterModel");
                _CounterModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterModel");
                OnCounterModelChanged();
            }
        }
        private global::System.String _CounterModel;
        partial void OnCounterModelChanging(global::System.String value);
        partial void OnCounterModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.String _CounterNumber;
        partial void OnCounterNumberChanging(global::System.String value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PrevDate
        {
            get
            {
                return _PrevDate;
            }
            set
            {
                OnPrevDateChanging(value);
                ReportPropertyChanging("PrevDate");
                _PrevDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevDate");
                OnPrevDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PrevDate;
        partial void OnPrevDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPrevDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevValue;
        partial void OnPrevValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevDayValue
        {
            get
            {
                return _PrevDayValue;
            }
            set
            {
                OnPrevDayValueChanging(value);
                ReportPropertyChanging("PrevDayValue");
                _PrevDayValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevDayValue");
                OnPrevDayValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevDayValue;
        partial void OnPrevDayValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevDayValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevNightValue
        {
            get
            {
                return _PrevNightValue;
            }
            set
            {
                OnPrevNightValueChanging(value);
                ReportPropertyChanging("PrevNightValue");
                _PrevNightValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevNightValue");
                OnPrevNightValueChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevNightValue;
        partial void OnPrevNightValueChanging(Nullable<global::System.Int32> value);
        partial void OnPrevNightValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterCapacity
        {
            get
            {
                return _CounterCapacity;
            }
            set
            {
                OnCounterCapacityChanging(value);
                ReportPropertyChanging("CounterCapacity");
                _CounterCapacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterCapacity");
                OnCounterCapacityChanged();
            }
        }
        private global::System.String _CounterCapacity;
        partial void OnCounterCapacityChanging(global::System.String value);
        partial void OnCounterCapacityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillFormPoses_FillForms", "FillForms")]
        public FillForms FillForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FillForms> FillFormsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillForms>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FillForms>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillFormValues_FillFormPoses", "FillFormValues")]
        public EntityCollection<FillFormValues> FillFormValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FillFormValues>("AlphaDataBaseModel.FK_FillFormValues_FillFormPoses", "FillFormValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FillFormValues>("AlphaDataBaseModel.FK_FillFormValues_FillFormPoses", "FillFormValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="FillForms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FillForms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FillForms object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="building">Initial value of the Building property.</param>
        public static FillForms CreateFillForms(global::System.Int32 id, global::System.String street, global::System.String building)
        {
            FillForms fillForms = new FillForms();
            fillForms.ID = id;
            fillForms.Street = street;
            fillForms.Building = building;
            return fillForms;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses")]
        public DecFormsUploadPoses DecFormsUploadPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DecFormsUploadPoses> DecFormsUploadPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_FillForms_DecFormsUploadPoses", "DecFormsUploadPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillFormPoses_FillForms", "FillFormPoses")]
        public EntityCollection<FillFormPoses> FillFormPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FillFormPoses>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillFormPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FillFormPoses>("AlphaDataBaseModel.FK_FillFormPoses_FillForms", "FillFormPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_FillForms", "DecFormsUploadPoses")]
        public EntityCollection<DecFormsUploadPoses> DecFormsUploadPos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_FillForms", "DecFormsUploadPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="FillFormValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FillFormValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FillFormValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="valueType">Initial value of the ValueType property.</param>
        public static FillFormValues CreateFillFormValues(global::System.Int32 id, global::System.DateTime month, global::System.Byte valueType)
        {
            FillFormValues fillFormValues = new FillFormValues();
            fillFormValues.ID = id;
            fillFormValues.Month = month;
            fillFormValues.ValueType = valueType;
            return fillFormValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ValueType
        {
            get
            {
                return _ValueType;
            }
            set
            {
                OnValueTypeChanging(value);
                ReportPropertyChanging("ValueType");
                _ValueType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueType");
                OnValueTypeChanged();
            }
        }
        private global::System.Byte _ValueType;
        partial void OnValueTypeChanging(global::System.Byte value);
        partial void OnValueTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Int32> _Value;
        partial void OnValueChanging(Nullable<global::System.Int32> value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillFormValues_FillFormPoses", "FillFormPoses")]
        public FillFormPoses FillFormPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillFormPoses>("AlphaDataBaseModel.FK_FillFormValues_FillFormPoses", "FillFormPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillFormPoses>("AlphaDataBaseModel.FK_FillFormValues_FillFormPoses", "FillFormPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FillFormPoses> FillFormPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FillFormPoses>("AlphaDataBaseModel.FK_FillFormValues_FillFormPoses", "FillFormPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FillFormPoses>("AlphaDataBaseModel.FK_FillFormValues_FillFormPoses", "FillFormPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillFormValues_PrivateCounters", "PrivateCounters")]
        public PrivateCounters PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_FillFormValues_PrivateCounters", "PrivateCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_FillFormValues_PrivateCounters", "PrivateCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateCounters> PrivateCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_FillFormValues_PrivateCounters", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_FillFormValues_PrivateCounters", "PrivateCounters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="LegalEntities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalEntities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalEntities object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="contract">Initial value of the Contract property.</param>
        public static LegalEntities CreateLegalEntities(global::System.Int32 id, global::System.String contract)
        {
            LegalEntities legalEntities = new LegalEntities();
            legalEntities.ID = id;
            legalEntities.Contract = contract;
            return legalEntities;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contract
        {
            get
            {
                return _Contract;
            }
            set
            {
                OnContractChanging(value);
                ReportPropertyChanging("Contract");
                _Contract = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contract");
                OnContractChanged();
            }
        }
        private global::System.String _Contract;
        partial void OnContractChanging(global::System.String value);
        partial void OnContractChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_LegalEntities_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_LegalEntities_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_LegalEntities_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_LegalEntities_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_LegalEntities_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_LegalEntityCalculationValues_LegalEntities", "LegalEntityCalculationValues")]
        public EntityCollection<LegalEntityCalculationValues> LegalEntityCalculationValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityCalculationValues>("AlphaDataBaseModel.FK_LegalEntityCalculationValues_LegalEntities", "LegalEntityCalculationValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityCalculationValues>("AlphaDataBaseModel.FK_LegalEntityCalculationValues_LegalEntities", "LegalEntityCalculationValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="LegalEntityCalculationValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalEntityCalculationValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalEntityCalculationValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="chargedVolume">Initial value of the ChargedVolume property.</param>
        public static LegalEntityCalculationValues CreateLegalEntityCalculationValues(global::System.Int32 id, global::System.DateTime month, global::System.Decimal chargedVolume)
        {
            LegalEntityCalculationValues legalEntityCalculationValues = new LegalEntityCalculationValues();
            legalEntityCalculationValues.ID = id;
            legalEntityCalculationValues.Month = month;
            legalEntityCalculationValues.ChargedVolume = chargedVolume;
            return legalEntityCalculationValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ChargedVolume
        {
            get
            {
                return _ChargedVolume;
            }
            set
            {
                OnChargedVolumeChanging(value);
                ReportPropertyChanging("ChargedVolume");
                _ChargedVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChargedVolume");
                OnChargedVolumeChanged();
            }
        }
        private global::System.Decimal _ChargedVolume;
        partial void OnChargedVolumeChanging(global::System.Decimal value);
        partial void OnChargedVolumeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_LegalEntityCalculationValue_CalculationRows", "CalculationRows")]
        public CalculationRows CalculationRows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_LegalEntityCalculationValue_CalculationRows", "CalculationRows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_LegalEntityCalculationValue_CalculationRows", "CalculationRows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculationRows> CalculationRowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_LegalEntityCalculationValue_CalculationRows", "CalculationRows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculationRows>("AlphaDataBaseModel.FK_LegalEntityCalculationValue_CalculationRows", "CalculationRows", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_LegalEntityCalculationValues_LegalEntities", "LegalEntities")]
        public LegalEntities LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntities>("AlphaDataBaseModel.FK_LegalEntityCalculationValues_LegalEntities", "LegalEntities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntities>("AlphaDataBaseModel.FK_LegalEntityCalculationValues_LegalEntities", "LegalEntities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntities> LegalEntitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntities>("AlphaDataBaseModel.FK_LegalEntityCalculationValues_LegalEntities", "LegalEntities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntities>("AlphaDataBaseModel.FK_LegalEntityCalculationValues_LegalEntities", "LegalEntities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateCounters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateCounters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateCounters object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        public static PrivateCounters CreatePrivateCounters(global::System.Int32 id, global::System.Byte counterType)
        {
            PrivateCounters privateCounters = new PrivateCounters();
            privateCounters.ID = id;
            privateCounters.CounterType = counterType;
            return privateCounters;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Byte _CounterType;
        partial void OnCounterTypeChanging(global::System.Byte value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteFormValues_PrivateCounters", "RouteFormValues")]
        public EntityCollection<RouteFormValues> RouteFormValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteFormValues>("AlphaDataBaseModel.FK_RouteFormValues_PrivateCounters", "RouteFormValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteFormValues>("AlphaDataBaseModel.FK_RouteFormValues_PrivateCounters", "RouteFormValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_FillFormValues_PrivateCounters", "FillFormValues")]
        public EntityCollection<FillFormValues> FillFormValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FillFormValues>("AlphaDataBaseModel.FK_FillFormValues_PrivateCounters", "FillFormValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FillFormValues>("AlphaDataBaseModel.FK_FillFormValues_PrivateCounters", "FillFormValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues")]
        public EntityCollection<PrivateCounterValues> PrivateCounterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateCounterValues>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateCounterValues>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateCounterValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateCounterValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateCounterValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="valueType">Initial value of the ValueType property.</param>
        public static PrivateCounterValues CreatePrivateCounterValues(global::System.Int32 id, global::System.DateTime month, global::System.Byte valueType)
        {
            PrivateCounterValues privateCounterValues = new PrivateCounterValues();
            privateCounterValues.ID = id;
            privateCounterValues.Month = month;
            privateCounterValues.ValueType = valueType;
            return privateCounterValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ValueType
        {
            get
            {
                return _ValueType;
            }
            set
            {
                OnValueTypeChanging(value);
                ReportPropertyChanging("ValueType");
                _ValueType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueType");
                OnValueTypeChanged();
            }
        }
        private global::System.Byte _ValueType;
        partial void OnValueTypeChanging(global::System.Byte value);
        partial void OnValueTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Int32> _Value;
        partial void OnValueChanging(Nullable<global::System.Int32> value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounters")]
        public PrivateCounters PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateCounters> PrivateCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateValuesFormPoses")]
        public PrivateValuesFormPoses PrivateValuesFormPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesFormPoses>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateValuesFormPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesFormPoses>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateValuesFormPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateValuesFormPoses> PrivateValuesFormPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesFormPoses>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateValuesFormPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateValuesFormPoses>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateValuesFormPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateValuesFormPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateValuesFormPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateValuesFormPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="apartment">Initial value of the Apartment property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        public static PrivateValuesFormPoses CreatePrivateValuesFormPoses(global::System.Int32 id, global::System.String apartment, global::System.String account, global::System.Byte counterType)
        {
            PrivateValuesFormPoses privateValuesFormPoses = new PrivateValuesFormPoses();
            privateValuesFormPoses.ID = id;
            privateValuesFormPoses.Apartment = apartment;
            privateValuesFormPoses.Account = account;
            privateValuesFormPoses.CounterType = counterType;
            return privateValuesFormPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Byte _CounterType;
        partial void OnCounterTypeChanging(global::System.Byte value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.String _CounterNumber;
        partial void OnCounterNumberChanging(global::System.String value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CurrentDate
        {
            get
            {
                return _CurrentDate;
            }
            set
            {
                OnCurrentDateChanging(value);
                ReportPropertyChanging("CurrentDate");
                _CurrentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentDate");
                OnCurrentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CurrentDate;
        partial void OnCurrentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCurrentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentValue
        {
            get
            {
                return _CurrentValue;
            }
            set
            {
                OnCurrentValueChanging(value);
                ReportPropertyChanging("CurrentValue");
                _CurrentValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentValue");
                OnCurrentValueChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentValue;
        partial void OnCurrentValueChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentDayValue
        {
            get
            {
                return _CurrentDayValue;
            }
            set
            {
                OnCurrentDayValueChanging(value);
                ReportPropertyChanging("CurrentDayValue");
                _CurrentDayValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentDayValue");
                OnCurrentDayValueChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentDayValue;
        partial void OnCurrentDayValueChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentDayValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentNightValue
        {
            get
            {
                return _CurrentNightValue;
            }
            set
            {
                OnCurrentNightValueChanging(value);
                ReportPropertyChanging("CurrentNightValue");
                _CurrentNightValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentNightValue");
                OnCurrentNightValueChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentNightValue;
        partial void OnCurrentNightValueChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentNightValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateCounterValues")]
        public EntityCollection<PrivateCounterValues> PrivateCounterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateCounterValues>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateCounterValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateCounterValues>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateValuesFormPoses", "PrivateCounterValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesForms")]
        public PrivateValuesForms PrivateValuesForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesForms>("AlphaDataBaseModel.FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesForms>("AlphaDataBaseModel.FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateValuesForms> PrivateValuesFormsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesForms>("AlphaDataBaseModel.FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateValuesForms>("AlphaDataBaseModel.FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesForms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateValuesForms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateValuesForms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateValuesForms object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        public static PrivateValuesForms CreatePrivateValuesForms(global::System.Int32 id, global::System.String fileName)
        {
            PrivateValuesForms privateValuesForms = new PrivateValuesForms();
            privateValuesForms.ID = id;
            privateValuesForms.FileName = fileName;
            return privateValuesForms;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesFormPoses")]
        public EntityCollection<PrivateValuesFormPoses> PrivateValuesFormPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateValuesFormPoses>("AlphaDataBaseModel.FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesFormPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateValuesFormPoses>("AlphaDataBaseModel.FK_PrivateValuesFormPoses_PrivateValuesForms", "PrivateValuesFormPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesUploads")]
        public PrivateValuesUploads PrivateValuesUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesUploads>("AlphaDataBaseModel.FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesUploads").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesUploads>("AlphaDataBaseModel.FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesUploads").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateValuesUploads> PrivateValuesUploadsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateValuesUploads>("AlphaDataBaseModel.FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateValuesUploads>("AlphaDataBaseModel.FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesUploads", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateValuesUploads")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateValuesUploads : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateValuesUploads object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="directory">Initial value of the Directory property.</param>
        public static PrivateValuesUploads CreatePrivateValuesUploads(global::System.Int32 id, global::System.DateTime created, global::System.DateTime month, global::System.String directory)
        {
            PrivateValuesUploads privateValuesUploads = new PrivateValuesUploads();
            privateValuesUploads.ID = id;
            privateValuesUploads.Created = created;
            privateValuesUploads.Month = month;
            privateValuesUploads.Directory = directory;
            return privateValuesUploads;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Directory
        {
            get
            {
                return _Directory;
            }
            set
            {
                OnDirectoryChanging(value);
                ReportPropertyChanging("Directory");
                _Directory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Directory");
                OnDirectoryChanged();
            }
        }
        private global::System.String _Directory;
        partial void OnDirectoryChanging(global::System.String value);
        partial void OnDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionMessage
        {
            get
            {
                return _ExceptionMessage;
            }
            set
            {
                OnExceptionMessageChanging(value);
                ReportPropertyChanging("ExceptionMessage");
                _ExceptionMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionMessage");
                OnExceptionMessageChanged();
            }
        }
        private global::System.String _ExceptionMessage;
        partial void OnExceptionMessageChanging(global::System.String value);
        partial void OnExceptionMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesForms")]
        public EntityCollection<PrivateValuesForms> PrivateValuesForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateValuesForms>("AlphaDataBaseModel.FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateValuesForms>("AlphaDataBaseModel.FK_PrivateValuesForms_PrivateValuesUploads", "PrivateValuesForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateValuesUploads_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_PrivateValuesUploads_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_PrivateValuesUploads_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_PrivateValuesUploads_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_PrivateValuesUploads_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RouteFormPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RouteFormPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RouteFormPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="apartment">Initial value of the Apartment property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        public static RouteFormPoses CreateRouteFormPoses(global::System.Int32 id, global::System.String apartment, global::System.String account, global::System.Byte counterType)
        {
            RouteFormPoses routeFormPoses = new RouteFormPoses();
            routeFormPoses.ID = id;
            routeFormPoses.Apartment = apartment;
            routeFormPoses.Account = account;
            routeFormPoses.CounterType = counterType;
            return routeFormPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Byte _CounterType;
        partial void OnCounterTypeChanging(global::System.Byte value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.String _CounterNumber;
        partial void OnCounterNumberChanging(global::System.String value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PrevDate
        {
            get
            {
                return _PrevDate;
            }
            set
            {
                OnPrevDateChanging(value);
                ReportPropertyChanging("PrevDate");
                _PrevDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevDate");
                OnPrevDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PrevDate;
        partial void OnPrevDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPrevDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _PrevValue;
        partial void OnPrevValueChanging(Nullable<global::System.Decimal> value);
        partial void OnPrevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PrevDayValue
        {
            get
            {
                return _PrevDayValue;
            }
            set
            {
                OnPrevDayValueChanging(value);
                ReportPropertyChanging("PrevDayValue");
                _PrevDayValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevDayValue");
                OnPrevDayValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _PrevDayValue;
        partial void OnPrevDayValueChanging(Nullable<global::System.Decimal> value);
        partial void OnPrevDayValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PrevNightValue
        {
            get
            {
                return _PrevNightValue;
            }
            set
            {
                OnPrevNightValueChanging(value);
                ReportPropertyChanging("PrevNightValue");
                _PrevNightValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevNightValue");
                OnPrevNightValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _PrevNightValue;
        partial void OnPrevNightValueChanging(Nullable<global::System.Decimal> value);
        partial void OnPrevNightValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterCapacity
        {
            get
            {
                return _CounterCapacity;
            }
            set
            {
                OnCounterCapacityChanging(value);
                ReportPropertyChanging("CounterCapacity");
                _CounterCapacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterCapacity");
                OnCounterCapacityChanged();
            }
        }
        private global::System.String _CounterCapacity;
        partial void OnCounterCapacityChanging(global::System.String value);
        partial void OnCounterCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Debt
        {
            get
            {
                return _Debt;
            }
            set
            {
                OnDebtChanging(value);
                ReportPropertyChanging("Debt");
                _Debt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Debt");
                OnDebtChanged();
            }
        }
        private global::System.String _Debt;
        partial void OnDebtChanging(global::System.String value);
        partial void OnDebtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payed
        {
            get
            {
                return _Payed;
            }
            set
            {
                OnPayedChanging(value);
                ReportPropertyChanging("Payed");
                _Payed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payed");
                OnPayedChanged();
            }
        }
        private global::System.String _Payed;
        partial void OnPayedChanging(global::System.String value);
        partial void OnPayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteFormPoses_RouteForms", "RouteForms")]
        public RouteForms RouteForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteForms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteForms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RouteForms> RouteFormsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteForms>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RouteForms>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteForms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteFormValues_RouteFormPoses", "RouteFormValues")]
        public EntityCollection<RouteFormValues> RouteFormValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteFormValues>("AlphaDataBaseModel.FK_RouteFormValues_RouteFormPoses", "RouteFormValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteFormValues>("AlphaDataBaseModel.FK_RouteFormValues_RouteFormPoses", "RouteFormValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RouteForms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RouteForms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RouteForms object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="building">Initial value of the Building property.</param>
        public static RouteForms CreateRouteForms(global::System.Int32 id, global::System.String street, global::System.String building)
        {
            RouteForms routeForms = new RouteForms();
            routeForms.ID = id;
            routeForms.Street = street;
            routeForms.Building = building;
            return routeForms;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteFormPoses_RouteForms", "RouteFormPoses")]
        public EntityCollection<RouteFormPoses> RouteFormPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RouteFormPoses>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteFormPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RouteFormPoses>("AlphaDataBaseModel.FK_RouteFormPoses_RouteForms", "RouteFormPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses")]
        public DecFormsUploadPoses DecFormsUploadPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DecFormsUploadPoses> DecFormsUploadPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DecFormsUploadPoses>("AlphaDataBaseModel.FK_RouteForms_DecFormsUploadPoses", "DecFormsUploadPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploadPoses_RouteForms", "DecFormsUploadPoses")]
        public EntityCollection<DecFormsUploadPoses> DecFormsUploadPos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "DecFormsUploadPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsUploadPoses>("AlphaDataBaseModel.FK_DecFormsUploadPoses_RouteForms", "DecFormsUploadPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RouteFormValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RouteFormValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RouteFormValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="valueType">Initial value of the ValueType property.</param>
        public static RouteFormValues CreateRouteFormValues(global::System.Int32 id, global::System.DateTime month, global::System.Byte valueType)
        {
            RouteFormValues routeFormValues = new RouteFormValues();
            routeFormValues.ID = id;
            routeFormValues.Month = month;
            routeFormValues.ValueType = valueType;
            return routeFormValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.DateTime _Month;
        partial void OnMonthChanging(global::System.DateTime value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ValueType
        {
            get
            {
                return _ValueType;
            }
            set
            {
                OnValueTypeChanging(value);
                ReportPropertyChanging("ValueType");
                _ValueType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueType");
                OnValueTypeChanged();
            }
        }
        private global::System.Byte _ValueType;
        partial void OnValueTypeChanging(global::System.Byte value);
        partial void OnValueTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Int32> _Value;
        partial void OnValueChanging(Nullable<global::System.Int32> value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteFormValues_PrivateCounters", "PrivateCounters")]
        public PrivateCounters PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_RouteFormValues_PrivateCounters", "PrivateCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_RouteFormValues_PrivateCounters", "PrivateCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateCounters> PrivateCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_RouteFormValues_PrivateCounters", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_RouteFormValues_PrivateCounters", "PrivateCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RouteFormValues_RouteFormPoses", "RouteFormPoses")]
        public RouteFormPoses RouteFormPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteFormPoses>("AlphaDataBaseModel.FK_RouteFormValues_RouteFormPoses", "RouteFormPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteFormPoses>("AlphaDataBaseModel.FK_RouteFormValues_RouteFormPoses", "RouteFormPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RouteFormPoses> RouteFormPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RouteFormPoses>("AlphaDataBaseModel.FK_RouteFormValues_RouteFormPoses", "RouteFormPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RouteFormPoses>("AlphaDataBaseModel.FK_RouteFormValues_RouteFormPoses", "RouteFormPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Settings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Settings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Settings object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Settings CreateSettings(global::System.Int32 id, global::System.String name, global::System.String value)
        {
            Settings settings = new Settings();
            settings.ID = id;
            settings.Name = name;
            settings.Value = value;
            return settings;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="aka">Initial value of the Aka property.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String login, global::System.String password, global::System.String aka)
        {
            Users users = new Users();
            users.ID = id;
            users.Login = login;
            users.Password = password;
            users.Aka = aka;
            return users;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Aka
        {
            get
            {
                return _Aka;
            }
            set
            {
                OnAkaChanging(value);
                ReportPropertyChanging("Aka");
                _Aka = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Aka");
                OnAkaChanged();
            }
        }
        private global::System.String _Aka;
        partial void OnAkaChanging(global::System.String value);
        partial void OnAkaChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsUploads_Users", "DecFormsUploads")]
        public EntityCollection<DecFormsUploads> DecFormsUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "DecFormsUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsUploads>("AlphaDataBaseModel.FK_DecFormsUploads_Users", "DecFormsUploads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DecFormsDownloads_Users", "DecFormsDownloads")]
        public EntityCollection<DecFormsDownloads> DecFormsDownloads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DecFormsDownloads>("AlphaDataBaseModel.FK_DecFormsDownloads_Users", "DecFormsDownloads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DecFormsDownloads>("AlphaDataBaseModel.FK_DecFormsDownloads_Users", "DecFormsDownloads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateValuesUploads_Users", "PrivateValuesUploads")]
        public EntityCollection<PrivateValuesUploads> PrivateValuesUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateValuesUploads>("AlphaDataBaseModel.FK_PrivateValuesUploads_Users", "PrivateValuesUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateValuesUploads>("AlphaDataBaseModel.FK_PrivateValuesUploads_Users", "PrivateValuesUploads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BuildingValuesUploads_Users", "BuildingValuesUploads")]
        public EntityCollection<BuildingValuesUploads> BuildingValuesUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuildingValuesUploads>("AlphaDataBaseModel.FK_BuildingValuesUploads_Users", "BuildingValuesUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuildingValuesUploads>("AlphaDataBaseModel.FK_BuildingValuesUploads_Users", "BuildingValuesUploads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CalculationUploads_Users", "CalculationUploads")]
        public EntityCollection<CalculationUploads> CalculationUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculationUploads>("AlphaDataBaseModel.FK_CalculationUploads_Users", "CalculationUploads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculationUploads>("AlphaDataBaseModel.FK_CalculationUploads_Users", "CalculationUploads", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
