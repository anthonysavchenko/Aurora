//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BenefitCorrectionOpers), "BenefitCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "BenefitCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "BenefitCorrectionOpers_fk", "ChargeCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.ChargeCorrectionOpers), "BenefitCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitCorrectionOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "BenefitOpers_fk", "BenefitCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.BenefitCorrectionOpers), "BenefitOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_BenefitOpers", "BenefitOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BenefitOpers), "BenefitOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "BenefitOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BenefitOpers_ChargeOpers", "ChargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.ChargeOpers), "BenefitOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "DebtBillDocs_fk", "BillSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BillSets), "DebtBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DebtBillDocs))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "RegularBillDocs_fk", "BillSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BillSets), "RegularBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RegularBillDocs))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "TotalBillDocs_fk", "BillSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.BillSets), "TotalBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.TotalBillDocs))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Buildings_Streets", "Streets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Streets), "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Buildings))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CommonCounters_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "CommonCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CommonCounters))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Customers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.ChargeCorrectionOpers), "ChargeCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_Contractors", "Contractors", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Contractors), "ChargeCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "ChargeCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "ChargeOpers_fk", "ChargeCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.ChargeCorrectionOpers), "ChargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_ChargeOpers", "ChargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.ChargeOpers), "ChargeOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_Contractors", "Contractors", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Contractors), "ChargeOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "ChargeOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "ChargeOpers_fk2", "RegularBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.RegularBillDocs), "ChargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeOpers_ChargeSets", "ChargeSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.ChargeSets), "ChargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeOpers_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "ChargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOpers_ChargeOpers", "ChargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.ChargeOpers), "OverpaymentCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.OverpaymentCorrectionOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeSets_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "ChargeSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeSets))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CommonCounters_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "CommonCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CommonCounters))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CommonCounterValues_CommonCounters", "CommonCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CommonCounters), "CommonCounterValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CommonCounterValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CustomerPoses_Contractors", "Contractors", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Contractors), "CustomerPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CustomerPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_Contractors", "Contractors", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Contractors), "RechargeOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargeOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CustomerPoses_CustomerPoses", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "CustomerPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CustomerPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CustomerPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "CustomerPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CustomerPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_OverpaymentOpers_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "OverpaymentOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.OverpaymentOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentOpers_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "PaymentOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargeOpers_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "RechargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargeOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "RegularBillDocs_fk2", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "RegularBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RegularBillDocs))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "TotalBillDocs_fk2", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "TotalBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.TotalBillDocs))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentSets_Intermediaries", "Intermediaries", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.Intermediaries), "PaymentSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentSets))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.OverpaymentCorrectionOpers), "OverpaymentCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.OverpaymentCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "OverpaymentCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.OverpaymentCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.OverpaymentCorrectionOpers), "OverpaymentOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.OverpaymentOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.OverpaymentOpers), "OverpaymentOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.OverpaymentOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_OverpaymentOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "OverpaymentOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.OverpaymentOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PaymentCorrectionOpers), "PaymentCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "PaymentCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOpers_PaymentOpers", "PaymentOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PaymentOpers), "PaymentCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentCorrectionOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentOpers_PaymentCorrectionOpers", "PaymentCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.PaymentCorrectionOpers), "PaymentOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentOperPoses_PaymentOpers", "PaymentOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PaymentOpers), "PaymentOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "PaymentOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentOpers_PaymentSets", "PaymentSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PaymentSets), "PaymentOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PaymentSets_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "PaymentSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PaymentSets))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.PrivateCounters), "PrivateCounterValues", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateCounterValues))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RebenefitOpers), "RebenefitOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RebenefitOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "RebenefitOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RebenefitOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RebenefitOpers_RechargeOpers", "RechargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RechargeOpers), "RebenefitOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RebenefitOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_RechargeOpers", "RechargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RechargeOpers), "RechargeOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargeOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "RechargeOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargeOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargeOpers_RechargeSets", "RechargeSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RechargeSets), "RechargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargeOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargeSets_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Users), "RechargeSets", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargeSets))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "RegularBillDocCounterPoses_fk", "RegularBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RegularBillDocs), "RegularBillDocCounterPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RegularBillDocCounterPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "RegularBillDocSeviceTypePoses_fk", "RegularBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RegularBillDocs), "RegularBillDocSeviceTypePoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RegularBillDocSeviceTypePoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "RegularBillDocSharedCounterPoses_fk", "RegularBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.RegularBillDocs), "RegularBillDocSharedCounterPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RegularBillDocSharedCounterPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Services_ServiceTypes", "ServiceTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.ServiceTypes), "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Services))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "TotalBillDocPoses_fk", "TotalBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.TotalBillDocs), "TotalBillDocPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.TotalBillDocPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOpers_RechargeOpers", "RechargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.RechargeOpers), "ChargeCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ChargeCorrectionOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargeOpers_ChargeCorrectionOpers", "ChargeCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.ChargeCorrectionOpers), "RechargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargeOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargeOpers_ChargeOpers", "ChargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.ChargeOpers), "RechargeOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargeOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RebenefitOpers_BenefitCorrectionOpers", "BenefitCorrectionOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.BenefitCorrectionOpers), "RebenefitOpers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RebenefitOpers))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CommonCounterCoefficients_CommonCounters", "CommonCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CommonCounters), "CommonCounterCoefficients", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CommonCounterCoefficients))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Residents_BenefitTypes", "BenefitTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.BenefitTypes), "Residents", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Residents))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Residents_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Customers), "Residents", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Residents))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_Contractors", "Contractors", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Contractors), "BenefitCorrectionOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitCorrectionOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_Contractors", "Contractors", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Contractors), "BenefitOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.BenefitOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_Contractors", "Contractors", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Contractors), "RebenefitOperPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RebenefitOperPoses))]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Customers_Users", "Users", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.Users), "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Customers), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PublicPlaces_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "PublicPlaces", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PublicPlaces), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PublicPlaces_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "PublicPlaces", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PublicPlaces), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Buildings_BankDetails", "BankDetails", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.BankDetails), "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Buildings), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_DebtBillDocs_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.Customers), "DebtBillDocs", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.DebtBillDocs), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RegularBillDocSeviceTypePoses_ServiceTypes", "ServiceTypes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.ServiceTypes), "RegularBillDocSeviceTypePoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RegularBillDocSeviceTypePoses), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PublicPlaceServiceVolumes_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "PublicPlaceServiceVolumes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PublicPlaceServiceVolumes), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PublicPlaceServiceVolumes_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Services), "PublicPlaceServiceVolumes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PublicPlaceServiceVolumes), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_CustomerPoses_PrivateCounters", "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.PrivateCounters), "CustomerPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.CustomerPoses), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "Customers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.Customers), "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateCounters), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Services", "Services", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.Services), "PrivateCounters", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.PrivateCounters), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_RechargePercentCorrections_CustomerPoses", "CustomerPoses", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.CustomerPoses), "RechargePercentCorrections", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.RechargePercentCorrections), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_Buildings_CounterValueCollectDistricts", "CounterValueCollectDistricts", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Taumis.Alpha.DataBase.CounterValueCollectDistricts), "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.Buildings), true)]
[assembly: EdmRelationshipAttribute("AlphaDataBaseModel", "FK_ElectricitySharedCounterVolumes_Buildings", "Buildings", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Taumis.Alpha.DataBase.Buildings), "ElectricitySharedCounterVolumes", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Taumis.Alpha.DataBase.ElectricitySharedCounterVolumes), true)]

#endregion

namespace Taumis.Alpha.DataBase
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitCorrectionOperPoses> BenefitCorrectionOperPoses
        {
            get
            {
                if ((_BenefitCorrectionOperPoses == null))
                {
                    _BenefitCorrectionOperPoses = base.CreateObjectSet<BenefitCorrectionOperPoses>("BenefitCorrectionOperPoses");
                }
                return _BenefitCorrectionOperPoses;
            }
        }
        private ObjectSet<BenefitCorrectionOperPoses> _BenefitCorrectionOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitCorrectionOpers> BenefitCorrectionOpers
        {
            get
            {
                if ((_BenefitCorrectionOpers == null))
                {
                    _BenefitCorrectionOpers = base.CreateObjectSet<BenefitCorrectionOpers>("BenefitCorrectionOpers");
                }
                return _BenefitCorrectionOpers;
            }
        }
        private ObjectSet<BenefitCorrectionOpers> _BenefitCorrectionOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitOperPoses> BenefitOperPoses
        {
            get
            {
                if ((_BenefitOperPoses == null))
                {
                    _BenefitOperPoses = base.CreateObjectSet<BenefitOperPoses>("BenefitOperPoses");
                }
                return _BenefitOperPoses;
            }
        }
        private ObjectSet<BenefitOperPoses> _BenefitOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitOpers> BenefitOpers
        {
            get
            {
                if ((_BenefitOpers == null))
                {
                    _BenefitOpers = base.CreateObjectSet<BenefitOpers>("BenefitOpers");
                }
                return _BenefitOpers;
            }
        }
        private ObjectSet<BenefitOpers> _BenefitOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitTypes> BenefitTypes
        {
            get
            {
                if ((_BenefitTypes == null))
                {
                    _BenefitTypes = base.CreateObjectSet<BenefitTypes>("BenefitTypes");
                }
                return _BenefitTypes;
            }
        }
        private ObjectSet<BenefitTypes> _BenefitTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillSets> BillSets
        {
            get
            {
                if ((_BillSets == null))
                {
                    _BillSets = base.CreateObjectSet<BillSets>("BillSets");
                }
                return _BillSets;
            }
        }
        private ObjectSet<BillSets> _BillSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Buildings> Buildings
        {
            get
            {
                if ((_Buildings == null))
                {
                    _Buildings = base.CreateObjectSet<Buildings>("Buildings");
                }
                return _Buildings;
            }
        }
        private ObjectSet<Buildings> _Buildings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChargeCorrectionOperPoses> ChargeCorrectionOperPoses
        {
            get
            {
                if ((_ChargeCorrectionOperPoses == null))
                {
                    _ChargeCorrectionOperPoses = base.CreateObjectSet<ChargeCorrectionOperPoses>("ChargeCorrectionOperPoses");
                }
                return _ChargeCorrectionOperPoses;
            }
        }
        private ObjectSet<ChargeCorrectionOperPoses> _ChargeCorrectionOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChargeCorrectionOpers> ChargeCorrectionOpers
        {
            get
            {
                if ((_ChargeCorrectionOpers == null))
                {
                    _ChargeCorrectionOpers = base.CreateObjectSet<ChargeCorrectionOpers>("ChargeCorrectionOpers");
                }
                return _ChargeCorrectionOpers;
            }
        }
        private ObjectSet<ChargeCorrectionOpers> _ChargeCorrectionOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChargeOperPoses> ChargeOperPoses
        {
            get
            {
                if ((_ChargeOperPoses == null))
                {
                    _ChargeOperPoses = base.CreateObjectSet<ChargeOperPoses>("ChargeOperPoses");
                }
                return _ChargeOperPoses;
            }
        }
        private ObjectSet<ChargeOperPoses> _ChargeOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChargeOpers> ChargeOpers
        {
            get
            {
                if ((_ChargeOpers == null))
                {
                    _ChargeOpers = base.CreateObjectSet<ChargeOpers>("ChargeOpers");
                }
                return _ChargeOpers;
            }
        }
        private ObjectSet<ChargeOpers> _ChargeOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChargeSets> ChargeSets
        {
            get
            {
                if ((_ChargeSets == null))
                {
                    _ChargeSets = base.CreateObjectSet<ChargeSets>("ChargeSets");
                }
                return _ChargeSets;
            }
        }
        private ObjectSet<ChargeSets> _ChargeSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommonCounters> CommonCounters
        {
            get
            {
                if ((_CommonCounters == null))
                {
                    _CommonCounters = base.CreateObjectSet<CommonCounters>("CommonCounters");
                }
                return _CommonCounters;
            }
        }
        private ObjectSet<CommonCounters> _CommonCounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommonCounterValues> CommonCounterValues
        {
            get
            {
                if ((_CommonCounterValues == null))
                {
                    _CommonCounterValues = base.CreateObjectSet<CommonCounterValues>("CommonCounterValues");
                }
                return _CommonCounterValues;
            }
        }
        private ObjectSet<CommonCounterValues> _CommonCounterValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contractors> Contractors
        {
            get
            {
                if ((_Contractors == null))
                {
                    _Contractors = base.CreateObjectSet<Contractors>("Contractors");
                }
                return _Contractors;
            }
        }
        private ObjectSet<Contractors> _Contractors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerPoses> CustomerPoses
        {
            get
            {
                if ((_CustomerPoses == null))
                {
                    _CustomerPoses = base.CreateObjectSet<CustomerPoses>("CustomerPoses");
                }
                return _CustomerPoses;
            }
        }
        private ObjectSet<CustomerPoses> _CustomerPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customers> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customers>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customers> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DebtBillDocs> DebtBillDocs
        {
            get
            {
                if ((_DebtBillDocs == null))
                {
                    _DebtBillDocs = base.CreateObjectSet<DebtBillDocs>("DebtBillDocs");
                }
                return _DebtBillDocs;
            }
        }
        private ObjectSet<DebtBillDocs> _DebtBillDocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Intermediaries> Intermediaries
        {
            get
            {
                if ((_Intermediaries == null))
                {
                    _Intermediaries = base.CreateObjectSet<Intermediaries>("Intermediaries");
                }
                return _Intermediaries;
            }
        }
        private ObjectSet<Intermediaries> _Intermediaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OverpaymentCorrectionOperPoses> OverpaymentCorrectionOperPoses
        {
            get
            {
                if ((_OverpaymentCorrectionOperPoses == null))
                {
                    _OverpaymentCorrectionOperPoses = base.CreateObjectSet<OverpaymentCorrectionOperPoses>("OverpaymentCorrectionOperPoses");
                }
                return _OverpaymentCorrectionOperPoses;
            }
        }
        private ObjectSet<OverpaymentCorrectionOperPoses> _OverpaymentCorrectionOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OverpaymentCorrectionOpers> OverpaymentCorrectionOpers
        {
            get
            {
                if ((_OverpaymentCorrectionOpers == null))
                {
                    _OverpaymentCorrectionOpers = base.CreateObjectSet<OverpaymentCorrectionOpers>("OverpaymentCorrectionOpers");
                }
                return _OverpaymentCorrectionOpers;
            }
        }
        private ObjectSet<OverpaymentCorrectionOpers> _OverpaymentCorrectionOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OverpaymentOperPoses> OverpaymentOperPoses
        {
            get
            {
                if ((_OverpaymentOperPoses == null))
                {
                    _OverpaymentOperPoses = base.CreateObjectSet<OverpaymentOperPoses>("OverpaymentOperPoses");
                }
                return _OverpaymentOperPoses;
            }
        }
        private ObjectSet<OverpaymentOperPoses> _OverpaymentOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OverpaymentOpers> OverpaymentOpers
        {
            get
            {
                if ((_OverpaymentOpers == null))
                {
                    _OverpaymentOpers = base.CreateObjectSet<OverpaymentOpers>("OverpaymentOpers");
                }
                return _OverpaymentOpers;
            }
        }
        private ObjectSet<OverpaymentOpers> _OverpaymentOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentCorrectionOperPoses> PaymentCorrectionOperPoses
        {
            get
            {
                if ((_PaymentCorrectionOperPoses == null))
                {
                    _PaymentCorrectionOperPoses = base.CreateObjectSet<PaymentCorrectionOperPoses>("PaymentCorrectionOperPoses");
                }
                return _PaymentCorrectionOperPoses;
            }
        }
        private ObjectSet<PaymentCorrectionOperPoses> _PaymentCorrectionOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentCorrectionOpers> PaymentCorrectionOpers
        {
            get
            {
                if ((_PaymentCorrectionOpers == null))
                {
                    _PaymentCorrectionOpers = base.CreateObjectSet<PaymentCorrectionOpers>("PaymentCorrectionOpers");
                }
                return _PaymentCorrectionOpers;
            }
        }
        private ObjectSet<PaymentCorrectionOpers> _PaymentCorrectionOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentOperPoses> PaymentOperPoses
        {
            get
            {
                if ((_PaymentOperPoses == null))
                {
                    _PaymentOperPoses = base.CreateObjectSet<PaymentOperPoses>("PaymentOperPoses");
                }
                return _PaymentOperPoses;
            }
        }
        private ObjectSet<PaymentOperPoses> _PaymentOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentOpers> PaymentOpers
        {
            get
            {
                if ((_PaymentOpers == null))
                {
                    _PaymentOpers = base.CreateObjectSet<PaymentOpers>("PaymentOpers");
                }
                return _PaymentOpers;
            }
        }
        private ObjectSet<PaymentOpers> _PaymentOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentSets> PaymentSets
        {
            get
            {
                if ((_PaymentSets == null))
                {
                    _PaymentSets = base.CreateObjectSet<PaymentSets>("PaymentSets");
                }
                return _PaymentSets;
            }
        }
        private ObjectSet<PaymentSets> _PaymentSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateCounters> PrivateCounters
        {
            get
            {
                if ((_PrivateCounters == null))
                {
                    _PrivateCounters = base.CreateObjectSet<PrivateCounters>("PrivateCounters");
                }
                return _PrivateCounters;
            }
        }
        private ObjectSet<PrivateCounters> _PrivateCounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateCounterValues> PrivateCounterValues
        {
            get
            {
                if ((_PrivateCounterValues == null))
                {
                    _PrivateCounterValues = base.CreateObjectSet<PrivateCounterValues>("PrivateCounterValues");
                }
                return _PrivateCounterValues;
            }
        }
        private ObjectSet<PrivateCounterValues> _PrivateCounterValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RebenefitOperPoses> RebenefitOperPoses
        {
            get
            {
                if ((_RebenefitOperPoses == null))
                {
                    _RebenefitOperPoses = base.CreateObjectSet<RebenefitOperPoses>("RebenefitOperPoses");
                }
                return _RebenefitOperPoses;
            }
        }
        private ObjectSet<RebenefitOperPoses> _RebenefitOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RebenefitOpers> RebenefitOpers
        {
            get
            {
                if ((_RebenefitOpers == null))
                {
                    _RebenefitOpers = base.CreateObjectSet<RebenefitOpers>("RebenefitOpers");
                }
                return _RebenefitOpers;
            }
        }
        private ObjectSet<RebenefitOpers> _RebenefitOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RechargeOperPoses> RechargeOperPoses
        {
            get
            {
                if ((_RechargeOperPoses == null))
                {
                    _RechargeOperPoses = base.CreateObjectSet<RechargeOperPoses>("RechargeOperPoses");
                }
                return _RechargeOperPoses;
            }
        }
        private ObjectSet<RechargeOperPoses> _RechargeOperPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RechargeOpers> RechargeOpers
        {
            get
            {
                if ((_RechargeOpers == null))
                {
                    _RechargeOpers = base.CreateObjectSet<RechargeOpers>("RechargeOpers");
                }
                return _RechargeOpers;
            }
        }
        private ObjectSet<RechargeOpers> _RechargeOpers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RechargeSets> RechargeSets
        {
            get
            {
                if ((_RechargeSets == null))
                {
                    _RechargeSets = base.CreateObjectSet<RechargeSets>("RechargeSets");
                }
                return _RechargeSets;
            }
        }
        private ObjectSet<RechargeSets> _RechargeSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegularBillDocCounterPoses> RegularBillDocCounterPoses
        {
            get
            {
                if ((_RegularBillDocCounterPoses == null))
                {
                    _RegularBillDocCounterPoses = base.CreateObjectSet<RegularBillDocCounterPoses>("RegularBillDocCounterPoses");
                }
                return _RegularBillDocCounterPoses;
            }
        }
        private ObjectSet<RegularBillDocCounterPoses> _RegularBillDocCounterPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegularBillDocs> RegularBillDocs
        {
            get
            {
                if ((_RegularBillDocs == null))
                {
                    _RegularBillDocs = base.CreateObjectSet<RegularBillDocs>("RegularBillDocs");
                }
                return _RegularBillDocs;
            }
        }
        private ObjectSet<RegularBillDocs> _RegularBillDocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegularBillDocSeviceTypePoses> RegularBillDocSeviceTypePoses
        {
            get
            {
                if ((_RegularBillDocSeviceTypePoses == null))
                {
                    _RegularBillDocSeviceTypePoses = base.CreateObjectSet<RegularBillDocSeviceTypePoses>("RegularBillDocSeviceTypePoses");
                }
                return _RegularBillDocSeviceTypePoses;
            }
        }
        private ObjectSet<RegularBillDocSeviceTypePoses> _RegularBillDocSeviceTypePoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegularBillDocSharedCounterPoses> RegularBillDocSharedCounterPoses
        {
            get
            {
                if ((_RegularBillDocSharedCounterPoses == null))
                {
                    _RegularBillDocSharedCounterPoses = base.CreateObjectSet<RegularBillDocSharedCounterPoses>("RegularBillDocSharedCounterPoses");
                }
                return _RegularBillDocSharedCounterPoses;
            }
        }
        private ObjectSet<RegularBillDocSharedCounterPoses> _RegularBillDocSharedCounterPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Services> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Services>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Services> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceTypes> ServiceTypes
        {
            get
            {
                if ((_ServiceTypes == null))
                {
                    _ServiceTypes = base.CreateObjectSet<ServiceTypes>("ServiceTypes");
                }
                return _ServiceTypes;
            }
        }
        private ObjectSet<ServiceTypes> _ServiceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Streets> Streets
        {
            get
            {
                if ((_Streets == null))
                {
                    _Streets = base.CreateObjectSet<Streets>("Streets");
                }
                return _Streets;
            }
        }
        private ObjectSet<Streets> _Streets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalBillDocPoses> TotalBillDocPoses
        {
            get
            {
                if ((_TotalBillDocPoses == null))
                {
                    _TotalBillDocPoses = base.CreateObjectSet<TotalBillDocPoses>("TotalBillDocPoses");
                }
                return _TotalBillDocPoses;
            }
        }
        private ObjectSet<TotalBillDocPoses> _TotalBillDocPoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TotalBillDocs> TotalBillDocs
        {
            get
            {
                if ((_TotalBillDocs == null))
                {
                    _TotalBillDocs = base.CreateObjectSet<TotalBillDocs>("TotalBillDocs");
                }
                return _TotalBillDocs;
            }
        }
        private ObjectSet<TotalBillDocs> _TotalBillDocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommonCounterCoefficients> CommonCounterCoefficients
        {
            get
            {
                if ((_CommonCounterCoefficients == null))
                {
                    _CommonCounterCoefficients = base.CreateObjectSet<CommonCounterCoefficients>("CommonCounterCoefficients");
                }
                return _CommonCounterCoefficients;
            }
        }
        private ObjectSet<CommonCounterCoefficients> _CommonCounterCoefficients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Settings> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Settings>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Settings> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Residents> Residents
        {
            get
            {
                if ((_Residents == null))
                {
                    _Residents = base.CreateObjectSet<Residents>("Residents");
                }
                return _Residents;
            }
        }
        private ObjectSet<Residents> _Residents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PublicPlaces> PublicPlaces
        {
            get
            {
                if ((_PublicPlaces == null))
                {
                    _PublicPlaces = base.CreateObjectSet<PublicPlaces>("PublicPlaces");
                }
                return _PublicPlaces;
            }
        }
        private ObjectSet<PublicPlaces> _PublicPlaces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankDetails> BankDetails
        {
            get
            {
                if ((_BankDetails == null))
                {
                    _BankDetails = base.CreateObjectSet<BankDetails>("BankDetails");
                }
                return _BankDetails;
            }
        }
        private ObjectSet<BankDetails> _BankDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PublicPlaceServiceVolumes> PublicPlaceServiceVolumes
        {
            get
            {
                if ((_PublicPlaceServiceVolumes == null))
                {
                    _PublicPlaceServiceVolumes = base.CreateObjectSet<PublicPlaceServiceVolumes>("PublicPlaceServiceVolumes");
                }
                return _PublicPlaceServiceVolumes;
            }
        }
        private ObjectSet<PublicPlaceServiceVolumes> _PublicPlaceServiceVolumes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RechargePercentCorrections> RechargePercentCorrections
        {
            get
            {
                if ((_RechargePercentCorrections == null))
                {
                    _RechargePercentCorrections = base.CreateObjectSet<RechargePercentCorrections>("RechargePercentCorrections");
                }
                return _RechargePercentCorrections;
            }
        }
        private ObjectSet<RechargePercentCorrections> _RechargePercentCorrections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CounterValueCollectDistricts> CounterValueCollectDistricts
        {
            get
            {
                if ((_CounterValueCollectDistricts == null))
                {
                    _CounterValueCollectDistricts = base.CreateObjectSet<CounterValueCollectDistricts>("CounterValueCollectDistricts");
                }
                return _CounterValueCollectDistricts;
            }
        }
        private ObjectSet<CounterValueCollectDistricts> _CounterValueCollectDistricts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ElectricitySharedCounterVolumes> ElectricitySharedCounterVolumes
        {
            get
            {
                if ((_ElectricitySharedCounterVolumes == null))
                {
                    _ElectricitySharedCounterVolumes = base.CreateObjectSet<ElectricitySharedCounterVolumes>("ElectricitySharedCounterVolumes");
                }
                return _ElectricitySharedCounterVolumes;
            }
        }
        private ObjectSet<ElectricitySharedCounterVolumes> _ElectricitySharedCounterVolumes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitCorrectionOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitCorrectionOperPoses(BenefitCorrectionOperPoses benefitCorrectionOperPoses)
        {
            base.AddObject("BenefitCorrectionOperPoses", benefitCorrectionOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitCorrectionOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitCorrectionOpers(BenefitCorrectionOpers benefitCorrectionOpers)
        {
            base.AddObject("BenefitCorrectionOpers", benefitCorrectionOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitOperPoses(BenefitOperPoses benefitOperPoses)
        {
            base.AddObject("BenefitOperPoses", benefitOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitOpers(BenefitOpers benefitOpers)
        {
            base.AddObject("BenefitOpers", benefitOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitTypes(BenefitTypes benefitTypes)
        {
            base.AddObject("BenefitTypes", benefitTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillSets(BillSets billSets)
        {
            base.AddObject("BillSets", billSets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Buildings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildings(Buildings buildings)
        {
            base.AddObject("Buildings", buildings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChargeCorrectionOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChargeCorrectionOperPoses(ChargeCorrectionOperPoses chargeCorrectionOperPoses)
        {
            base.AddObject("ChargeCorrectionOperPoses", chargeCorrectionOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChargeCorrectionOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChargeCorrectionOpers(ChargeCorrectionOpers chargeCorrectionOpers)
        {
            base.AddObject("ChargeCorrectionOpers", chargeCorrectionOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChargeOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChargeOperPoses(ChargeOperPoses chargeOperPoses)
        {
            base.AddObject("ChargeOperPoses", chargeOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChargeOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChargeOpers(ChargeOpers chargeOpers)
        {
            base.AddObject("ChargeOpers", chargeOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChargeSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChargeSets(ChargeSets chargeSets)
        {
            base.AddObject("ChargeSets", chargeSets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommonCounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommonCounters(CommonCounters commonCounters)
        {
            base.AddObject("CommonCounters", commonCounters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommonCounterValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommonCounterValues(CommonCounterValues commonCounterValues)
        {
            base.AddObject("CommonCounterValues", commonCounterValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contractors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractors(Contractors contractors)
        {
            base.AddObject("Contractors", contractors);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerPoses(CustomerPoses customerPoses)
        {
            base.AddObject("CustomerPoses", customerPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customers customers)
        {
            base.AddObject("Customers", customers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DebtBillDocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDebtBillDocs(DebtBillDocs debtBillDocs)
        {
            base.AddObject("DebtBillDocs", debtBillDocs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Intermediaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIntermediaries(Intermediaries intermediaries)
        {
            base.AddObject("Intermediaries", intermediaries);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OverpaymentCorrectionOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOverpaymentCorrectionOperPoses(OverpaymentCorrectionOperPoses overpaymentCorrectionOperPoses)
        {
            base.AddObject("OverpaymentCorrectionOperPoses", overpaymentCorrectionOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OverpaymentCorrectionOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOverpaymentCorrectionOpers(OverpaymentCorrectionOpers overpaymentCorrectionOpers)
        {
            base.AddObject("OverpaymentCorrectionOpers", overpaymentCorrectionOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OverpaymentOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOverpaymentOperPoses(OverpaymentOperPoses overpaymentOperPoses)
        {
            base.AddObject("OverpaymentOperPoses", overpaymentOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OverpaymentOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOverpaymentOpers(OverpaymentOpers overpaymentOpers)
        {
            base.AddObject("OverpaymentOpers", overpaymentOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentCorrectionOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentCorrectionOperPoses(PaymentCorrectionOperPoses paymentCorrectionOperPoses)
        {
            base.AddObject("PaymentCorrectionOperPoses", paymentCorrectionOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentCorrectionOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentCorrectionOpers(PaymentCorrectionOpers paymentCorrectionOpers)
        {
            base.AddObject("PaymentCorrectionOpers", paymentCorrectionOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentOperPoses(PaymentOperPoses paymentOperPoses)
        {
            base.AddObject("PaymentOperPoses", paymentOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentOpers(PaymentOpers paymentOpers)
        {
            base.AddObject("PaymentOpers", paymentOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentSets(PaymentSets paymentSets)
        {
            base.AddObject("PaymentSets", paymentSets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateCounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateCounters(PrivateCounters privateCounters)
        {
            base.AddObject("PrivateCounters", privateCounters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateCounterValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateCounterValues(PrivateCounterValues privateCounterValues)
        {
            base.AddObject("PrivateCounterValues", privateCounterValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RebenefitOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRebenefitOperPoses(RebenefitOperPoses rebenefitOperPoses)
        {
            base.AddObject("RebenefitOperPoses", rebenefitOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RebenefitOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRebenefitOpers(RebenefitOpers rebenefitOpers)
        {
            base.AddObject("RebenefitOpers", rebenefitOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RechargeOperPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRechargeOperPoses(RechargeOperPoses rechargeOperPoses)
        {
            base.AddObject("RechargeOperPoses", rechargeOperPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RechargeOpers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRechargeOpers(RechargeOpers rechargeOpers)
        {
            base.AddObject("RechargeOpers", rechargeOpers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RechargeSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRechargeSets(RechargeSets rechargeSets)
        {
            base.AddObject("RechargeSets", rechargeSets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegularBillDocCounterPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegularBillDocCounterPoses(RegularBillDocCounterPoses regularBillDocCounterPoses)
        {
            base.AddObject("RegularBillDocCounterPoses", regularBillDocCounterPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegularBillDocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegularBillDocs(RegularBillDocs regularBillDocs)
        {
            base.AddObject("RegularBillDocs", regularBillDocs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegularBillDocSeviceTypePoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegularBillDocSeviceTypePoses(RegularBillDocSeviceTypePoses regularBillDocSeviceTypePoses)
        {
            base.AddObject("RegularBillDocSeviceTypePoses", regularBillDocSeviceTypePoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegularBillDocSharedCounterPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegularBillDocSharedCounterPoses(RegularBillDocSharedCounterPoses regularBillDocSharedCounterPoses)
        {
            base.AddObject("RegularBillDocSharedCounterPoses", regularBillDocSharedCounterPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Services services)
        {
            base.AddObject("Services", services);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceTypes(ServiceTypes serviceTypes)
        {
            base.AddObject("ServiceTypes", serviceTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Streets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStreets(Streets streets)
        {
            base.AddObject("Streets", streets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalBillDocPoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalBillDocPoses(TotalBillDocPoses totalBillDocPoses)
        {
            base.AddObject("TotalBillDocPoses", totalBillDocPoses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TotalBillDocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTotalBillDocs(TotalBillDocs totalBillDocs)
        {
            base.AddObject("TotalBillDocs", totalBillDocs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommonCounterCoefficients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommonCounterCoefficients(CommonCounterCoefficients commonCounterCoefficients)
        {
            base.AddObject("CommonCounterCoefficients", commonCounterCoefficients);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Settings settings)
        {
            base.AddObject("Settings", settings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Residents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResidents(Residents residents)
        {
            base.AddObject("Residents", residents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PublicPlaces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublicPlaces(PublicPlaces publicPlaces)
        {
            base.AddObject("PublicPlaces", publicPlaces);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankDetails(BankDetails bankDetails)
        {
            base.AddObject("BankDetails", bankDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PublicPlaceServiceVolumes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublicPlaceServiceVolumes(PublicPlaceServiceVolumes publicPlaceServiceVolumes)
        {
            base.AddObject("PublicPlaceServiceVolumes", publicPlaceServiceVolumes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RechargePercentCorrections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRechargePercentCorrections(RechargePercentCorrections rechargePercentCorrections)
        {
            base.AddObject("RechargePercentCorrections", rechargePercentCorrections);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CounterValueCollectDistricts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCounterValueCollectDistricts(CounterValueCollectDistricts counterValueCollectDistricts)
        {
            base.AddObject("CounterValueCollectDistricts", counterValueCollectDistricts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ElectricitySharedCounterVolumes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElectricitySharedCounterVolumes(ElectricitySharedCounterVolumes electricitySharedCounterVolumes)
        {
            base.AddObject("ElectricitySharedCounterVolumes", electricitySharedCounterVolumes);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="path">No Metadata Documentation available.</param>
        /// <param name="step">No Metadata Documentation available.</param>
        public int BackupDatabase(global::System.String name, global::System.String path, Nullable<global::System.Byte> step)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            ObjectParameter stepParameter;
            if (step.HasValue)
            {
                stepParameter = new ObjectParameter("step", step);
            }
            else
            {
                stepParameter = new ObjectParameter("step", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction("BackupDatabase", nameParameter, pathParameter, stepParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BankDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankDetails object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="bIK">Initial value of the BIK property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        public static BankDetails CreateBankDetails(global::System.Int32 id, global::System.String name, global::System.String bIK, global::System.String account)
        {
            BankDetails bankDetails = new BankDetails();
            bankDetails.ID = id;
            bankDetails.Name = name;
            bankDetails.BIK = bIK;
            bankDetails.Account = account;
            return bankDetails;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BIK
        {
            get
            {
                return _BIK;
            }
            set
            {
                OnBIKChanging(value);
                ReportPropertyChanging("BIK");
                _BIK = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BIK");
                OnBIKChanged();
            }
        }
        private global::System.String _BIK;
        partial void OnBIKChanging(global::System.String value);
        partial void OnBIKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KPP
        {
            get
            {
                return _KPP;
            }
            set
            {
                OnKPPChanging(value);
                ReportPropertyChanging("KPP");
                _KPP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KPP");
                OnKPPChanged();
            }
        }
        private global::System.String _KPP;
        partial void OnKPPChanging(global::System.String value);
        partial void OnKPPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CorrAccount
        {
            get
            {
                return _CorrAccount;
            }
            set
            {
                OnCorrAccountChanging(value);
                ReportPropertyChanging("CorrAccount");
                _CorrAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CorrAccount");
                OnCorrAccountChanged();
            }
        }
        private global::System.String _CorrAccount;
        partial void OnCorrAccountChanging(global::System.String value);
        partial void OnCorrAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INN
        {
            get
            {
                return _INN;
            }
            set
            {
                OnINNChanging(value);
                ReportPropertyChanging("INN");
                _INN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INN");
                OnINNChanged();
            }
        }
        private global::System.String _INN;
        partial void OnINNChanging(global::System.String value);
        partial void OnINNChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Buildings_BankDetails", "Buildings")]
        public EntityCollection<Buildings> Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Buildings>("AlphaDataBaseModel.FK_Buildings_BankDetails", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Buildings>("AlphaDataBaseModel.FK_Buildings_BankDetails", "Buildings", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BenefitCorrectionOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitCorrectionOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitCorrectionOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="benefitRule">Initial value of the BenefitRule property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static BenefitCorrectionOperPoses CreateBenefitCorrectionOperPoses(global::System.Int32 id, global::System.Byte benefitRule, global::System.Decimal value)
        {
            BenefitCorrectionOperPoses benefitCorrectionOperPoses = new BenefitCorrectionOperPoses();
            benefitCorrectionOperPoses.ID = id;
            benefitCorrectionOperPoses.BenefitRule = benefitRule;
            benefitCorrectionOperPoses.Value = value;
            return benefitCorrectionOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte BenefitRule
        {
            get
            {
                return _BenefitRule;
            }
            set
            {
                OnBenefitRuleChanging(value);
                ReportPropertyChanging("BenefitRule");
                _BenefitRule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitRule");
                OnBenefitRuleChanged();
            }
        }
        private global::System.Byte _BenefitRule;
        partial void OnBenefitRuleChanging(global::System.Byte value);
        partial void OnBenefitRuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOpers")]
        public BenefitCorrectionOpers BenefitCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitCorrectionOpers> BenefitCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Services", "Services", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_Contractors", "Contractors")]
        public Contractors Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Contractors", "Contractors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Contractors", "Contractors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractors> ContractorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Contractors", "Contractors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractors>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Contractors", "Contractors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BenefitCorrectionOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitCorrectionOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitCorrectionOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static BenefitCorrectionOpers CreateBenefitCorrectionOpers(global::System.Int32 id, global::System.Decimal value)
        {
            BenefitCorrectionOpers benefitCorrectionOpers = new BenefitCorrectionOpers();
            benefitCorrectionOpers.ID = id;
            benefitCorrectionOpers.Value = value;
            return benefitCorrectionOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOperPoses")]
        public EntityCollection<BenefitCorrectionOperPoses> BenefitCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitCorrectionOperPoses>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitCorrectionOperPoses>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_BenefitOpers", "BenefitCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "BenefitCorrectionOpers_fk", "ChargeCorrectionOpers")]
        public ChargeCorrectionOpers ChargeCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.BenefitCorrectionOpers_fk", "ChargeCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.BenefitCorrectionOpers_fk", "ChargeCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeCorrectionOpers> ChargeCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.BenefitCorrectionOpers_fk", "ChargeCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.BenefitCorrectionOpers_fk", "ChargeCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "BenefitOpers_fk", "BenefitOpers")]
        public EntityCollection<BenefitOpers> BenefitOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitOpers>("AlphaDataBaseModel.BenefitOpers_fk", "BenefitOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitOpers>("AlphaDataBaseModel.BenefitOpers_fk", "BenefitOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOpers_BenefitCorrectionOpers", "RebenefitOpers")]
        public EntityCollection<RebenefitOpers> RebenefitOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RebenefitOpers>("AlphaDataBaseModel.FK_RebenefitOpers_BenefitCorrectionOpers", "RebenefitOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RebenefitOpers>("AlphaDataBaseModel.FK_RebenefitOpers_BenefitCorrectionOpers", "RebenefitOpers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BenefitOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="benefitRule">Initial value of the BenefitRule property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static BenefitOperPoses CreateBenefitOperPoses(global::System.Int32 id, global::System.Byte benefitRule, global::System.Decimal value)
        {
            BenefitOperPoses benefitOperPoses = new BenefitOperPoses();
            benefitOperPoses.ID = id;
            benefitOperPoses.BenefitRule = benefitRule;
            benefitOperPoses.Value = value;
            return benefitOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte BenefitRule
        {
            get
            {
                return _BenefitRule;
            }
            set
            {
                OnBenefitRuleChanging(value);
                ReportPropertyChanging("BenefitRule");
                _BenefitRule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitRule");
                OnBenefitRuleChanged();
            }
        }
        private global::System.Byte _BenefitRule;
        partial void OnBenefitRuleChanging(global::System.Byte value);
        partial void OnBenefitRuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_BenefitOpers", "BenefitOpers")]
        public BenefitOpers BenefitOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitOpers>("AlphaDataBaseModel.FK_BenefitOperPoses_BenefitOpers", "BenefitOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitOpers>("AlphaDataBaseModel.FK_BenefitOperPoses_BenefitOpers", "BenefitOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitOpers> BenefitOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitOpers>("AlphaDataBaseModel.FK_BenefitOperPoses_BenefitOpers", "BenefitOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitOpers>("AlphaDataBaseModel.FK_BenefitOperPoses_BenefitOpers", "BenefitOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_BenefitOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_BenefitOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_BenefitOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_BenefitOperPoses_Services", "Services", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_Contractors", "Contractors")]
        public Contractors Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_BenefitOperPoses_Contractors", "Contractors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_BenefitOperPoses_Contractors", "Contractors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractors> ContractorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_BenefitOperPoses_Contractors", "Contractors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractors>("AlphaDataBaseModel.FK_BenefitOperPoses_Contractors", "Contractors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BenefitOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static BenefitOpers CreateBenefitOpers(global::System.Int32 id, global::System.Decimal value)
        {
            BenefitOpers benefitOpers = new BenefitOpers();
            benefitOpers.ID = id;
            benefitOpers.Value = value;
            return benefitOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "BenefitOpers_fk", "BenefitCorrectionOpers")]
        public BenefitCorrectionOpers BenefitCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.BenefitOpers_fk", "BenefitCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.BenefitOpers_fk", "BenefitCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitCorrectionOpers> BenefitCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.BenefitOpers_fk", "BenefitCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.BenefitOpers_fk", "BenefitCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_BenefitOpers", "BenefitOperPoses")]
        public EntityCollection<BenefitOperPoses> BenefitOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitOperPoses>("AlphaDataBaseModel.FK_BenefitOperPoses_BenefitOpers", "BenefitOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitOperPoses>("AlphaDataBaseModel.FK_BenefitOperPoses_BenefitOpers", "BenefitOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitOpers_ChargeOpers", "ChargeOpers")]
        public ChargeOpers ChargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_BenefitOpers_ChargeOpers", "ChargeOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_BenefitOpers_ChargeOpers", "ChargeOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeOpers> ChargeOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_BenefitOpers_ChargeOpers", "ChargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_BenefitOpers_ChargeOpers", "ChargeOpers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BenefitTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="benefitRule">Initial value of the BenefitRule property.</param>
        public static BenefitTypes CreateBenefitTypes(global::System.Int32 id, global::System.String name, global::System.String code, global::System.Byte benefitRule)
        {
            BenefitTypes benefitTypes = new BenefitTypes();
            benefitTypes.ID = id;
            benefitTypes.Name = name;
            benefitTypes.Code = code;
            benefitTypes.BenefitRule = benefitRule;
            return benefitTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte BenefitRule
        {
            get
            {
                return _BenefitRule;
            }
            set
            {
                OnBenefitRuleChanging(value);
                ReportPropertyChanging("BenefitRule");
                _BenefitRule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitRule");
                OnBenefitRuleChanged();
            }
        }
        private global::System.Byte _BenefitRule;
        partial void OnBenefitRuleChanging(global::System.Byte value);
        partial void OnBenefitRuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> FixedPercent
        {
            get
            {
                return _FixedPercent;
            }
            set
            {
                OnFixedPercentChanging(value);
                ReportPropertyChanging("FixedPercent");
                _FixedPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FixedPercent");
                OnFixedPercentChanged();
            }
        }
        private Nullable<global::System.Byte> _FixedPercent;
        partial void OnFixedPercentChanging(Nullable<global::System.Byte> value);
        partial void OnFixedPercentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Residents_BenefitTypes", "Residents")]
        public EntityCollection<Residents> Residents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Residents>("AlphaDataBaseModel.FK_Residents_BenefitTypes", "Residents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Residents>("AlphaDataBaseModel.FK_Residents_BenefitTypes", "Residents", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="BillSets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillSets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillSets object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="billType">Initial value of the BillType property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="valueSum">Initial value of the ValueSum property.</param>
        public static BillSets CreateBillSets(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.Int32 number, global::System.Byte billType, global::System.Int16 quantity, global::System.Decimal valueSum)
        {
            BillSets billSets = new BillSets();
            billSets.ID = id;
            billSets.CreationDateTime = creationDateTime;
            billSets.Number = number;
            billSets.BillType = billType;
            billSets.Quantity = quantity;
            billSets.ValueSum = valueSum;
            return billSets;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte BillType
        {
            get
            {
                return _BillType;
            }
            set
            {
                OnBillTypeChanging(value);
                ReportPropertyChanging("BillType");
                _BillType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillType");
                OnBillTypeChanged();
            }
        }
        private global::System.Byte _BillType;
        partial void OnBillTypeChanging(global::System.Byte value);
        partial void OnBillTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int16 _Quantity;
        partial void OnQuantityChanging(global::System.Int16 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ValueSum
        {
            get
            {
                return _ValueSum;
            }
            set
            {
                OnValueSumChanging(value);
                ReportPropertyChanging("ValueSum");
                _ValueSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueSum");
                OnValueSumChanged();
            }
        }
        private global::System.Decimal _ValueSum;
        partial void OnValueSumChanging(global::System.Decimal value);
        partial void OnValueSumChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "DebtBillDocs_fk", "DebtBillDocs")]
        public EntityCollection<DebtBillDocs> DebtBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DebtBillDocs>("AlphaDataBaseModel.DebtBillDocs_fk", "DebtBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DebtBillDocs>("AlphaDataBaseModel.DebtBillDocs_fk", "DebtBillDocs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocs_fk", "RegularBillDocs")]
        public EntityCollection<RegularBillDocs> RegularBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocs_fk", "RegularBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocs_fk", "RegularBillDocs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "TotalBillDocs_fk", "TotalBillDocs")]
        public EntityCollection<TotalBillDocs> TotalBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TotalBillDocs>("AlphaDataBaseModel.TotalBillDocs_fk", "TotalBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TotalBillDocs>("AlphaDataBaseModel.TotalBillDocs_fk", "TotalBillDocs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Buildings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Buildings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Buildings object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="floorCount">Initial value of the FloorCount property.</param>
        /// <param name="entranceCount">Initial value of the EntranceCount property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="nonResidentialPlaceArea">Initial value of the NonResidentialPlaceArea property.</param>
        public static Buildings CreateBuildings(global::System.Int32 id, global::System.String number, global::System.String zipCode, global::System.Int16 floorCount, global::System.Byte entranceCount, global::System.String note, global::System.Decimal nonResidentialPlaceArea)
        {
            Buildings buildings = new Buildings();
            buildings.ID = id;
            buildings.Number = number;
            buildings.ZipCode = zipCode;
            buildings.FloorCount = floorCount;
            buildings.EntranceCount = entranceCount;
            buildings.Note = note;
            buildings.NonResidentialPlaceArea = nonResidentialPlaceArea;
            return buildings;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FloorCount
        {
            get
            {
                return _FloorCount;
            }
            set
            {
                OnFloorCountChanging(value);
                ReportPropertyChanging("FloorCount");
                _FloorCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FloorCount");
                OnFloorCountChanged();
            }
        }
        private global::System.Int16 _FloorCount;
        partial void OnFloorCountChanging(global::System.Int16 value);
        partial void OnFloorCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte EntranceCount
        {
            get
            {
                return _EntranceCount;
            }
            set
            {
                OnEntranceCountChanging(value);
                ReportPropertyChanging("EntranceCount");
                _EntranceCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntranceCount");
                OnEntranceCountChanged();
            }
        }
        private global::System.Byte _EntranceCount;
        partial void OnEntranceCountChanging(global::System.Byte value);
        partial void OnEntranceCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FiasID
        {
            get
            {
                return _FiasID;
            }
            set
            {
                OnFiasIDChanging(value);
                ReportPropertyChanging("FiasID");
                _FiasID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FiasID");
                OnFiasIDChanged();
            }
        }
        private global::System.String _FiasID;
        partial void OnFiasIDChanging(global::System.String value);
        partial void OnFiasIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NonResidentialPlaceArea
        {
            get
            {
                return _NonResidentialPlaceArea;
            }
            set
            {
                OnNonResidentialPlaceAreaChanging(value);
                ReportPropertyChanging("NonResidentialPlaceArea");
                _NonResidentialPlaceArea = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NonResidentialPlaceArea");
                OnNonResidentialPlaceAreaChanged();
            }
        }
        private global::System.Decimal _NonResidentialPlaceArea;
        partial void OnNonResidentialPlaceAreaChanging(global::System.Decimal value);
        partial void OnNonResidentialPlaceAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BankDetailID
        {
            get
            {
                return _BankDetailID;
            }
            set
            {
                OnBankDetailIDChanging(value);
                ReportPropertyChanging("BankDetailID");
                _BankDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankDetailID");
                OnBankDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BankDetailID;
        partial void OnBankDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnBankDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CounterValueCollectDistrictID
        {
            get
            {
                return _CounterValueCollectDistrictID;
            }
            set
            {
                OnCounterValueCollectDistrictIDChanging(value);
                ReportPropertyChanging("CounterValueCollectDistrictID");
                _CounterValueCollectDistrictID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterValueCollectDistrictID");
                OnCounterValueCollectDistrictIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CounterValueCollectDistrictID;
        partial void OnCounterValueCollectDistrictIDChanging(Nullable<global::System.Int32> value);
        partial void OnCounterValueCollectDistrictIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Buildings_Streets", "Streets")]
        public Streets Streets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Streets>("AlphaDataBaseModel.FK_Buildings_Streets", "Streets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Streets>("AlphaDataBaseModel.FK_Buildings_Streets", "Streets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Streets> StreetsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Streets>("AlphaDataBaseModel.FK_Buildings_Streets", "Streets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Streets>("AlphaDataBaseModel.FK_Buildings_Streets", "Streets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CommonCounters_Buildings", "CommonCounters")]
        public EntityCollection<CommonCounters> CommonCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommonCounters>("AlphaDataBaseModel.FK_CommonCounters_Buildings", "CommonCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommonCounters>("AlphaDataBaseModel.FK_CommonCounters_Buildings", "CommonCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Customers")]
        public EntityCollection<Customers> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customers>("AlphaDataBaseModel.FK_Customers_Buildings", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customers>("AlphaDataBaseModel.FK_Customers_Buildings", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PublicPlaces_Buildings", "PublicPlaces")]
        public EntityCollection<PublicPlaces> PublicPlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublicPlaces>("AlphaDataBaseModel.FK_PublicPlaces_Buildings", "PublicPlaces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublicPlaces>("AlphaDataBaseModel.FK_PublicPlaces_Buildings", "PublicPlaces", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Buildings_BankDetails", "BankDetails")]
        public BankDetails BankDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankDetails>("AlphaDataBaseModel.FK_Buildings_BankDetails", "BankDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankDetails>("AlphaDataBaseModel.FK_Buildings_BankDetails", "BankDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BankDetails> BankDetailsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankDetails>("AlphaDataBaseModel.FK_Buildings_BankDetails", "BankDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BankDetails>("AlphaDataBaseModel.FK_Buildings_BankDetails", "BankDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PublicPlaceServiceVolumes_Buildings", "PublicPlaceServiceVolumes")]
        public EntityCollection<PublicPlaceServiceVolumes> PublicPlaceServiceVolumes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublicPlaceServiceVolumes>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Buildings", "PublicPlaceServiceVolumes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublicPlaceServiceVolumes>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Buildings", "PublicPlaceServiceVolumes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Buildings_CounterValueCollectDistricts", "CounterValueCollectDistricts")]
        public CounterValueCollectDistricts CounterValueCollectDistricts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CounterValueCollectDistricts>("AlphaDataBaseModel.FK_Buildings_CounterValueCollectDistricts", "CounterValueCollectDistricts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CounterValueCollectDistricts>("AlphaDataBaseModel.FK_Buildings_CounterValueCollectDistricts", "CounterValueCollectDistricts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CounterValueCollectDistricts> CounterValueCollectDistrictsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CounterValueCollectDistricts>("AlphaDataBaseModel.FK_Buildings_CounterValueCollectDistricts", "CounterValueCollectDistricts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CounterValueCollectDistricts>("AlphaDataBaseModel.FK_Buildings_CounterValueCollectDistricts", "CounterValueCollectDistricts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ElectricitySharedCounterVolumes_Buildings", "ElectricitySharedCounterVolumes")]
        public EntityCollection<ElectricitySharedCounterVolumes> ElectricitySharedCounterVolumes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElectricitySharedCounterVolumes>("AlphaDataBaseModel.FK_ElectricitySharedCounterVolumes_Buildings", "ElectricitySharedCounterVolumes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElectricitySharedCounterVolumes>("AlphaDataBaseModel.FK_ElectricitySharedCounterVolumes_Buildings", "ElectricitySharedCounterVolumes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="ChargeCorrectionOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChargeCorrectionOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChargeCorrectionOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ChargeCorrectionOperPoses CreateChargeCorrectionOperPoses(global::System.Int32 id, global::System.Decimal value)
        {
            ChargeCorrectionOperPoses chargeCorrectionOperPoses = new ChargeCorrectionOperPoses();
            chargeCorrectionOperPoses.ID = id;
            chargeCorrectionOperPoses.Value = value;
            return chargeCorrectionOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOpers")]
        public ChargeCorrectionOpers ChargeCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeCorrectionOpers> ChargeCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_Contractors", "Contractors")]
        public Contractors Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Contractors", "Contractors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Contractors", "Contractors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractors> ContractorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Contractors", "Contractors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractors>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Contractors", "Contractors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="ChargeCorrectionOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChargeCorrectionOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChargeCorrectionOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ChargeCorrectionOpers CreateChargeCorrectionOpers(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.DateTime period, global::System.Decimal value)
        {
            ChargeCorrectionOpers chargeCorrectionOpers = new ChargeCorrectionOpers();
            chargeCorrectionOpers.ID = id;
            chargeCorrectionOpers.CreationDateTime = creationDateTime;
            chargeCorrectionOpers.Period = period;
            chargeCorrectionOpers.Value = value;
            return chargeCorrectionOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "BenefitCorrectionOpers_fk", "BenefitCorrectionOpers")]
        public EntityCollection<BenefitCorrectionOpers> BenefitCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitCorrectionOpers>("AlphaDataBaseModel.BenefitCorrectionOpers_fk", "BenefitCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitCorrectionOpers>("AlphaDataBaseModel.BenefitCorrectionOpers_fk", "BenefitCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOperPoses")]
        public EntityCollection<ChargeCorrectionOperPoses> ChargeCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeCorrectionOperPoses>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeCorrectionOperPoses>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_ChargeOpers", "ChargeCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "ChargeOpers_fk", "ChargeOpers")]
        public EntityCollection<ChargeOpers> ChargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOpers>("AlphaDataBaseModel.ChargeOpers_fk", "ChargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOpers>("AlphaDataBaseModel.ChargeOpers_fk", "ChargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOpers_RechargeOpers", "RechargeOpers")]
        public RechargeOpers ChildRechargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOpers_RechargeOpers", "RechargeOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOpers_RechargeOpers", "RechargeOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RechargeOpers> ChildRechargeOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOpers_RechargeOpers", "RechargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOpers_RechargeOpers", "RechargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOpers_ChargeCorrectionOpers", "RechargeOpers")]
        public EntityCollection<RechargeOpers> ParentRechargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeCorrectionOpers", "RechargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeCorrectionOpers", "RechargeOpers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="ChargeOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChargeOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChargeOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ChargeOperPoses CreateChargeOperPoses(global::System.Int32 id, global::System.Decimal value)
        {
            ChargeOperPoses chargeOperPoses = new ChargeOperPoses();
            chargeOperPoses.ID = id;
            chargeOperPoses.Value = value;
            return chargeOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_ChargeOpers", "ChargeOpers")]
        public ChargeOpers ChargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_ChargeOperPoses_ChargeOpers", "ChargeOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_ChargeOperPoses_ChargeOpers", "ChargeOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeOpers> ChargeOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_ChargeOperPoses_ChargeOpers", "ChargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_ChargeOperPoses_ChargeOpers", "ChargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_Contractors", "Contractors")]
        public Contractors Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_ChargeOperPoses_Contractors", "Contractors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_ChargeOperPoses_Contractors", "Contractors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractors> ContractorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_ChargeOperPoses_Contractors", "Contractors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractors>("AlphaDataBaseModel.FK_ChargeOperPoses_Contractors", "Contractors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_ChargeOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_ChargeOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_ChargeOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_ChargeOperPoses_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="ChargeOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChargeOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChargeOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ChargeOpers CreateChargeOpers(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.Decimal value)
        {
            ChargeOpers chargeOpers = new ChargeOpers();
            chargeOpers.ID = id;
            chargeOpers.CreationDateTime = creationDateTime;
            chargeOpers.Value = value;
            return chargeOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitOpers_ChargeOpers", "BenefitOpers")]
        public EntityCollection<BenefitOpers> BenefitOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitOpers>("AlphaDataBaseModel.FK_BenefitOpers_ChargeOpers", "BenefitOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitOpers>("AlphaDataBaseModel.FK_BenefitOpers_ChargeOpers", "BenefitOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "ChargeOpers_fk", "ChargeCorrectionOpers")]
        public ChargeCorrectionOpers ChargeCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.ChargeOpers_fk", "ChargeCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.ChargeOpers_fk", "ChargeCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeCorrectionOpers> ChargeCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.ChargeOpers_fk", "ChargeCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.ChargeOpers_fk", "ChargeCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_ChargeOpers", "ChargeOperPoses")]
        public EntityCollection<ChargeOperPoses> ChargeOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOperPoses>("AlphaDataBaseModel.FK_ChargeOperPoses_ChargeOpers", "ChargeOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOperPoses>("AlphaDataBaseModel.FK_ChargeOperPoses_ChargeOpers", "ChargeOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "ChargeOpers_fk2", "RegularBillDocs")]
        public RegularBillDocs RegularBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.ChargeOpers_fk2", "RegularBillDocs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.ChargeOpers_fk2", "RegularBillDocs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegularBillDocs> RegularBillDocsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.ChargeOpers_fk2", "RegularBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegularBillDocs>("AlphaDataBaseModel.ChargeOpers_fk2", "RegularBillDocs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOpers_ChargeSets", "ChargeSets")]
        public ChargeSets ChargeSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeSets>("AlphaDataBaseModel.FK_ChargeOpers_ChargeSets", "ChargeSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeSets>("AlphaDataBaseModel.FK_ChargeOpers_ChargeSets", "ChargeSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeSets> ChargeSetsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeSets>("AlphaDataBaseModel.FK_ChargeOpers_ChargeSets", "ChargeSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeSets>("AlphaDataBaseModel.FK_ChargeOpers_ChargeSets", "ChargeSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOpers_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_ChargeOpers_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_ChargeOpers_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_ChargeOpers_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_ChargeOpers_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOpers_ChargeOpers", "OverpaymentCorrectionOpers")]
        public EntityCollection<OverpaymentCorrectionOpers> OverpaymentCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOpers_ChargeOpers", "OverpaymentCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOpers_ChargeOpers", "OverpaymentCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOpers_ChargeOpers", "RechargeOpers")]
        public EntityCollection<RechargeOpers> RechargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeOpers", "RechargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeOpers", "RechargeOpers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="ChargeSets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChargeSets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChargeSets object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="valueSum">Initial value of the ValueSum property.</param>
        public static ChargeSets CreateChargeSets(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.DateTime period, global::System.Int32 number, global::System.Int32 quantity, global::System.Decimal valueSum)
        {
            ChargeSets chargeSets = new ChargeSets();
            chargeSets.ID = id;
            chargeSets.CreationDateTime = creationDateTime;
            chargeSets.Period = period;
            chargeSets.Number = number;
            chargeSets.Quantity = quantity;
            chargeSets.ValueSum = valueSum;
            return chargeSets;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ValueSum
        {
            get
            {
                return _ValueSum;
            }
            set
            {
                OnValueSumChanging(value);
                ReportPropertyChanging("ValueSum");
                _ValueSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueSum");
                OnValueSumChanged();
            }
        }
        private global::System.Decimal _ValueSum;
        partial void OnValueSumChanging(global::System.Decimal value);
        partial void OnValueSumChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOpers_ChargeSets", "ChargeOpers")]
        public EntityCollection<ChargeOpers> ChargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOpers>("AlphaDataBaseModel.FK_ChargeOpers_ChargeSets", "ChargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOpers>("AlphaDataBaseModel.FK_ChargeOpers_ChargeSets", "ChargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeSets_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_ChargeSets_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_ChargeSets_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_ChargeSets_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_ChargeSets_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CommonCounterCoefficients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommonCounterCoefficients : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommonCounterCoefficients object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="coefficient">Initial value of the Coefficient property.</param>
        public static CommonCounterCoefficients CreateCommonCounterCoefficients(global::System.Int32 id, global::System.DateTime period, global::System.Decimal coefficient)
        {
            CommonCounterCoefficients commonCounterCoefficients = new CommonCounterCoefficients();
            commonCounterCoefficients.ID = id;
            commonCounterCoefficients.Period = period;
            commonCounterCoefficients.Coefficient = coefficient;
            return commonCounterCoefficients;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Coefficient
        {
            get
            {
                return _Coefficient;
            }
            set
            {
                OnCoefficientChanging(value);
                ReportPropertyChanging("Coefficient");
                _Coefficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coefficient");
                OnCoefficientChanged();
            }
        }
        private global::System.Decimal _Coefficient;
        partial void OnCoefficientChanging(global::System.Decimal value);
        partial void OnCoefficientChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CommonCounterCoefficients_CommonCounters", "CommonCounters")]
        public CommonCounters CommonCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonCounters>("AlphaDataBaseModel.FK_CommonCounterCoefficients_CommonCounters", "CommonCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonCounters>("AlphaDataBaseModel.FK_CommonCounterCoefficients_CommonCounters", "CommonCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommonCounters> CommonCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonCounters>("AlphaDataBaseModel.FK_CommonCounterCoefficients_CommonCounters", "CommonCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommonCounters>("AlphaDataBaseModel.FK_CommonCounterCoefficients_CommonCounters", "CommonCounters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CommonCounters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommonCounters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommonCounters object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static CommonCounters CreateCommonCounters(global::System.Int32 id, global::System.String number)
        {
            CommonCounters commonCounters = new CommonCounters();
            commonCounters.ID = id;
            commonCounters.Number = number;
            return commonCounters;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CommonCounters_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_CommonCounters_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_CommonCounters_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_CommonCounters_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_CommonCounters_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CommonCounters_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_CommonCounters_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_CommonCounters_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_CommonCounters_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_CommonCounters_Services", "Services", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CommonCounterValues_CommonCounters", "CommonCounterValues")]
        public EntityCollection<CommonCounterValues> CommonCounterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommonCounterValues>("AlphaDataBaseModel.FK_CommonCounterValues_CommonCounters", "CommonCounterValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommonCounterValues>("AlphaDataBaseModel.FK_CommonCounterValues_CommonCounters", "CommonCounterValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CommonCounterCoefficients_CommonCounters", "CommonCounterCoefficients")]
        public EntityCollection<CommonCounterCoefficients> CommonCounterCoefficients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommonCounterCoefficients>("AlphaDataBaseModel.FK_CommonCounterCoefficients_CommonCounters", "CommonCounterCoefficients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommonCounterCoefficients>("AlphaDataBaseModel.FK_CommonCounterCoefficients_CommonCounters", "CommonCounterCoefficients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CommonCounterValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommonCounterValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommonCounterValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static CommonCounterValues CreateCommonCounterValues(global::System.Int32 id, global::System.DateTime period, global::System.Decimal value)
        {
            CommonCounterValues commonCounterValues = new CommonCounterValues();
            commonCounterValues.ID = id;
            commonCounterValues.Period = period;
            commonCounterValues.Value = value;
            return commonCounterValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CommonCounterValues_CommonCounters", "CommonCounters")]
        public CommonCounters CommonCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonCounters>("AlphaDataBaseModel.FK_CommonCounterValues_CommonCounters", "CommonCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonCounters>("AlphaDataBaseModel.FK_CommonCounterValues_CommonCounters", "CommonCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommonCounters> CommonCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonCounters>("AlphaDataBaseModel.FK_CommonCounterValues_CommonCounters", "CommonCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommonCounters>("AlphaDataBaseModel.FK_CommonCounterValues_CommonCounters", "CommonCounters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Contractors")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contractors : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contractors object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Contractors CreateContractors(global::System.Int32 id, global::System.String name, global::System.String code)
        {
            Contractors contractors = new Contractors();
            contractors.ID = id;
            contractors.Name = name;
            contractors.Code = code;
            return contractors;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactInfo
        {
            get
            {
                return _ContactInfo;
            }
            set
            {
                OnContactInfoChanging(value);
                ReportPropertyChanging("ContactInfo");
                _ContactInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactInfo");
                OnContactInfoChanged();
            }
        }
        private global::System.String _ContactInfo;
        partial void OnContactInfoChanging(global::System.String value);
        partial void OnContactInfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_Contractors", "ChargeCorrectionOperPoses")]
        public EntityCollection<ChargeCorrectionOperPoses> ChargeCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeCorrectionOperPoses>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Contractors", "ChargeCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeCorrectionOperPoses>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Contractors", "ChargeCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_Contractors", "ChargeOperPoses")]
        public EntityCollection<ChargeOperPoses> ChargeOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOperPoses>("AlphaDataBaseModel.FK_ChargeOperPoses_Contractors", "ChargeOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOperPoses>("AlphaDataBaseModel.FK_ChargeOperPoses_Contractors", "ChargeOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerPoses_Contractors", "CustomerPoses")]
        public EntityCollection<CustomerPoses> CustomerPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerPoses>("AlphaDataBaseModel.FK_CustomerPoses_Contractors", "CustomerPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerPoses>("AlphaDataBaseModel.FK_CustomerPoses_Contractors", "CustomerPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_Contractors", "RechargeOperPoses")]
        public EntityCollection<RechargeOperPoses> RechargeOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargeOperPoses>("AlphaDataBaseModel.FK_RechargeOperPoses_Contractors", "RechargeOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargeOperPoses>("AlphaDataBaseModel.FK_RechargeOperPoses_Contractors", "RechargeOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_Contractors", "BenefitCorrectionOperPoses")]
        public EntityCollection<BenefitCorrectionOperPoses> BenefitCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitCorrectionOperPoses>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Contractors", "BenefitCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitCorrectionOperPoses>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Contractors", "BenefitCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_Contractors", "BenefitOperPoses")]
        public EntityCollection<BenefitOperPoses> BenefitOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitOperPoses>("AlphaDataBaseModel.FK_BenefitOperPoses_Contractors", "BenefitOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitOperPoses>("AlphaDataBaseModel.FK_BenefitOperPoses_Contractors", "BenefitOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_Contractors", "RebenefitOperPoses")]
        public EntityCollection<RebenefitOperPoses> RebenefitOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RebenefitOperPoses>("AlphaDataBaseModel.FK_RebenefitOperPoses_Contractors", "RebenefitOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RebenefitOperPoses>("AlphaDataBaseModel.FK_RebenefitOperPoses_Contractors", "RebenefitOperPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CounterValueCollectDistricts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CounterValueCollectDistricts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CounterValueCollectDistricts object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CounterValueCollectDistricts CreateCounterValueCollectDistricts(global::System.Int32 id, global::System.String name)
        {
            CounterValueCollectDistricts counterValueCollectDistricts = new CounterValueCollectDistricts();
            counterValueCollectDistricts.ID = id;
            counterValueCollectDistricts.Name = name;
            return counterValueCollectDistricts;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Buildings_CounterValueCollectDistricts", "Buildings")]
        public EntityCollection<Buildings> Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Buildings>("AlphaDataBaseModel.FK_Buildings_CounterValueCollectDistricts", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Buildings>("AlphaDataBaseModel.FK_Buildings_CounterValueCollectDistricts", "Buildings", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="CustomerPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="since">Initial value of the Since property.</param>
        /// <param name="till">Initial value of the Till property.</param>
        public static CustomerPoses CreateCustomerPoses(global::System.Int32 id, global::System.Decimal rate, global::System.DateTime since, global::System.DateTime till)
        {
            CustomerPoses customerPoses = new CustomerPoses();
            customerPoses.ID = id;
            customerPoses.Rate = rate;
            customerPoses.Since = since;
            customerPoses.Till = till;
            return customerPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Since
        {
            get
            {
                return _Since;
            }
            set
            {
                OnSinceChanging(value);
                ReportPropertyChanging("Since");
                _Since = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Since");
                OnSinceChanged();
            }
        }
        private global::System.DateTime _Since;
        partial void OnSinceChanging(global::System.DateTime value);
        partial void OnSinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Till
        {
            get
            {
                return _Till;
            }
            set
            {
                OnTillChanging(value);
                ReportPropertyChanging("Till");
                _Till = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Till");
                OnTillChanged();
            }
        }
        private global::System.DateTime _Till;
        partial void OnTillChanging(global::System.DateTime value);
        partial void OnTillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrivateCounterID
        {
            get
            {
                return _PrivateCounterID;
            }
            set
            {
                OnPrivateCounterIDChanging(value);
                ReportPropertyChanging("PrivateCounterID");
                _PrivateCounterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivateCounterID");
                OnPrivateCounterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrivateCounterID;
        partial void OnPrivateCounterIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrivateCounterIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerPoses_Contractors", "Contractors")]
        public Contractors Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_CustomerPoses_Contractors", "Contractors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_CustomerPoses_Contractors", "Contractors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractors> ContractorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_CustomerPoses_Contractors", "Contractors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractors>("AlphaDataBaseModel.FK_CustomerPoses_Contractors", "Contractors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerPoses_CustomerPoses", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_CustomerPoses_CustomerPoses", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_CustomerPoses_CustomerPoses", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_CustomerPoses_CustomerPoses", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_CustomerPoses_CustomerPoses", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_CustomerPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_CustomerPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_CustomerPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_CustomerPoses_Services", "Services", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerPoses_PrivateCounters", "PrivateCounters")]
        public PrivateCounters PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_CustomerPoses_PrivateCounters", "PrivateCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_CustomerPoses_PrivateCounters", "PrivateCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateCounters> PrivateCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_CustomerPoses_PrivateCounters", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_CustomerPoses_PrivateCounters", "PrivateCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargePercentCorrections_CustomerPoses", "RechargePercentCorrections")]
        public EntityCollection<RechargePercentCorrections> RechargePercentCorrections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargePercentCorrections>("AlphaDataBaseModel.FK_RechargePercentCorrections_CustomerPoses", "RechargePercentCorrections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargePercentCorrections>("AlphaDataBaseModel.FK_RechargePercentCorrections_CustomerPoses", "RechargePercentCorrections", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Customers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="ownerType">Initial value of the OwnerType property.</param>
        /// <param name="isPrivate">Initial value of the IsPrivate property.</param>
        /// <param name="roomsCount">Initial value of the RoomsCount property.</param>
        /// <param name="apartment">Initial value of the Apartment property.</param>
        /// <param name="square">Initial value of the Square property.</param>
        /// <param name="physicalPersonFullName">Initial value of the PhysicalPersonFullName property.</param>
        /// <param name="physicalPersonShortName">Initial value of the PhysicalPersonShortName property.</param>
        /// <param name="juridicalPersonFullName">Initial value of the JuridicalPersonFullName property.</param>
        /// <param name="floor">Initial value of the Floor property.</param>
        /// <param name="liftPresence">Initial value of the LiftPresence property.</param>
        /// <param name="rubbishChutePresence">Initial value of the RubbishChutePresence property.</param>
        /// <param name="billSendingSubscription">Initial value of the BillSendingSubscription property.</param>
        /// <param name="debtsRepayment">Initial value of the DebtsRepayment property.</param>
        /// <param name="entrance">Initial value of the Entrance property.</param>
        public static Customers CreateCustomers(global::System.Int32 id, global::System.String account, global::System.Int32 ownerType, global::System.Boolean isPrivate, global::System.Int32 roomsCount, global::System.String apartment, global::System.Decimal square, global::System.String physicalPersonFullName, global::System.String physicalPersonShortName, global::System.String juridicalPersonFullName, global::System.Int16 floor, global::System.Boolean liftPresence, global::System.Boolean rubbishChutePresence, global::System.Boolean billSendingSubscription, global::System.Boolean debtsRepayment, global::System.Byte entrance)
        {
            Customers customers = new Customers();
            customers.ID = id;
            customers.Account = account;
            customers.OwnerType = ownerType;
            customers.IsPrivate = isPrivate;
            customers.RoomsCount = roomsCount;
            customers.Apartment = apartment;
            customers.Square = square;
            customers.PhysicalPersonFullName = physicalPersonFullName;
            customers.PhysicalPersonShortName = physicalPersonShortName;
            customers.JuridicalPersonFullName = juridicalPersonFullName;
            customers.Floor = floor;
            customers.LiftPresence = liftPresence;
            customers.RubbishChutePresence = rubbishChutePresence;
            customers.BillSendingSubscription = billSendingSubscription;
            customers.DebtsRepayment = debtsRepayment;
            customers.Entrance = entrance;
            return customers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerType
        {
            get
            {
                return _OwnerType;
            }
            set
            {
                OnOwnerTypeChanging(value);
                ReportPropertyChanging("OwnerType");
                _OwnerType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerType");
                OnOwnerTypeChanged();
            }
        }
        private global::System.Int32 _OwnerType;
        partial void OnOwnerTypeChanging(global::System.Int32 value);
        partial void OnOwnerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrivate
        {
            get
            {
                return _IsPrivate;
            }
            set
            {
                OnIsPrivateChanging(value);
                ReportPropertyChanging("IsPrivate");
                _IsPrivate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrivate");
                OnIsPrivateChanged();
            }
        }
        private global::System.Boolean _IsPrivate;
        partial void OnIsPrivateChanging(global::System.Boolean value);
        partial void OnIsPrivateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomsCount
        {
            get
            {
                return _RoomsCount;
            }
            set
            {
                OnRoomsCountChanging(value);
                ReportPropertyChanging("RoomsCount");
                _RoomsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomsCount");
                OnRoomsCountChanged();
            }
        }
        private global::System.Int32 _RoomsCount;
        partial void OnRoomsCountChanging(global::System.Int32 value);
        partial void OnRoomsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Square
        {
            get
            {
                return _Square;
            }
            set
            {
                OnSquareChanging(value);
                ReportPropertyChanging("Square");
                _Square = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Square");
                OnSquareChanged();
            }
        }
        private global::System.Decimal _Square;
        partial void OnSquareChanging(global::System.Decimal value);
        partial void OnSquareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicalPersonFullName
        {
            get
            {
                return _PhysicalPersonFullName;
            }
            set
            {
                OnPhysicalPersonFullNameChanging(value);
                ReportPropertyChanging("PhysicalPersonFullName");
                _PhysicalPersonFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhysicalPersonFullName");
                OnPhysicalPersonFullNameChanged();
            }
        }
        private global::System.String _PhysicalPersonFullName;
        partial void OnPhysicalPersonFullNameChanging(global::System.String value);
        partial void OnPhysicalPersonFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicalPersonShortName
        {
            get
            {
                return _PhysicalPersonShortName;
            }
            set
            {
                OnPhysicalPersonShortNameChanging(value);
                ReportPropertyChanging("PhysicalPersonShortName");
                _PhysicalPersonShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhysicalPersonShortName");
                OnPhysicalPersonShortNameChanged();
            }
        }
        private global::System.String _PhysicalPersonShortName;
        partial void OnPhysicalPersonShortNameChanging(global::System.String value);
        partial void OnPhysicalPersonShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JuridicalPersonFullName
        {
            get
            {
                return _JuridicalPersonFullName;
            }
            set
            {
                OnJuridicalPersonFullNameChanging(value);
                ReportPropertyChanging("JuridicalPersonFullName");
                _JuridicalPersonFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JuridicalPersonFullName");
                OnJuridicalPersonFullNameChanged();
            }
        }
        private global::System.String _JuridicalPersonFullName;
        partial void OnJuridicalPersonFullNameChanging(global::System.String value);
        partial void OnJuridicalPersonFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Floor
        {
            get
            {
                return _Floor;
            }
            set
            {
                OnFloorChanging(value);
                ReportPropertyChanging("Floor");
                _Floor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Floor");
                OnFloorChanged();
            }
        }
        private global::System.Int16 _Floor;
        partial void OnFloorChanging(global::System.Int16 value);
        partial void OnFloorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LiftPresence
        {
            get
            {
                return _LiftPresence;
            }
            set
            {
                OnLiftPresenceChanging(value);
                ReportPropertyChanging("LiftPresence");
                _LiftPresence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LiftPresence");
                OnLiftPresenceChanged();
            }
        }
        private global::System.Boolean _LiftPresence;
        partial void OnLiftPresenceChanging(global::System.Boolean value);
        partial void OnLiftPresenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RubbishChutePresence
        {
            get
            {
                return _RubbishChutePresence;
            }
            set
            {
                OnRubbishChutePresenceChanging(value);
                ReportPropertyChanging("RubbishChutePresence");
                _RubbishChutePresence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RubbishChutePresence");
                OnRubbishChutePresenceChanged();
            }
        }
        private global::System.Boolean _RubbishChutePresence;
        partial void OnRubbishChutePresenceChanging(global::System.Boolean value);
        partial void OnRubbishChutePresenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean BillSendingSubscription
        {
            get
            {
                return _BillSendingSubscription;
            }
            set
            {
                OnBillSendingSubscriptionChanging(value);
                ReportPropertyChanging("BillSendingSubscription");
                _BillSendingSubscription = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillSendingSubscription");
                OnBillSendingSubscriptionChanged();
            }
        }
        private global::System.Boolean _BillSendingSubscription;
        partial void OnBillSendingSubscriptionChanging(global::System.Boolean value);
        partial void OnBillSendingSubscriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DebtsRepayment
        {
            get
            {
                return _DebtsRepayment;
            }
            set
            {
                OnDebtsRepaymentChanging(value);
                ReportPropertyChanging("DebtsRepayment");
                _DebtsRepayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebtsRepayment");
                OnDebtsRepaymentChanged();
            }
        }
        private global::System.Boolean _DebtsRepayment;
        partial void OnDebtsRepaymentChanging(global::System.Boolean value);
        partial void OnDebtsRepaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Entrance
        {
            get
            {
                return _Entrance;
            }
            set
            {
                OnEntranceChanging(value);
                ReportPropertyChanging("Entrance");
                _Entrance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrance");
                OnEntranceChanged();
            }
        }
        private global::System.Byte _Entrance;
        partial void OnEntranceChanging(global::System.Byte value);
        partial void OnEntranceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GisZhkhID
        {
            get
            {
                return _GisZhkhID;
            }
            set
            {
                OnGisZhkhIDChanging(value);
                ReportPropertyChanging("GisZhkhID");
                _GisZhkhID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GisZhkhID");
                OnGisZhkhIDChanged();
            }
        }
        private global::System.String _GisZhkhID;
        partial void OnGisZhkhIDChanging(global::System.String value);
        partial void OnGisZhkhIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Customers_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_Customers_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOpers_Customers", "ChargeOpers")]
        public EntityCollection<ChargeOpers> ChargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOpers>("AlphaDataBaseModel.FK_ChargeOpers_Customers", "ChargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOpers>("AlphaDataBaseModel.FK_ChargeOpers_Customers", "ChargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerPoses_CustomerPoses", "CustomerPoses")]
        public EntityCollection<CustomerPoses> CustomerPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerPoses>("AlphaDataBaseModel.FK_CustomerPoses_CustomerPoses", "CustomerPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerPoses>("AlphaDataBaseModel.FK_CustomerPoses_CustomerPoses", "CustomerPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentOpers_Customers", "OverpaymentOpers")]
        public EntityCollection<OverpaymentOpers> OverpaymentOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverpaymentOpers>("AlphaDataBaseModel.FK_OverpaymentOpers_Customers", "OverpaymentOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverpaymentOpers>("AlphaDataBaseModel.FK_OverpaymentOpers_Customers", "OverpaymentOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOpers_Customers", "PaymentOpers")]
        public EntityCollection<PaymentOpers> PaymentOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOpers_Customers", "PaymentOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOpers_Customers", "PaymentOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOpers_Customers", "RechargeOpers")]
        public EntityCollection<RechargeOpers> RechargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_Customers", "RechargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_Customers", "RechargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocs_fk2", "RegularBillDocs")]
        public EntityCollection<RegularBillDocs> RegularBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocs_fk2", "RegularBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocs_fk2", "RegularBillDocs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "TotalBillDocs_fk2", "TotalBillDocs")]
        public EntityCollection<TotalBillDocs> TotalBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TotalBillDocs>("AlphaDataBaseModel.TotalBillDocs_fk2", "TotalBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TotalBillDocs>("AlphaDataBaseModel.TotalBillDocs_fk2", "TotalBillDocs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Residents_Customers", "Residents")]
        public EntityCollection<Residents> Residents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Residents>("AlphaDataBaseModel.FK_Residents_Customers", "Residents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Residents>("AlphaDataBaseModel.FK_Residents_Customers", "Residents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Customers_Users", "Users")]
        public Users User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_Customers_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_Customers_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_Customers_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_Customers_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DebtBillDocs_Customers", "DebtBillDocs")]
        public EntityCollection<DebtBillDocs> DebtBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DebtBillDocs>("AlphaDataBaseModel.FK_DebtBillDocs_Customers", "DebtBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DebtBillDocs>("AlphaDataBaseModel.FK_DebtBillDocs_Customers", "DebtBillDocs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "PrivateCounters")]
        public EntityCollection<PrivateCounters> PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "PrivateCounters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="DebtBillDocs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DebtBillDocs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DebtBillDocs object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        public static DebtBillDocs CreateDebtBillDocs(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.String account, global::System.String address, global::System.String owner, global::System.Decimal value, global::System.DateTime period)
        {
            DebtBillDocs debtBillDocs = new DebtBillDocs();
            debtBillDocs.ID = id;
            debtBillDocs.CreationDateTime = creationDateTime;
            debtBillDocs.Account = account;
            debtBillDocs.Address = address;
            debtBillDocs.Owner = owner;
            debtBillDocs.Value = value;
            debtBillDocs.Period = period;
            return debtBillDocs;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "DebtBillDocs_fk", "BillSets")]
        public BillSets BillSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.DebtBillDocs_fk", "BillSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.DebtBillDocs_fk", "BillSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BillSets> BillSetsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.DebtBillDocs_fk", "BillSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BillSets>("AlphaDataBaseModel.DebtBillDocs_fk", "BillSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_DebtBillDocs_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_DebtBillDocs_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_DebtBillDocs_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_DebtBillDocs_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_DebtBillDocs_Customers", "Customers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="ElectricitySharedCounterVolumes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ElectricitySharedCounterVolumes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ElectricitySharedCounterVolumes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="buildingID">Initial value of the BuildingID property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        public static ElectricitySharedCounterVolumes CreateElectricitySharedCounterVolumes(global::System.Int32 id, global::System.Int32 buildingID, global::System.Decimal volume, global::System.DateTime period)
        {
            ElectricitySharedCounterVolumes electricitySharedCounterVolumes = new ElectricitySharedCounterVolumes();
            electricitySharedCounterVolumes.ID = id;
            electricitySharedCounterVolumes.BuildingID = buildingID;
            electricitySharedCounterVolumes.Volume = volume;
            electricitySharedCounterVolumes.Period = period;
            return electricitySharedCounterVolumes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildingID
        {
            get
            {
                return _BuildingID;
            }
            set
            {
                OnBuildingIDChanging(value);
                ReportPropertyChanging("BuildingID");
                _BuildingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingID");
                OnBuildingIDChanged();
            }
        }
        private global::System.Int32 _BuildingID;
        partial void OnBuildingIDChanging(global::System.Int32 value);
        partial void OnBuildingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Decimal _Volume;
        partial void OnVolumeChanging(global::System.Decimal value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ElectricitySharedCounterVolumes_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_ElectricitySharedCounterVolumes_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_ElectricitySharedCounterVolumes_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_ElectricitySharedCounterVolumes_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_ElectricitySharedCounterVolumes_Buildings", "Buildings", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Intermediaries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Intermediaries : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Intermediaries object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        public static Intermediaries CreateIntermediaries(global::System.Int32 id, global::System.String name, global::System.String code, global::System.Decimal rate)
        {
            Intermediaries intermediaries = new Intermediaries();
            intermediaries.ID = id;
            intermediaries.Name = name;
            intermediaries.Code = code;
            intermediaries.Rate = rate;
            return intermediaries;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentSets_Intermediaries", "PaymentSets")]
        public EntityCollection<PaymentSets> PaymentSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentSets>("AlphaDataBaseModel.FK_PaymentSets_Intermediaries", "PaymentSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentSets>("AlphaDataBaseModel.FK_PaymentSets_Intermediaries", "PaymentSets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="OverpaymentCorrectionOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OverpaymentCorrectionOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OverpaymentCorrectionOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static OverpaymentCorrectionOperPoses CreateOverpaymentCorrectionOperPoses(global::System.Int32 id, global::System.Decimal value)
        {
            OverpaymentCorrectionOperPoses overpaymentCorrectionOperPoses = new OverpaymentCorrectionOperPoses();
            overpaymentCorrectionOperPoses.ID = id;
            overpaymentCorrectionOperPoses.Value = value;
            return overpaymentCorrectionOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers")]
        public OverpaymentCorrectionOpers OverpaymentCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OverpaymentCorrectionOpers> OverpaymentCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="OverpaymentCorrectionOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OverpaymentCorrectionOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OverpaymentCorrectionOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        public static OverpaymentCorrectionOpers CreateOverpaymentCorrectionOpers(global::System.Int32 id, global::System.Decimal value, global::System.DateTime period)
        {
            OverpaymentCorrectionOpers overpaymentCorrectionOpers = new OverpaymentCorrectionOpers();
            overpaymentCorrectionOpers.ID = id;
            overpaymentCorrectionOpers.Value = value;
            overpaymentCorrectionOpers.Period = period;
            return overpaymentCorrectionOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOpers_ChargeOpers", "ChargeOpers")]
        public ChargeOpers ChargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOpers_ChargeOpers", "ChargeOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOpers_ChargeOpers", "ChargeOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeOpers> ChargeOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOpers_ChargeOpers", "ChargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_OverpaymentCorrectionOpers_ChargeOpers", "ChargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOperPoses")]
        public EntityCollection<OverpaymentCorrectionOperPoses> OverpaymentCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverpaymentCorrectionOperPoses>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverpaymentCorrectionOperPoses>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_OverpaymentCorrectionOpers", "OverpaymentCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentOpers")]
        public EntityCollection<OverpaymentOpers> OverpaymentOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverpaymentOpers>("AlphaDataBaseModel.FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverpaymentOpers>("AlphaDataBaseModel.FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentOpers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="OverpaymentOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OverpaymentOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OverpaymentOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static OverpaymentOperPoses CreateOverpaymentOperPoses(global::System.Int32 id, global::System.DateTime period, global::System.Decimal value)
        {
            OverpaymentOperPoses overpaymentOperPoses = new OverpaymentOperPoses();
            overpaymentOperPoses.ID = id;
            overpaymentOperPoses.Period = period;
            overpaymentOperPoses.Value = value;
            return overpaymentOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOpers")]
        public OverpaymentOpers OverpaymentOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentOpers>("AlphaDataBaseModel.FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentOpers>("AlphaDataBaseModel.FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OverpaymentOpers> OverpaymentOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentOpers>("AlphaDataBaseModel.FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OverpaymentOpers>("AlphaDataBaseModel.FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_OverpaymentOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_OverpaymentOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_OverpaymentOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_OverpaymentOperPoses_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="OverpaymentOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OverpaymentOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OverpaymentOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="paymentPeriod">Initial value of the PaymentPeriod property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static OverpaymentOpers CreateOverpaymentOpers(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.DateTime paymentPeriod, global::System.Decimal value)
        {
            OverpaymentOpers overpaymentOpers = new OverpaymentOpers();
            overpaymentOpers.ID = id;
            overpaymentOpers.CreationDateTime = creationDateTime;
            overpaymentOpers.PaymentPeriod = paymentPeriod;
            overpaymentOpers.Value = value;
            return overpaymentOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentPeriod
        {
            get
            {
                return _PaymentPeriod;
            }
            set
            {
                OnPaymentPeriodChanging(value);
                ReportPropertyChanging("PaymentPeriod");
                _PaymentPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentPeriod");
                OnPaymentPeriodChanged();
            }
        }
        private global::System.DateTime _PaymentPeriod;
        partial void OnPaymentPeriodChanging(global::System.DateTime value);
        partial void OnPaymentPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentOpers_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_OverpaymentOpers_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_OverpaymentOpers_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_OverpaymentOpers_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_OverpaymentOpers_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers")]
        public OverpaymentCorrectionOpers OverpaymentCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OverpaymentCorrectionOpers> OverpaymentCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OverpaymentCorrectionOpers>("AlphaDataBaseModel.FK_OverpaymentOpers_OverpaymentCorrectionOpers", "OverpaymentCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOperPoses")]
        public EntityCollection<OverpaymentOperPoses> OverpaymentOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverpaymentOperPoses>("AlphaDataBaseModel.FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverpaymentOperPoses>("AlphaDataBaseModel.FK_OverpaymentOperPoses_OverpaymentOpers", "OverpaymentOperPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PaymentCorrectionOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentCorrectionOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentCorrectionOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static PaymentCorrectionOperPoses CreatePaymentCorrectionOperPoses(global::System.Int32 id, global::System.Decimal value)
        {
            PaymentCorrectionOperPoses paymentCorrectionOperPoses = new PaymentCorrectionOperPoses();
            paymentCorrectionOperPoses.ID = id;
            paymentCorrectionOperPoses.Value = value;
            return paymentCorrectionOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOpers")]
        public PaymentCorrectionOpers PaymentCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentCorrectionOpers> PaymentCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PaymentCorrectionOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentCorrectionOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentCorrectionOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static PaymentCorrectionOpers CreatePaymentCorrectionOpers(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.DateTime period, global::System.Decimal value)
        {
            PaymentCorrectionOpers paymentCorrectionOpers = new PaymentCorrectionOpers();
            paymentCorrectionOpers.ID = id;
            paymentCorrectionOpers.CreationDateTime = creationDateTime;
            paymentCorrectionOpers.Period = period;
            paymentCorrectionOpers.Value = value;
            return paymentCorrectionOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOperPoses")]
        public EntityCollection<PaymentCorrectionOperPoses> PaymentCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentCorrectionOperPoses>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentCorrectionOperPoses>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_PaymentCorrectionOpers", "PaymentCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOpers_PaymentOpers", "PaymentOpers")]
        public PaymentOpers PaymentOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOpers_PaymentOpers", "PaymentOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOpers_PaymentOpers", "PaymentOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentOpers> PaymentOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOpers_PaymentOpers", "PaymentOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOpers_PaymentOpers", "PaymentOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOpers_PaymentCorrectionOpers", "PaymentOpers")]
        public EntityCollection<PaymentOpers> PaymentOper
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOpers_PaymentCorrectionOpers", "PaymentOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOpers_PaymentCorrectionOpers", "PaymentOpers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PaymentOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static PaymentOperPoses CreatePaymentOperPoses(global::System.Int32 id, global::System.DateTime period, global::System.Decimal value)
        {
            PaymentOperPoses paymentOperPoses = new PaymentOperPoses();
            paymentOperPoses.ID = id;
            paymentOperPoses.Period = period;
            paymentOperPoses.Value = value;
            return paymentOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOperPoses_PaymentOpers", "PaymentOpers")]
        public PaymentOpers PaymentOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOperPoses_PaymentOpers", "PaymentOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOperPoses_PaymentOpers", "PaymentOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentOpers> PaymentOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOperPoses_PaymentOpers", "PaymentOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOperPoses_PaymentOpers", "PaymentOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PaymentOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PaymentOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PaymentOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_PaymentOperPoses_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PaymentOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="paymentPeriod">Initial value of the PaymentPeriod property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static PaymentOpers CreatePaymentOpers(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.DateTime paymentPeriod, global::System.Decimal value)
        {
            PaymentOpers paymentOpers = new PaymentOpers();
            paymentOpers.ID = id;
            paymentOpers.CreationDateTime = creationDateTime;
            paymentOpers.PaymentPeriod = paymentPeriod;
            paymentOpers.Value = value;
            return paymentOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentPeriod
        {
            get
            {
                return _PaymentPeriod;
            }
            set
            {
                OnPaymentPeriodChanging(value);
                ReportPropertyChanging("PaymentPeriod");
                _PaymentPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentPeriod");
                OnPaymentPeriodChanged();
            }
        }
        private global::System.DateTime _PaymentPeriod;
        partial void OnPaymentPeriodChanging(global::System.DateTime value);
        partial void OnPaymentPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOpers_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PaymentOpers_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PaymentOpers_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PaymentOpers_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_PaymentOpers_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOpers_PaymentOpers", "PaymentCorrectionOpers")]
        public EntityCollection<PaymentCorrectionOpers> PaymentCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOpers_PaymentOpers", "PaymentCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentCorrectionOpers_PaymentOpers", "PaymentCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOpers_PaymentCorrectionOpers", "PaymentCorrectionOpers")]
        public PaymentCorrectionOpers PaymentCorrectionOper
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentOpers_PaymentCorrectionOpers", "PaymentCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentOpers_PaymentCorrectionOpers", "PaymentCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentCorrectionOpers> PaymentCorrectionOperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentOpers_PaymentCorrectionOpers", "PaymentCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentCorrectionOpers>("AlphaDataBaseModel.FK_PaymentOpers_PaymentCorrectionOpers", "PaymentCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOperPoses_PaymentOpers", "PaymentOperPoses")]
        public EntityCollection<PaymentOperPoses> PaymentOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentOperPoses>("AlphaDataBaseModel.FK_PaymentOperPoses_PaymentOpers", "PaymentOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentOperPoses>("AlphaDataBaseModel.FK_PaymentOperPoses_PaymentOpers", "PaymentOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOpers_PaymentSets", "PaymentSets")]
        public PaymentSets PaymentSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentSets>("AlphaDataBaseModel.FK_PaymentOpers_PaymentSets", "PaymentSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentSets>("AlphaDataBaseModel.FK_PaymentOpers_PaymentSets", "PaymentSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentSets> PaymentSetsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentSets>("AlphaDataBaseModel.FK_PaymentOpers_PaymentSets", "PaymentSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentSets>("AlphaDataBaseModel.FK_PaymentOpers_PaymentSets", "PaymentSets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PaymentSets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentSets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentSets object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="isFile">Initial value of the IsFile property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="valueSum">Initial value of the ValueSum property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        public static PaymentSets CreatePaymentSets(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.Int32 number, global::System.Boolean isFile, global::System.Int16 quantity, global::System.Decimal valueSum, global::System.DateTime paymentDate)
        {
            PaymentSets paymentSets = new PaymentSets();
            paymentSets.ID = id;
            paymentSets.CreationDateTime = creationDateTime;
            paymentSets.Number = number;
            paymentSets.IsFile = isFile;
            paymentSets.Quantity = quantity;
            paymentSets.ValueSum = valueSum;
            paymentSets.PaymentDate = paymentDate;
            return paymentSets;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFile
        {
            get
            {
                return _IsFile;
            }
            set
            {
                OnIsFileChanging(value);
                ReportPropertyChanging("IsFile");
                _IsFile = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFile");
                OnIsFileChanged();
            }
        }
        private global::System.Boolean _IsFile;
        partial void OnIsFileChanging(global::System.Boolean value);
        partial void OnIsFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int16 _Quantity;
        partial void OnQuantityChanging(global::System.Int16 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ValueSum
        {
            get
            {
                return _ValueSum;
            }
            set
            {
                OnValueSumChanging(value);
                ReportPropertyChanging("ValueSum");
                _ValueSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueSum");
                OnValueSumChanged();
            }
        }
        private global::System.Decimal _ValueSum;
        partial void OnValueSumChanging(global::System.Decimal value);
        partial void OnValueSumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentSets_Intermediaries", "Intermediaries")]
        public Intermediaries Intermediaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Intermediaries>("AlphaDataBaseModel.FK_PaymentSets_Intermediaries", "Intermediaries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Intermediaries>("AlphaDataBaseModel.FK_PaymentSets_Intermediaries", "Intermediaries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Intermediaries> IntermediariesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Intermediaries>("AlphaDataBaseModel.FK_PaymentSets_Intermediaries", "Intermediaries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Intermediaries>("AlphaDataBaseModel.FK_PaymentSets_Intermediaries", "Intermediaries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOpers_PaymentSets", "PaymentOpers")]
        public EntityCollection<PaymentOpers> PaymentOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOpers_PaymentSets", "PaymentOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentOpers>("AlphaDataBaseModel.FK_PaymentOpers_PaymentSets", "PaymentOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentSets_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_PaymentSets_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_PaymentSets_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_PaymentSets_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_PaymentSets_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateCounters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateCounters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateCounters object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        public static PrivateCounters CreatePrivateCounters(global::System.Int32 id, global::System.String number, global::System.String model)
        {
            PrivateCounters privateCounters = new PrivateCounters();
            privateCounters.ID = id;
            privateCounters.Number = number;
            privateCounters.Model = model;
            return privateCounters;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceID
        {
            get
            {
                return _ServiceID;
            }
            set
            {
                OnServiceIDChanging(value);
                ReportPropertyChanging("ServiceID");
                _ServiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceID");
                OnServiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceID;
        partial void OnServiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues")]
        public EntityCollection<PrivateCounterValues> PrivateCounterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateCounterValues>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateCounterValues>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounterValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerPoses_PrivateCounters", "CustomerPoses")]
        public EntityCollection<CustomerPoses> CustomerPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerPoses>("AlphaDataBaseModel.FK_CustomerPoses_PrivateCounters", "CustomerPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerPoses>("AlphaDataBaseModel.FK_CustomerPoses_PrivateCounters", "CustomerPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_PrivateCounters_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PrivateCounters_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PrivateCounters_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PrivateCounters_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_PrivateCounters_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PrivateCounterValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateCounterValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateCounterValues object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="collectDate">Initial value of the CollectDate property.</param>
        public static PrivateCounterValues CreatePrivateCounterValues(global::System.Int32 id, global::System.DateTime period, global::System.Decimal value, global::System.DateTime collectDate)
        {
            PrivateCounterValues privateCounterValues = new PrivateCounterValues();
            privateCounterValues.ID = id;
            privateCounterValues.Period = period;
            privateCounterValues.Value = value;
            privateCounterValues.CollectDate = collectDate;
            return privateCounterValues;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CollectDate
        {
            get
            {
                return _CollectDate;
            }
            set
            {
                OnCollectDateChanging(value);
                ReportPropertyChanging("CollectDate");
                _CollectDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectDate");
                OnCollectDateChanged();
            }
        }
        private global::System.DateTime _CollectDate;
        partial void OnCollectDateChanging(global::System.DateTime value);
        partial void OnCollectDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounterValues_PrivateCounters", "PrivateCounters")]
        public PrivateCounters PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateCounters> PrivateCountersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounterValues_PrivateCounters", "PrivateCounters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PublicPlaces")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PublicPlaces : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PublicPlaces object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="area">Initial value of the Area property.</param>
        /// <param name="buildingID">Initial value of the BuildingID property.</param>
        /// <param name="serviceID">Initial value of the ServiceID property.</param>
        public static PublicPlaces CreatePublicPlaces(global::System.Int32 id, global::System.Decimal area, global::System.Int32 buildingID, global::System.Int32 serviceID)
        {
            PublicPlaces publicPlaces = new PublicPlaces();
            publicPlaces.ID = id;
            publicPlaces.Area = area;
            publicPlaces.BuildingID = buildingID;
            publicPlaces.ServiceID = serviceID;
            return publicPlaces;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.Decimal _Area;
        partial void OnAreaChanging(global::System.Decimal value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildingID
        {
            get
            {
                return _BuildingID;
            }
            set
            {
                OnBuildingIDChanging(value);
                ReportPropertyChanging("BuildingID");
                _BuildingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingID");
                OnBuildingIDChanged();
            }
        }
        private global::System.Int32 _BuildingID;
        partial void OnBuildingIDChanging(global::System.Int32 value);
        partial void OnBuildingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceID
        {
            get
            {
                return _ServiceID;
            }
            set
            {
                OnServiceIDChanging(value);
                ReportPropertyChanging("ServiceID");
                _ServiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceID");
                OnServiceIDChanged();
            }
        }
        private global::System.Int32 _ServiceID;
        partial void OnServiceIDChanging(global::System.Int32 value);
        partial void OnServiceIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PublicPlaces_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_PublicPlaces_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_PublicPlaces_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_PublicPlaces_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_PublicPlaces_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PublicPlaces_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PublicPlaces_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PublicPlaces_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PublicPlaces_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_PublicPlaces_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="PublicPlaceServiceVolumes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PublicPlaceServiceVolumes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PublicPlaceServiceVolumes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="serviceID">Initial value of the ServiceID property.</param>
        /// <param name="buildingID">Initial value of the BuildingID property.</param>
        public static PublicPlaceServiceVolumes CreatePublicPlaceServiceVolumes(global::System.Int32 id, global::System.DateTime period, global::System.Decimal volume, global::System.Int32 serviceID, global::System.Int32 buildingID)
        {
            PublicPlaceServiceVolumes publicPlaceServiceVolumes = new PublicPlaceServiceVolumes();
            publicPlaceServiceVolumes.ID = id;
            publicPlaceServiceVolumes.Period = period;
            publicPlaceServiceVolumes.Volume = volume;
            publicPlaceServiceVolumes.ServiceID = serviceID;
            publicPlaceServiceVolumes.BuildingID = buildingID;
            return publicPlaceServiceVolumes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Decimal _Volume;
        partial void OnVolumeChanging(global::System.Decimal value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceID
        {
            get
            {
                return _ServiceID;
            }
            set
            {
                OnServiceIDChanging(value);
                ReportPropertyChanging("ServiceID");
                _ServiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceID");
                OnServiceIDChanged();
            }
        }
        private global::System.Int32 _ServiceID;
        partial void OnServiceIDChanging(global::System.Int32 value);
        partial void OnServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildingID
        {
            get
            {
                return _BuildingID;
            }
            set
            {
                OnBuildingIDChanging(value);
                ReportPropertyChanging("BuildingID");
                _BuildingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingID");
                OnBuildingIDChanged();
            }
        }
        private global::System.Int32 _BuildingID;
        partial void OnBuildingIDChanging(global::System.Int32 value);
        partial void OnBuildingIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PublicPlaceServiceVolumes_Buildings", "Buildings")]
        public Buildings Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Buildings> BuildingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buildings>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buildings>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PublicPlaceServiceVolumes_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RebenefitOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RebenefitOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RebenefitOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="benefitRule">Initial value of the BenefitRule property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static RebenefitOperPoses CreateRebenefitOperPoses(global::System.Int32 id, global::System.Byte benefitRule, global::System.Decimal value)
        {
            RebenefitOperPoses rebenefitOperPoses = new RebenefitOperPoses();
            rebenefitOperPoses.ID = id;
            rebenefitOperPoses.BenefitRule = benefitRule;
            rebenefitOperPoses.Value = value;
            return rebenefitOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte BenefitRule
        {
            get
            {
                return _BenefitRule;
            }
            set
            {
                OnBenefitRuleChanging(value);
                ReportPropertyChanging("BenefitRule");
                _BenefitRule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitRule");
                OnBenefitRuleChanged();
            }
        }
        private global::System.Byte _BenefitRule;
        partial void OnBenefitRuleChanging(global::System.Byte value);
        partial void OnBenefitRuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOpers")]
        public RebenefitOpers RebenefitOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RebenefitOpers>("AlphaDataBaseModel.FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RebenefitOpers>("AlphaDataBaseModel.FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RebenefitOpers> RebenefitOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RebenefitOpers>("AlphaDataBaseModel.FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RebenefitOpers>("AlphaDataBaseModel.FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_RebenefitOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_RebenefitOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_RebenefitOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_RebenefitOperPoses_Services", "Services", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_Contractors", "Contractors")]
        public Contractors Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_RebenefitOperPoses_Contractors", "Contractors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_RebenefitOperPoses_Contractors", "Contractors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractors> ContractorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_RebenefitOperPoses_Contractors", "Contractors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractors>("AlphaDataBaseModel.FK_RebenefitOperPoses_Contractors", "Contractors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RebenefitOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RebenefitOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RebenefitOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static RebenefitOpers CreateRebenefitOpers(global::System.Int32 id, global::System.Decimal value)
        {
            RebenefitOpers rebenefitOpers = new RebenefitOpers();
            rebenefitOpers.ID = id;
            rebenefitOpers.Value = value;
            return rebenefitOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOperPoses")]
        public EntityCollection<RebenefitOperPoses> RebenefitOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RebenefitOperPoses>("AlphaDataBaseModel.FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RebenefitOperPoses>("AlphaDataBaseModel.FK_RebenefitOperPoses_RebenefitOpers", "RebenefitOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOpers_RechargeOpers", "RechargeOpers")]
        public RechargeOpers RechargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_RebenefitOpers_RechargeOpers", "RechargeOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_RebenefitOpers_RechargeOpers", "RechargeOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RechargeOpers> RechargeOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_RebenefitOpers_RechargeOpers", "RechargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_RebenefitOpers_RechargeOpers", "RechargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOpers_BenefitCorrectionOpers", "BenefitCorrectionOpers")]
        public BenefitCorrectionOpers BenefitCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.FK_RebenefitOpers_BenefitCorrectionOpers", "BenefitCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.FK_RebenefitOpers_BenefitCorrectionOpers", "BenefitCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitCorrectionOpers> BenefitCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.FK_RebenefitOpers_BenefitCorrectionOpers", "BenefitCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitCorrectionOpers>("AlphaDataBaseModel.FK_RebenefitOpers_BenefitCorrectionOpers", "BenefitCorrectionOpers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RechargeOperPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RechargeOperPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RechargeOperPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static RechargeOperPoses CreateRechargeOperPoses(global::System.Int32 id, global::System.Decimal value)
        {
            RechargeOperPoses rechargeOperPoses = new RechargeOperPoses();
            rechargeOperPoses.ID = id;
            rechargeOperPoses.Value = value;
            return rechargeOperPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_Contractors", "Contractors")]
        public Contractors Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_RechargeOperPoses_Contractors", "Contractors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_RechargeOperPoses_Contractors", "Contractors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractors> ContractorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractors>("AlphaDataBaseModel.FK_RechargeOperPoses_Contractors", "Contractors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractors>("AlphaDataBaseModel.FK_RechargeOperPoses_Contractors", "Contractors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_RechargeOpers", "RechargeOpers")]
        public RechargeOpers RechargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOperPoses_RechargeOpers", "RechargeOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOperPoses_RechargeOpers", "RechargeOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RechargeOpers> RechargeOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOperPoses_RechargeOpers", "RechargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOperPoses_RechargeOpers", "RechargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_Services", "Services")]
        public Services Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_RechargeOperPoses_Services", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_RechargeOperPoses_Services", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Services>("AlphaDataBaseModel.FK_RechargeOperPoses_Services", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Services>("AlphaDataBaseModel.FK_RechargeOperPoses_Services", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RechargeOpers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RechargeOpers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RechargeOpers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static RechargeOpers CreateRechargeOpers(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.Decimal value)
        {
            RechargeOpers rechargeOpers = new RechargeOpers();
            rechargeOpers.ID = id;
            rechargeOpers.CreationDateTime = creationDateTime;
            rechargeOpers.Value = value;
            return rechargeOpers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOpers_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_RechargeOpers_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_RechargeOpers_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_RechargeOpers_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_RechargeOpers_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOpers_RechargeOpers", "RebenefitOpers")]
        public EntityCollection<RebenefitOpers> RebenefitOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RebenefitOpers>("AlphaDataBaseModel.FK_RebenefitOpers_RechargeOpers", "RebenefitOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RebenefitOpers>("AlphaDataBaseModel.FK_RebenefitOpers_RechargeOpers", "RebenefitOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_RechargeOpers", "RechargeOperPoses")]
        public EntityCollection<RechargeOperPoses> RechargeOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargeOperPoses>("AlphaDataBaseModel.FK_RechargeOperPoses_RechargeOpers", "RechargeOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargeOperPoses>("AlphaDataBaseModel.FK_RechargeOperPoses_RechargeOpers", "RechargeOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOpers_RechargeSets", "RechargeSets")]
        public RechargeSets RechargeSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeSets>("AlphaDataBaseModel.FK_RechargeOpers_RechargeSets", "RechargeSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeSets>("AlphaDataBaseModel.FK_RechargeOpers_RechargeSets", "RechargeSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RechargeSets> RechargeSetsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RechargeSets>("AlphaDataBaseModel.FK_RechargeOpers_RechargeSets", "RechargeSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RechargeSets>("AlphaDataBaseModel.FK_RechargeOpers_RechargeSets", "RechargeSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOpers_RechargeOpers", "ChargeCorrectionOpers")]
        public EntityCollection<ChargeCorrectionOpers> ParentChargeCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOpers_RechargeOpers", "ChargeCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_ChargeCorrectionOpers_RechargeOpers", "ChargeCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOpers_ChargeCorrectionOpers", "ChargeCorrectionOpers")]
        public ChargeCorrectionOpers ChildChargeCorrectionOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeCorrectionOpers", "ChargeCorrectionOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeCorrectionOpers", "ChargeCorrectionOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeCorrectionOpers> ChildChargeCorrectionOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeCorrectionOpers", "ChargeCorrectionOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeCorrectionOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeCorrectionOpers", "ChargeCorrectionOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOpers_ChargeOpers", "ChargeOpers")]
        public ChargeOpers ChargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeOpers", "ChargeOpers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeOpers", "ChargeOpers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeOpers> ChargeOpersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeOpers", "ChargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_ChargeOpers", "ChargeOpers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RechargePercentCorrections")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RechargePercentCorrections : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RechargePercentCorrections object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="days">Initial value of the Days property.</param>
        /// <param name="percent">Initial value of the Percent property.</param>
        /// <param name="customerPosID">Initial value of the CustomerPosID property.</param>
        public static RechargePercentCorrections CreateRechargePercentCorrections(global::System.Int32 id, global::System.DateTime period, global::System.Int32 days, global::System.Int32 percent, global::System.Int32 customerPosID)
        {
            RechargePercentCorrections rechargePercentCorrections = new RechargePercentCorrections();
            rechargePercentCorrections.ID = id;
            rechargePercentCorrections.Period = period;
            rechargePercentCorrections.Days = days;
            rechargePercentCorrections.Percent = percent;
            rechargePercentCorrections.CustomerPosID = customerPosID;
            return rechargePercentCorrections;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Days
        {
            get
            {
                return _Days;
            }
            set
            {
                OnDaysChanging(value);
                ReportPropertyChanging("Days");
                _Days = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Days");
                OnDaysChanged();
            }
        }
        private global::System.Int32 _Days;
        partial void OnDaysChanging(global::System.Int32 value);
        partial void OnDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Percent
        {
            get
            {
                return _Percent;
            }
            set
            {
                OnPercentChanging(value);
                ReportPropertyChanging("Percent");
                _Percent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percent");
                OnPercentChanged();
            }
        }
        private global::System.Int32 _Percent;
        partial void OnPercentChanging(global::System.Int32 value);
        partial void OnPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerPosID
        {
            get
            {
                return _CustomerPosID;
            }
            set
            {
                OnCustomerPosIDChanging(value);
                ReportPropertyChanging("CustomerPosID");
                _CustomerPosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerPosID");
                OnCustomerPosIDChanged();
            }
        }
        private global::System.Int32 _CustomerPosID;
        partial void OnCustomerPosIDChanging(global::System.Int32 value);
        partial void OnCustomerPosIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargePercentCorrections_CustomerPoses", "CustomerPoses")]
        public CustomerPoses CustomerPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerPoses>("AlphaDataBaseModel.FK_RechargePercentCorrections_CustomerPoses", "CustomerPoses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerPoses>("AlphaDataBaseModel.FK_RechargePercentCorrections_CustomerPoses", "CustomerPoses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerPoses> CustomerPosesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerPoses>("AlphaDataBaseModel.FK_RechargePercentCorrections_CustomerPoses", "CustomerPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerPoses>("AlphaDataBaseModel.FK_RechargePercentCorrections_CustomerPoses", "CustomerPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RechargeSets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RechargeSets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RechargeSets object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="valueSum">Initial value of the ValueSum property.</param>
        public static RechargeSets CreateRechargeSets(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.DateTime period, global::System.Int32 number, global::System.Int32 quantity, global::System.Decimal valueSum)
        {
            RechargeSets rechargeSets = new RechargeSets();
            rechargeSets.ID = id;
            rechargeSets.CreationDateTime = creationDateTime;
            rechargeSets.Period = period;
            rechargeSets.Number = number;
            rechargeSets.Quantity = quantity;
            rechargeSets.ValueSum = valueSum;
            return rechargeSets;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ValueSum
        {
            get
            {
                return _ValueSum;
            }
            set
            {
                OnValueSumChanging(value);
                ReportPropertyChanging("ValueSum");
                _ValueSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueSum");
                OnValueSumChanged();
            }
        }
        private global::System.Decimal _ValueSum;
        partial void OnValueSumChanging(global::System.Decimal value);
        partial void OnValueSumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOpers_RechargeSets", "RechargeOpers")]
        public EntityCollection<RechargeOpers> RechargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_RechargeSets", "RechargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargeOpers>("AlphaDataBaseModel.FK_RechargeOpers_RechargeSets", "RechargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeSets_Users", "Users")]
        public Users Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_RechargeSets_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_RechargeSets_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("AlphaDataBaseModel.FK_RechargeSets_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("AlphaDataBaseModel.FK_RechargeSets_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RegularBillDocCounterPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegularBillDocCounterPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegularBillDocCounterPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="prevValue">Initial value of the PrevValue property.</param>
        /// <param name="curValue">Initial value of the CurValue property.</param>
        /// <param name="consumption">Initial value of the Consumption property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="serviceName">Initial value of the ServiceName property.</param>
        /// <param name="measure">Initial value of the Measure property.</param>
        public static RegularBillDocCounterPoses CreateRegularBillDocCounterPoses(global::System.Int32 id, global::System.String number, global::System.Decimal prevValue, global::System.Decimal curValue, global::System.Decimal consumption, global::System.Decimal rate, global::System.String serviceName, global::System.String measure)
        {
            RegularBillDocCounterPoses regularBillDocCounterPoses = new RegularBillDocCounterPoses();
            regularBillDocCounterPoses.ID = id;
            regularBillDocCounterPoses.Number = number;
            regularBillDocCounterPoses.PrevValue = prevValue;
            regularBillDocCounterPoses.CurValue = curValue;
            regularBillDocCounterPoses.Consumption = consumption;
            regularBillDocCounterPoses.Rate = rate;
            regularBillDocCounterPoses.ServiceName = serviceName;
            regularBillDocCounterPoses.Measure = measure;
            return regularBillDocCounterPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrevValue
        {
            get
            {
                return _PrevValue;
            }
            set
            {
                OnPrevValueChanging(value);
                ReportPropertyChanging("PrevValue");
                _PrevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevValue");
                OnPrevValueChanged();
            }
        }
        private global::System.Decimal _PrevValue;
        partial void OnPrevValueChanging(global::System.Decimal value);
        partial void OnPrevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CurValue
        {
            get
            {
                return _CurValue;
            }
            set
            {
                OnCurValueChanging(value);
                ReportPropertyChanging("CurValue");
                _CurValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurValue");
                OnCurValueChanged();
            }
        }
        private global::System.Decimal _CurValue;
        partial void OnCurValueChanging(global::System.Decimal value);
        partial void OnCurValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Consumption
        {
            get
            {
                return _Consumption;
            }
            set
            {
                OnConsumptionChanging(value);
                ReportPropertyChanging("Consumption");
                _Consumption = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Consumption");
                OnConsumptionChanged();
            }
        }
        private global::System.Decimal _Consumption;
        partial void OnConsumptionChanging(global::System.Decimal value);
        partial void OnConsumptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceName
        {
            get
            {
                return _ServiceName;
            }
            set
            {
                OnServiceNameChanging(value);
                ReportPropertyChanging("ServiceName");
                _ServiceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServiceName");
                OnServiceNameChanged();
            }
        }
        private global::System.String _ServiceName;
        partial void OnServiceNameChanging(global::System.String value);
        partial void OnServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocCounterPoses_fk", "RegularBillDocs")]
        public RegularBillDocs RegularBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocCounterPoses_fk", "RegularBillDocs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocCounterPoses_fk", "RegularBillDocs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegularBillDocs> RegularBillDocsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocCounterPoses_fk", "RegularBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocCounterPoses_fk", "RegularBillDocs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RegularBillDocs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegularBillDocs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegularBillDocs object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="payBeforeDateTime">Initial value of the PayBeforeDateTime property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="square">Initial value of the Square property.</param>
        /// <param name="residentsCount">Initial value of the ResidentsCount property.</param>
        /// <param name="overpaymentValue">Initial value of the OverpaymentValue property.</param>
        /// <param name="monthChargeValue">Initial value of the MonthChargeValue property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        public static RegularBillDocs CreateRegularBillDocs(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.DateTime payBeforeDateTime, global::System.String account, global::System.String owner, global::System.String address, global::System.String square, global::System.Int32 residentsCount, global::System.Decimal overpaymentValue, global::System.Decimal monthChargeValue, global::System.Decimal value, global::System.DateTime period)
        {
            RegularBillDocs regularBillDocs = new RegularBillDocs();
            regularBillDocs.ID = id;
            regularBillDocs.CreationDateTime = creationDateTime;
            regularBillDocs.PayBeforeDateTime = payBeforeDateTime;
            regularBillDocs.Account = account;
            regularBillDocs.Owner = owner;
            regularBillDocs.Address = address;
            regularBillDocs.Square = square;
            regularBillDocs.ResidentsCount = residentsCount;
            regularBillDocs.OverpaymentValue = overpaymentValue;
            regularBillDocs.MonthChargeValue = monthChargeValue;
            regularBillDocs.Value = value;
            regularBillDocs.Period = period;
            return regularBillDocs;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PayBeforeDateTime
        {
            get
            {
                return _PayBeforeDateTime;
            }
            set
            {
                OnPayBeforeDateTimeChanging(value);
                ReportPropertyChanging("PayBeforeDateTime");
                _PayBeforeDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayBeforeDateTime");
                OnPayBeforeDateTimeChanged();
            }
        }
        private global::System.DateTime _PayBeforeDateTime;
        partial void OnPayBeforeDateTimeChanging(global::System.DateTime value);
        partial void OnPayBeforeDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Square
        {
            get
            {
                return _Square;
            }
            set
            {
                OnSquareChanging(value);
                ReportPropertyChanging("Square");
                _Square = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Square");
                OnSquareChanged();
            }
        }
        private global::System.String _Square;
        partial void OnSquareChanging(global::System.String value);
        partial void OnSquareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResidentsCount
        {
            get
            {
                return _ResidentsCount;
            }
            set
            {
                OnResidentsCountChanging(value);
                ReportPropertyChanging("ResidentsCount");
                _ResidentsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidentsCount");
                OnResidentsCountChanged();
            }
        }
        private global::System.Int32 _ResidentsCount;
        partial void OnResidentsCountChanging(global::System.Int32 value);
        partial void OnResidentsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OverpaymentValue
        {
            get
            {
                return _OverpaymentValue;
            }
            set
            {
                OnOverpaymentValueChanging(value);
                ReportPropertyChanging("OverpaymentValue");
                _OverpaymentValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverpaymentValue");
                OnOverpaymentValueChanged();
            }
        }
        private global::System.Decimal _OverpaymentValue;
        partial void OnOverpaymentValueChanging(global::System.Decimal value);
        partial void OnOverpaymentValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MonthChargeValue
        {
            get
            {
                return _MonthChargeValue;
            }
            set
            {
                OnMonthChargeValueChanging(value);
                ReportPropertyChanging("MonthChargeValue");
                _MonthChargeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthChargeValue");
                OnMonthChargeValueChanged();
            }
        }
        private global::System.Decimal _MonthChargeValue;
        partial void OnMonthChargeValueChanging(global::System.Decimal value);
        partial void OnMonthChargeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyPhoneNumber
        {
            get
            {
                return _EmergencyPhoneNumber;
            }
            set
            {
                OnEmergencyPhoneNumberChanging(value);
                ReportPropertyChanging("EmergencyPhoneNumber");
                _EmergencyPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyPhoneNumber");
                OnEmergencyPhoneNumberChanged();
            }
        }
        private global::System.String _EmergencyPhoneNumber;
        partial void OnEmergencyPhoneNumberChanging(global::System.String value);
        partial void OnEmergencyPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractorContactInfo
        {
            get
            {
                return _ContractorContactInfo;
            }
            set
            {
                OnContractorContactInfoChanging(value);
                ReportPropertyChanging("ContractorContactInfo");
                _ContractorContactInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContractorContactInfo");
                OnContractorContactInfoChanged();
            }
        }
        private global::System.String _ContractorContactInfo;
        partial void OnContractorContactInfoChanging(global::System.String value);
        partial void OnContractorContactInfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocs_fk", "BillSets")]
        public BillSets BillSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.RegularBillDocs_fk", "BillSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.RegularBillDocs_fk", "BillSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BillSets> BillSetsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.RegularBillDocs_fk", "BillSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BillSets>("AlphaDataBaseModel.RegularBillDocs_fk", "BillSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "ChargeOpers_fk2", "ChargeOpers")]
        public EntityCollection<ChargeOpers> ChargeOpers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOpers>("AlphaDataBaseModel.ChargeOpers_fk2", "ChargeOpers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOpers>("AlphaDataBaseModel.ChargeOpers_fk2", "ChargeOpers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocs_fk2", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.RegularBillDocs_fk2", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.RegularBillDocs_fk2", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.RegularBillDocs_fk2", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.RegularBillDocs_fk2", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocCounterPoses_fk", "RegularBillDocCounterPoses")]
        public EntityCollection<RegularBillDocCounterPoses> RegularBillDocCounterPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegularBillDocCounterPoses>("AlphaDataBaseModel.RegularBillDocCounterPoses_fk", "RegularBillDocCounterPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegularBillDocCounterPoses>("AlphaDataBaseModel.RegularBillDocCounterPoses_fk", "RegularBillDocCounterPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocSeviceTypePoses_fk", "RegularBillDocSeviceTypePoses")]
        public EntityCollection<RegularBillDocSeviceTypePoses> RegularBillDocSeviceTypePoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegularBillDocSeviceTypePoses>("AlphaDataBaseModel.RegularBillDocSeviceTypePoses_fk", "RegularBillDocSeviceTypePoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegularBillDocSeviceTypePoses>("AlphaDataBaseModel.RegularBillDocSeviceTypePoses_fk", "RegularBillDocSeviceTypePoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocSharedCounterPoses_fk", "RegularBillDocSharedCounterPoses")]
        public EntityCollection<RegularBillDocSharedCounterPoses> RegularBillDocSharedCounterPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegularBillDocSharedCounterPoses>("AlphaDataBaseModel.RegularBillDocSharedCounterPoses_fk", "RegularBillDocSharedCounterPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegularBillDocSharedCounterPoses>("AlphaDataBaseModel.RegularBillDocSharedCounterPoses_fk", "RegularBillDocSharedCounterPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RegularBillDocSeviceTypePoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegularBillDocSeviceTypePoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegularBillDocSeviceTypePoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="serviceTypeName">Initial value of the ServiceTypeName property.</param>
        /// <param name="payRate">Initial value of the PayRate property.</param>
        /// <param name="charge">Initial value of the Charge property.</param>
        /// <param name="benefit">Initial value of the Benefit property.</param>
        /// <param name="recalculation">Initial value of the Recalculation property.</param>
        /// <param name="payable">Initial value of the Payable property.</param>
        public static RegularBillDocSeviceTypePoses CreateRegularBillDocSeviceTypePoses(global::System.Int32 id, global::System.String serviceTypeName, global::System.Decimal payRate, global::System.Decimal charge, global::System.Decimal benefit, global::System.Decimal recalculation, global::System.Decimal payable)
        {
            RegularBillDocSeviceTypePoses regularBillDocSeviceTypePoses = new RegularBillDocSeviceTypePoses();
            regularBillDocSeviceTypePoses.ID = id;
            regularBillDocSeviceTypePoses.ServiceTypeName = serviceTypeName;
            regularBillDocSeviceTypePoses.PayRate = payRate;
            regularBillDocSeviceTypePoses.Charge = charge;
            regularBillDocSeviceTypePoses.Benefit = benefit;
            regularBillDocSeviceTypePoses.Recalculation = recalculation;
            regularBillDocSeviceTypePoses.Payable = payable;
            return regularBillDocSeviceTypePoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceTypeName
        {
            get
            {
                return _ServiceTypeName;
            }
            set
            {
                OnServiceTypeNameChanging(value);
                ReportPropertyChanging("ServiceTypeName");
                _ServiceTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServiceTypeName");
                OnServiceTypeNameChanged();
            }
        }
        private global::System.String _ServiceTypeName;
        partial void OnServiceTypeNameChanging(global::System.String value);
        partial void OnServiceTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PayRate
        {
            get
            {
                return _PayRate;
            }
            set
            {
                OnPayRateChanging(value);
                ReportPropertyChanging("PayRate");
                _PayRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayRate");
                OnPayRateChanged();
            }
        }
        private global::System.Decimal _PayRate;
        partial void OnPayRateChanging(global::System.Decimal value);
        partial void OnPayRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Charge
        {
            get
            {
                return _Charge;
            }
            set
            {
                OnChargeChanging(value);
                ReportPropertyChanging("Charge");
                _Charge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Charge");
                OnChargeChanged();
            }
        }
        private global::System.Decimal _Charge;
        partial void OnChargeChanging(global::System.Decimal value);
        partial void OnChargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Benefit
        {
            get
            {
                return _Benefit;
            }
            set
            {
                OnBenefitChanging(value);
                ReportPropertyChanging("Benefit");
                _Benefit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Benefit");
                OnBenefitChanged();
            }
        }
        private global::System.Decimal _Benefit;
        partial void OnBenefitChanging(global::System.Decimal value);
        partial void OnBenefitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Recalculation
        {
            get
            {
                return _Recalculation;
            }
            set
            {
                OnRecalculationChanging(value);
                ReportPropertyChanging("Recalculation");
                _Recalculation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recalculation");
                OnRecalculationChanged();
            }
        }
        private global::System.Decimal _Recalculation;
        partial void OnRecalculationChanging(global::System.Decimal value);
        partial void OnRecalculationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Payable
        {
            get
            {
                return _Payable;
            }
            set
            {
                OnPayableChanging(value);
                ReportPropertyChanging("Payable");
                _Payable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payable");
                OnPayableChanged();
            }
        }
        private global::System.Decimal _Payable;
        partial void OnPayableChanging(global::System.Decimal value);
        partial void OnPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceTypeID
        {
            get
            {
                return _ServiceTypeID;
            }
            set
            {
                OnServiceTypeIDChanging(value);
                ReportPropertyChanging("ServiceTypeID");
                _ServiceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceTypeID");
                OnServiceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceTypeID;
        partial void OnServiceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocSeviceTypePoses_fk", "RegularBillDocs")]
        public RegularBillDocs RegularBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocSeviceTypePoses_fk", "RegularBillDocs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocSeviceTypePoses_fk", "RegularBillDocs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegularBillDocs> RegularBillDocsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocSeviceTypePoses_fk", "RegularBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocSeviceTypePoses_fk", "RegularBillDocs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RegularBillDocSeviceTypePoses_ServiceTypes", "ServiceTypes")]
        public ServiceTypes ServiceTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTypes>("AlphaDataBaseModel.FK_RegularBillDocSeviceTypePoses_ServiceTypes", "ServiceTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTypes>("AlphaDataBaseModel.FK_RegularBillDocSeviceTypePoses_ServiceTypes", "ServiceTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceTypes> ServiceTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTypes>("AlphaDataBaseModel.FK_RegularBillDocSeviceTypePoses_ServiceTypes", "ServiceTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceTypes>("AlphaDataBaseModel.FK_RegularBillDocSeviceTypePoses_ServiceTypes", "ServiceTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="RegularBillDocSharedCounterPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegularBillDocSharedCounterPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegularBillDocSharedCounterPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sharedCounterValue">Initial value of the SharedCounterValue property.</param>
        /// <param name="sharedCharge">Initial value of the SharedCharge property.</param>
        public static RegularBillDocSharedCounterPoses CreateRegularBillDocSharedCounterPoses(global::System.Int32 id, global::System.Decimal sharedCounterValue, global::System.Decimal sharedCharge)
        {
            RegularBillDocSharedCounterPoses regularBillDocSharedCounterPoses = new RegularBillDocSharedCounterPoses();
            regularBillDocSharedCounterPoses.ID = id;
            regularBillDocSharedCounterPoses.SharedCounterValue = sharedCounterValue;
            regularBillDocSharedCounterPoses.SharedCharge = sharedCharge;
            return regularBillDocSharedCounterPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SharedCounterValue
        {
            get
            {
                return _SharedCounterValue;
            }
            set
            {
                OnSharedCounterValueChanging(value);
                ReportPropertyChanging("SharedCounterValue");
                _SharedCounterValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SharedCounterValue");
                OnSharedCounterValueChanged();
            }
        }
        private global::System.Decimal _SharedCounterValue;
        partial void OnSharedCounterValueChanging(global::System.Decimal value);
        partial void OnSharedCounterValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SharedCharge
        {
            get
            {
                return _SharedCharge;
            }
            set
            {
                OnSharedChargeChanging(value);
                ReportPropertyChanging("SharedCharge");
                _SharedCharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SharedCharge");
                OnSharedChargeChanged();
            }
        }
        private global::System.Decimal _SharedCharge;
        partial void OnSharedChargeChanging(global::System.Decimal value);
        partial void OnSharedChargeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "RegularBillDocSharedCounterPoses_fk", "RegularBillDocs")]
        public RegularBillDocs RegularBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocSharedCounterPoses_fk", "RegularBillDocs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocSharedCounterPoses_fk", "RegularBillDocs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegularBillDocs> RegularBillDocsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocSharedCounterPoses_fk", "RegularBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegularBillDocs>("AlphaDataBaseModel.RegularBillDocSharedCounterPoses_fk", "RegularBillDocs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Residents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Residents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Residents object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="patronymic">Initial value of the Patronymic property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="ownerRelationship">Initial value of the OwnerRelationship property.</param>
        public static Residents CreateResidents(global::System.Int32 id, global::System.String firstName, global::System.String patronymic, global::System.String surname, global::System.Byte ownerRelationship)
        {
            Residents residents = new Residents();
            residents.ID = id;
            residents.FirstName = firstName;
            residents.Patronymic = patronymic;
            residents.Surname = surname;
            residents.OwnerRelationship = ownerRelationship;
            return residents;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Patronymic
        {
            get
            {
                return _Patronymic;
            }
            set
            {
                OnPatronymicChanging(value);
                ReportPropertyChanging("Patronymic");
                _Patronymic = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Patronymic");
                OnPatronymicChanged();
            }
        }
        private global::System.String _Patronymic;
        partial void OnPatronymicChanging(global::System.String value);
        partial void OnPatronymicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResidentDocument
        {
            get
            {
                return _ResidentDocument;
            }
            set
            {
                OnResidentDocumentChanging(value);
                ReportPropertyChanging("ResidentDocument");
                _ResidentDocument = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResidentDocument");
                OnResidentDocumentChanged();
            }
        }
        private global::System.String _ResidentDocument;
        partial void OnResidentDocumentChanging(global::System.String value);
        partial void OnResidentDocumentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte OwnerRelationship
        {
            get
            {
                return _OwnerRelationship;
            }
            set
            {
                OnOwnerRelationshipChanging(value);
                ReportPropertyChanging("OwnerRelationship");
                _OwnerRelationship = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerRelationship");
                OnOwnerRelationshipChanged();
            }
        }
        private global::System.Byte _OwnerRelationship;
        partial void OnOwnerRelationshipChanging(global::System.Byte value);
        partial void OnOwnerRelationshipChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Residents_BenefitTypes", "BenefitTypes")]
        public BenefitTypes BenefitTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitTypes>("AlphaDataBaseModel.FK_Residents_BenefitTypes", "BenefitTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitTypes>("AlphaDataBaseModel.FK_Residents_BenefitTypes", "BenefitTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitTypes> BenefitTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitTypes>("AlphaDataBaseModel.FK_Residents_BenefitTypes", "BenefitTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitTypes>("AlphaDataBaseModel.FK_Residents_BenefitTypes", "BenefitTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Residents_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_Residents_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_Residents_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.FK_Residents_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.FK_Residents_Customers", "Customers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Services")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Services : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Services object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="chargeRule">Initial value of the ChargeRule property.</param>
        public static Services CreateServices(global::System.Int32 id, global::System.String name, global::System.String code, global::System.Byte chargeRule)
        {
            Services services = new Services();
            services.ID = id;
            services.Name = name;
            services.Code = code;
            services.ChargeRule = chargeRule;
            return services;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ChargeRule
        {
            get
            {
                return _ChargeRule;
            }
            set
            {
                OnChargeRuleChanging(value);
                ReportPropertyChanging("ChargeRule");
                _ChargeRule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChargeRule");
                OnChargeRuleChanged();
            }
        }
        private global::System.Byte _ChargeRule;
        partial void OnChargeRuleChanging(global::System.Byte value);
        partial void OnChargeRuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Norm
        {
            get
            {
                return _Norm;
            }
            set
            {
                OnNormChanging(value);
                ReportPropertyChanging("Norm");
                _Norm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Norm");
                OnNormChanged();
            }
        }
        private Nullable<global::System.Decimal> _Norm;
        partial void OnNormChanging(Nullable<global::System.Decimal> value);
        partial void OnNormChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitCorrectionOperPoses_Services", "BenefitCorrectionOperPoses")]
        public EntityCollection<BenefitCorrectionOperPoses> BenefitCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitCorrectionOperPoses>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Services", "BenefitCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitCorrectionOperPoses>("AlphaDataBaseModel.FK_BenefitCorrectionOperPoses_Services", "BenefitCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_BenefitOperPoses_Services", "BenefitOperPoses")]
        public EntityCollection<BenefitOperPoses> BenefitOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitOperPoses>("AlphaDataBaseModel.FK_BenefitOperPoses_Services", "BenefitOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitOperPoses>("AlphaDataBaseModel.FK_BenefitOperPoses_Services", "BenefitOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeCorrectionOperPoses_Services", "ChargeCorrectionOperPoses")]
        public EntityCollection<ChargeCorrectionOperPoses> ChargeCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeCorrectionOperPoses>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Services", "ChargeCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeCorrectionOperPoses>("AlphaDataBaseModel.FK_ChargeCorrectionOperPoses_Services", "ChargeCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeOperPoses_Services", "ChargeOperPoses")]
        public EntityCollection<ChargeOperPoses> ChargeOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeOperPoses>("AlphaDataBaseModel.FK_ChargeOperPoses_Services", "ChargeOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeOperPoses>("AlphaDataBaseModel.FK_ChargeOperPoses_Services", "ChargeOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CommonCounters_Services", "CommonCounters")]
        public EntityCollection<CommonCounters> CommonCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommonCounters>("AlphaDataBaseModel.FK_CommonCounters_Services", "CommonCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommonCounters>("AlphaDataBaseModel.FK_CommonCounters_Services", "CommonCounters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_CustomerPoses_Services", "CustomerPoses")]
        public EntityCollection<CustomerPoses> CustomerPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerPoses>("AlphaDataBaseModel.FK_CustomerPoses_Services", "CustomerPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerPoses>("AlphaDataBaseModel.FK_CustomerPoses_Services", "CustomerPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentCorrectionOperPoses_Services", "OverpaymentCorrectionOperPoses")]
        public EntityCollection<OverpaymentCorrectionOperPoses> OverpaymentCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverpaymentCorrectionOperPoses>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_Services", "OverpaymentCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverpaymentCorrectionOperPoses>("AlphaDataBaseModel.FK_OverpaymentCorrectionOperPoses_Services", "OverpaymentCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_OverpaymentOperPoses_Services", "OverpaymentOperPoses")]
        public EntityCollection<OverpaymentOperPoses> OverpaymentOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverpaymentOperPoses>("AlphaDataBaseModel.FK_OverpaymentOperPoses_Services", "OverpaymentOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverpaymentOperPoses>("AlphaDataBaseModel.FK_OverpaymentOperPoses_Services", "OverpaymentOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentCorrectionOperPoses_Services", "PaymentCorrectionOperPoses")]
        public EntityCollection<PaymentCorrectionOperPoses> PaymentCorrectionOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentCorrectionOperPoses>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_Services", "PaymentCorrectionOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentCorrectionOperPoses>("AlphaDataBaseModel.FK_PaymentCorrectionOperPoses_Services", "PaymentCorrectionOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentOperPoses_Services", "PaymentOperPoses")]
        public EntityCollection<PaymentOperPoses> PaymentOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentOperPoses>("AlphaDataBaseModel.FK_PaymentOperPoses_Services", "PaymentOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentOperPoses>("AlphaDataBaseModel.FK_PaymentOperPoses_Services", "PaymentOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RebenefitOperPoses_Services", "RebenefitOperPoses")]
        public EntityCollection<RebenefitOperPoses> RebenefitOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RebenefitOperPoses>("AlphaDataBaseModel.FK_RebenefitOperPoses_Services", "RebenefitOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RebenefitOperPoses>("AlphaDataBaseModel.FK_RebenefitOperPoses_Services", "RebenefitOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeOperPoses_Services", "RechargeOperPoses")]
        public EntityCollection<RechargeOperPoses> RechargeOperPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargeOperPoses>("AlphaDataBaseModel.FK_RechargeOperPoses_Services", "RechargeOperPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargeOperPoses>("AlphaDataBaseModel.FK_RechargeOperPoses_Services", "RechargeOperPoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Services_ServiceTypes", "ServiceTypes")]
        public ServiceTypes ServiceTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTypes>("AlphaDataBaseModel.FK_Services_ServiceTypes", "ServiceTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTypes>("AlphaDataBaseModel.FK_Services_ServiceTypes", "ServiceTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceTypes> ServiceTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceTypes>("AlphaDataBaseModel.FK_Services_ServiceTypes", "ServiceTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceTypes>("AlphaDataBaseModel.FK_Services_ServiceTypes", "ServiceTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PublicPlaces_Services", "PublicPlaces")]
        public EntityCollection<PublicPlaces> PublicPlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublicPlaces>("AlphaDataBaseModel.FK_PublicPlaces_Services", "PublicPlaces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublicPlaces>("AlphaDataBaseModel.FK_PublicPlaces_Services", "PublicPlaces", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PublicPlaceServiceVolumes_Services", "PublicPlaceServiceVolumes")]
        public EntityCollection<PublicPlaceServiceVolumes> PublicPlaceServiceVolumes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PublicPlaceServiceVolumes>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Services", "PublicPlaceServiceVolumes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PublicPlaceServiceVolumes>("AlphaDataBaseModel.FK_PublicPlaceServiceVolumes_Services", "PublicPlaceServiceVolumes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PrivateCounters_Services", "PrivateCounters")]
        public EntityCollection<PrivateCounters> PrivateCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounters_Services", "PrivateCounters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivateCounters>("AlphaDataBaseModel.FK_PrivateCounters_Services", "PrivateCounters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="ServiceTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static ServiceTypes CreateServiceTypes(global::System.Int32 id, global::System.String name, global::System.String code)
        {
            ServiceTypes serviceTypes = new ServiceTypes();
            serviceTypes.ID = id;
            serviceTypes.Name = name;
            serviceTypes.Code = code;
            return serviceTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Services_ServiceTypes", "Services")]
        public EntityCollection<Services> Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Services>("AlphaDataBaseModel.FK_Services_ServiceTypes", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Services>("AlphaDataBaseModel.FK_Services_ServiceTypes", "Services", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RegularBillDocSeviceTypePoses_ServiceTypes", "RegularBillDocSeviceTypePoses")]
        public EntityCollection<RegularBillDocSeviceTypePoses> RegularBillDocSeviceTypePoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegularBillDocSeviceTypePoses>("AlphaDataBaseModel.FK_RegularBillDocSeviceTypePoses_ServiceTypes", "RegularBillDocSeviceTypePoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegularBillDocSeviceTypePoses>("AlphaDataBaseModel.FK_RegularBillDocSeviceTypePoses_ServiceTypes", "RegularBillDocSeviceTypePoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Settings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Settings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Settings object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Settings CreateSettings(global::System.Int32 id, global::System.String name, global::System.String value)
        {
            Settings settings = new Settings();
            settings.ID = id;
            settings.Name = name;
            settings.Value = value;
            return settings;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Streets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Streets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Streets object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Streets CreateStreets(global::System.Int32 id, global::System.String name)
        {
            Streets streets = new Streets();
            streets.ID = id;
            streets.Name = name;
            return streets;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Buildings_Streets", "Buildings")]
        public EntityCollection<Buildings> Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Buildings>("AlphaDataBaseModel.FK_Buildings_Streets", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Buildings>("AlphaDataBaseModel.FK_Buildings_Streets", "Buildings", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="TotalBillDocPoses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalBillDocPoses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalBillDocPoses object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="serviceTypeName">Initial value of the ServiceTypeName property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="totalCharged">Initial value of the TotalCharged property.</param>
        /// <param name="totalPaid">Initial value of the TotalPaid property.</param>
        public static TotalBillDocPoses CreateTotalBillDocPoses(global::System.Int32 id, global::System.String serviceTypeName, global::System.Decimal value, global::System.Decimal totalCharged, global::System.Decimal totalPaid)
        {
            TotalBillDocPoses totalBillDocPoses = new TotalBillDocPoses();
            totalBillDocPoses.ID = id;
            totalBillDocPoses.ServiceTypeName = serviceTypeName;
            totalBillDocPoses.Value = value;
            totalBillDocPoses.TotalCharged = totalCharged;
            totalBillDocPoses.TotalPaid = totalPaid;
            return totalBillDocPoses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceTypeName
        {
            get
            {
                return _ServiceTypeName;
            }
            set
            {
                OnServiceTypeNameChanging(value);
                ReportPropertyChanging("ServiceTypeName");
                _ServiceTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServiceTypeName");
                OnServiceTypeNameChanged();
            }
        }
        private global::System.String _ServiceTypeName;
        partial void OnServiceTypeNameChanging(global::System.String value);
        partial void OnServiceTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalCharged
        {
            get
            {
                return _TotalCharged;
            }
            set
            {
                OnTotalChargedChanging(value);
                ReportPropertyChanging("TotalCharged");
                _TotalCharged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCharged");
                OnTotalChargedChanged();
            }
        }
        private global::System.Decimal _TotalCharged;
        partial void OnTotalChargedChanging(global::System.Decimal value);
        partial void OnTotalChargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalPaid
        {
            get
            {
                return _TotalPaid;
            }
            set
            {
                OnTotalPaidChanging(value);
                ReportPropertyChanging("TotalPaid");
                _TotalPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPaid");
                OnTotalPaidChanged();
            }
        }
        private global::System.Decimal _TotalPaid;
        partial void OnTotalPaidChanging(global::System.Decimal value);
        partial void OnTotalPaidChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "TotalBillDocPoses_fk", "TotalBillDocs")]
        public TotalBillDocs TotalBillDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TotalBillDocs>("AlphaDataBaseModel.TotalBillDocPoses_fk", "TotalBillDocs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TotalBillDocs>("AlphaDataBaseModel.TotalBillDocPoses_fk", "TotalBillDocs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TotalBillDocs> TotalBillDocsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TotalBillDocs>("AlphaDataBaseModel.TotalBillDocPoses_fk", "TotalBillDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TotalBillDocs>("AlphaDataBaseModel.TotalBillDocPoses_fk", "TotalBillDocs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="TotalBillDocs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TotalBillDocs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TotalBillDocs object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="square">Initial value of the Square property.</param>
        /// <param name="residentsCount">Initial value of the ResidentsCount property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        public static TotalBillDocs CreateTotalBillDocs(global::System.Int32 id, global::System.DateTime creationDateTime, global::System.String account, global::System.String owner, global::System.String address, global::System.String square, global::System.Int32 residentsCount, global::System.Decimal value, global::System.DateTime period)
        {
            TotalBillDocs totalBillDocs = new TotalBillDocs();
            totalBillDocs.ID = id;
            totalBillDocs.CreationDateTime = creationDateTime;
            totalBillDocs.Account = account;
            totalBillDocs.Owner = owner;
            totalBillDocs.Address = address;
            totalBillDocs.Square = square;
            totalBillDocs.ResidentsCount = residentsCount;
            totalBillDocs.Value = value;
            totalBillDocs.Period = period;
            return totalBillDocs;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Square
        {
            get
            {
                return _Square;
            }
            set
            {
                OnSquareChanging(value);
                ReportPropertyChanging("Square");
                _Square = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Square");
                OnSquareChanged();
            }
        }
        private global::System.String _Square;
        partial void OnSquareChanging(global::System.String value);
        partial void OnSquareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResidentsCount
        {
            get
            {
                return _ResidentsCount;
            }
            set
            {
                OnResidentsCountChanging(value);
                ReportPropertyChanging("ResidentsCount");
                _ResidentsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidentsCount");
                OnResidentsCountChanged();
            }
        }
        private global::System.Int32 _ResidentsCount;
        partial void OnResidentsCountChanging(global::System.Int32 value);
        partial void OnResidentsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.DateTime _Period;
        partial void OnPeriodChanging(global::System.DateTime value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartPeriod
        {
            get
            {
                return _StartPeriod;
            }
            set
            {
                OnStartPeriodChanging(value);
                ReportPropertyChanging("StartPeriod");
                _StartPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartPeriod");
                OnStartPeriodChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartPeriod;
        partial void OnStartPeriodChanging(Nullable<global::System.DateTime> value);
        partial void OnStartPeriodChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "TotalBillDocs_fk", "BillSets")]
        public BillSets BillSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.TotalBillDocs_fk", "BillSets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.TotalBillDocs_fk", "BillSets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BillSets> BillSetsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillSets>("AlphaDataBaseModel.TotalBillDocs_fk", "BillSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BillSets>("AlphaDataBaseModel.TotalBillDocs_fk", "BillSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "TotalBillDocs_fk2", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.TotalBillDocs_fk2", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.TotalBillDocs_fk2", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("AlphaDataBaseModel.TotalBillDocs_fk2", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("AlphaDataBaseModel.TotalBillDocs_fk2", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "TotalBillDocPoses_fk", "TotalBillDocPoses")]
        public EntityCollection<TotalBillDocPoses> TotalBillDocPoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TotalBillDocPoses>("AlphaDataBaseModel.TotalBillDocPoses_fk", "TotalBillDocPoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TotalBillDocPoses>("AlphaDataBaseModel.TotalBillDocPoses_fk", "TotalBillDocPoses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaDataBaseModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="aka">Initial value of the Aka property.</param>
        /// <param name="lockoutEnabled">Initial value of the LockoutEnabled property.</param>
        /// <param name="accessFailedCount">Initial value of the AccessFailedCount property.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String login, global::System.String password, global::System.String aka, global::System.Boolean lockoutEnabled, global::System.Int32 accessFailedCount)
        {
            Users users = new Users();
            users.ID = id;
            users.Login = login;
            users.Password = password;
            users.Aka = aka;
            users.LockoutEnabled = lockoutEnabled;
            users.AccessFailedCount = accessFailedCount;
            return users;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Aka
        {
            get
            {
                return _Aka;
            }
            set
            {
                OnAkaChanging(value);
                ReportPropertyChanging("Aka");
                _Aka = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Aka");
                OnAkaChanged();
            }
        }
        private global::System.String _Aka;
        partial void OnAkaChanging(global::System.String value);
        partial void OnAkaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityStamp
        {
            get
            {
                return _SecurityStamp;
            }
            set
            {
                OnSecurityStampChanging(value);
                ReportPropertyChanging("SecurityStamp");
                _SecurityStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityStamp");
                OnSecurityStampChanged();
            }
        }
        private global::System.String _SecurityStamp;
        partial void OnSecurityStampChanging(global::System.String value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockoutEndDateUtc
        {
            get
            {
                return _LockoutEndDateUtc;
            }
            set
            {
                OnLockoutEndDateUtcChanging(value);
                ReportPropertyChanging("LockoutEndDateUtc");
                _LockoutEndDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockoutEndDateUtc");
                OnLockoutEndDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockoutEndDateUtc;
        partial void OnLockoutEndDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnLockoutEndDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LockoutEnabled
        {
            get
            {
                return _LockoutEnabled;
            }
            set
            {
                OnLockoutEnabledChanging(value);
                ReportPropertyChanging("LockoutEnabled");
                _LockoutEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockoutEnabled");
                OnLockoutEnabledChanged();
            }
        }
        private global::System.Boolean _LockoutEnabled;
        partial void OnLockoutEnabledChanging(global::System.Boolean value);
        partial void OnLockoutEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessFailedCount
        {
            get
            {
                return _AccessFailedCount;
            }
            set
            {
                OnAccessFailedCountChanging(value);
                ReportPropertyChanging("AccessFailedCount");
                _AccessFailedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessFailedCount");
                OnAccessFailedCountChanged();
            }
        }
        private global::System.Int32 _AccessFailedCount;
        partial void OnAccessFailedCountChanging(global::System.Int32 value);
        partial void OnAccessFailedCountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_ChargeSets_Users", "ChargeSets")]
        public EntityCollection<ChargeSets> ChargeSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChargeSets>("AlphaDataBaseModel.FK_ChargeSets_Users", "ChargeSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChargeSets>("AlphaDataBaseModel.FK_ChargeSets_Users", "ChargeSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_PaymentSets_Users", "PaymentSets")]
        public EntityCollection<PaymentSets> PaymentSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentSets>("AlphaDataBaseModel.FK_PaymentSets_Users", "PaymentSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentSets>("AlphaDataBaseModel.FK_PaymentSets_Users", "PaymentSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_RechargeSets_Users", "RechargeSets")]
        public EntityCollection<RechargeSets> RechargeSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RechargeSets>("AlphaDataBaseModel.FK_RechargeSets_Users", "RechargeSets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RechargeSets>("AlphaDataBaseModel.FK_RechargeSets_Users", "RechargeSets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlphaDataBaseModel", "FK_Customers_Users", "Customers")]
        public EntityCollection<Customers> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customers>("AlphaDataBaseModel.FK_Customers_Users", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customers>("AlphaDataBaseModel.FK_Customers_Users", "Customers", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
